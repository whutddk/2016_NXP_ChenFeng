//==============================================================================
//文件名：SPI.h
//说明：SPI构件头文件。
//==============================================================================
#ifndef SPI_H_
#define SPI_H_

#include "common.h"

//宏定义：定义SPI口号。
#define SPI_0  0     //SPI0口。
#define SPI_1  1     //SPI1口。

#define SPI_baseadd(SPI_nub)  (SPI_MemMapPtr)(0x40076000u+SPI_nub*0x00001000u)
//定义主从机模式。

enum spimode
{
	master,
	slave
};

//==============================================================================
//函数名称：SPI_init。
//功能说明：SPI初始化。通信波特率BaudRate = BusClock /16.其中BusClock是系统时钟。
//函数参数：SPI_mode：SPI模式。
//       ：SPI_No：要初始化的SPI口号。	 
//函数返回：0:初始化失败；1：初始化成功。
//==============================================================================
uint_8 SPI_init(uint_8 SPI_No,uint_8 SPI_mode);	

//==============================================================================
//函数名称：SPI_sendonebyte.
//功能说明：SPI发送一字节数据。
//函数参数：SPI_No：串口号。
//       ：ch：需要发送的一字节数据。
//函数返回：0：发送失败；1：发送成功。
//==============================================================================
uint_8 SPI_sendonebyte(uint_8 SPI_No,uint_8 ch);

//==============================================================================
//函数名称：SPI_sendstring.
//功能说明：SPI发送数据。
//函数参数：SPI_No：串口号。
//       ：*p:所发数据的首地址。
//函数返回：无。
//==============================================================================
void SPI_sendstring(uint_8 SPI_No,uint_8 *p);

//==============================================================================
//函数名称：SPI_reonebyte.
//功能说明：SPI接收一个字节的数据
//函数参数：SPI_No：SPI口号。
//函数返回：接收到的数据。
//==============================================================================
uint_8 SPI_reonebyte(uint_8 SPI_No);

//==============================================================================
//函数名称：SPI_receiveN.
//功能说明：SPI接收数据。当n=1时，就是接受一个字节的数据……
//函数参数：SPI_No：SPI口号。
//		 : n:要接收的字节个数。
//       ：data[]:接收到的数据。
// 函数返回：1：接收成功。
//==============================================================================
uint_8 SPI_receiveN(uint_8 SPI_No,uint_32 n,uint_8 data[]);

//==============================================================================
//函数名称：SPI_re_enable_int.
//功能说明：打开SPI接收中断。
//函数参数：SPI_No：SPI口号。
//函数返回：无。
//==============================================================================
void SPI_re_enable_int(uint_8 SPI_No);

#endif
