###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        14/Aug/2016  11:12:33
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\app\ITAC\key.c
#    Command line =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\app\ITAC\key.c
#        -D LPLD_K60 -lCN
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\List\
#        -lB
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\List\
#        -o
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\app\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\app\BSP\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\app\ITAC\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\app\CTL\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\CPU\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\common\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\LPLD\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\FatFs\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\USB\common\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\USB\class\
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\List\key.lst
#    Object file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\Obj\key.o
#
###############################################################################

C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\app\ITAC\key.c
      1          #include "include.h"
      2          #include "key.h"

   \                                 In section .data, align 1
      3          keyboardnote keyboard_ans = _X;
   \                     keyboard_ans:
   \   00000000   0x0C               DC8 12
      4          

   \                                 In section .text, align 2, keep-with-next
      5          void key_init()
      6          {
   \                     key_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
      7            GPIO_InitTypeDef key_inittype;
      8            
      9            key_inittype.GPIO_PTx = PTE;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable4  ;; 0x400ff100
   \   00000008   0x9001             STR      R0,[SP, #+4]
     10            key_inittype.GPIO_Pins = GPIO_Pin6 | GPIO_Pin7 | GPIO_Pin10 | GPIO_Pin11 | GPIO_Pin12; 
   \   0000000A   0xF44F 0x50E6      MOV      R0,#+7360
   \   0000000E   0x9002             STR      R0,[SP, #+8]
     11            key_inittype.GPIO_Dir = DIR_INPUT;        //输入
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xF88D 0x0010      STRB     R0,[SP, #+16]
     12            key_inittype.GPIO_PinControl = INPUT_PULL_UP | IRQC_FA; //上拉 下降沿触发外部中断
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0xa0003
   \   0000001A   0x9003             STR      R0,[SP, #+12]
     13            key_inittype.GPIO_Isr = check_sw;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000020   0x9005             STR      R0,[SP, #+20]
     14            LPLD_GPIO_Init(key_inittype);
   \   00000022   0xA901             ADD      R1,SP,#+4
   \   00000024   0xB084             SUB      SP,SP,#+16
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x2214             MOVS     R2,#+20
   \   0000002A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002E   0xBC0F             POP      {R0-R3}
   \   00000030   0x.... 0x....      BL       LPLD_GPIO_Init
     15            LPLD_GPIO_EnableIrq(key_inittype);
   \   00000034   0xA901             ADD      R1,SP,#+4
   \   00000036   0xB084             SUB      SP,SP,#+16
   \   00000038   0x4668             MOV      R0,SP
   \   0000003A   0x2214             MOVS     R2,#+20
   \   0000003C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000040   0xBC0F             POP      {R0-R3}
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_EnableIrq
     16            
     17            key_inittype.GPIO_PTx = PTA;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   0000004A   0x9001             STR      R0,[SP, #+4]
     18            key_inittype.GPIO_Pins = GPIO_Pin26 | GPIO_Pin27 |  GPIO_Pin29  ; 
   \   0000004C   0xF05F 0x5030      MOVS     R0,#+738197504
   \   00000050   0x9002             STR      R0,[SP, #+8]
     19            key_inittype.GPIO_Dir = DIR_INPUT;        //输入
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0xF88D 0x0010      STRB     R0,[SP, #+16]
     20            key_inittype.GPIO_PinControl = INPUT_PULL_UP | IRQC_DIS; ; //上拉 跳变沿触发外部中断
   \   00000058   0x2003             MOVS     R0,#+3
   \   0000005A   0x9003             STR      R0,[SP, #+12]
     21            key_inittype.GPIO_Isr = NULL;
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x9005             STR      R0,[SP, #+20]
     22            LPLD_GPIO_Init(key_inittype);
   \   00000060   0xA901             ADD      R1,SP,#+4
   \   00000062   0xB084             SUB      SP,SP,#+16
   \   00000064   0x4668             MOV      R0,SP
   \   00000066   0x2214             MOVS     R2,#+20
   \   00000068   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000006C   0xBC0F             POP      {R0-R3}
   \   0000006E   0x.... 0x....      BL       LPLD_GPIO_Init
     23            LPLD_GPIO_EnableIrq(key_inittype);
   \   00000072   0xA901             ADD      R1,SP,#+4
   \   00000074   0xB084             SUB      SP,SP,#+16
   \   00000076   0x4668             MOV      R0,SP
   \   00000078   0x2214             MOVS     R2,#+20
   \   0000007A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000007E   0xBC0F             POP      {R0-R3}
   \   00000080   0x.... 0x....      BL       LPLD_GPIO_EnableIrq
     24          }
   \   00000084   0xB007             ADD      SP,SP,#+28
   \   00000086   0xBD00             POP      {PC}             ;; return
     25          
     26          

   \                                 In section .text, align 2, keep-with-next
     27          uint8 wait_key()
     28          {
   \                     wait_key: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     29            
     30            if ( !KEY_UP )
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable4_4  ;; 0x43fe2218
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD11A             BNE.N    ??wait_key_0
     31            {
     32              BZ_ON;
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x2118             MOVS     R1,#+24
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   00000014   0x.... 0x....      BL       LPLD_GPIO_Output_b
     33              LPLD_LPTMR_DelayMs(1);
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     34              if ( !KEY_UP )
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable4_4  ;; 0x43fe2218
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD10C             BNE.N    ??wait_key_0
     35              {
     36                while( !KEY_UP );
   \                     ??wait_key_1: (+1)
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable4_4  ;; 0x43fe2218
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD0FA             BEQ.N    ??wait_key_1
     37                BZ_OFF;
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0x2118             MOVS     R1,#+24
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   0000003A   0x.... 0x....      BL       LPLD_GPIO_Output_b
     38                return ( 1 );
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0xE086             B.N      ??wait_key_2
     39              }
     40            }
     41              if ( !KEY_LEFT )
   \                     ??wait_key_0: (+1)
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable4_5  ;; 0x43fe221c
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD11A             BNE.N    ??wait_key_3
     42            {
     43              BZ_ON;
   \   0000004C   0x2201             MOVS     R2,#+1
   \   0000004E   0x2118             MOVS     R1,#+24
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   00000054   0x.... 0x....      BL       LPLD_GPIO_Output_b
     44              LPLD_LPTMR_DelayMs(1);
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     45              if ( !KEY_LEFT )
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable4_5  ;; 0x43fe221c
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x2800             CMP      R0,#+0
   \   00000066   0xD10C             BNE.N    ??wait_key_3
     46              {
     47                while( !KEY_LEFT );
   \                     ??wait_key_4: (+1)
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable4_5  ;; 0x43fe221c
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x2800             CMP      R0,#+0
   \   00000070   0xD0FA             BEQ.N    ??wait_key_4
     48                BZ_OFF;
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0x2118             MOVS     R1,#+24
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   0000007A   0x.... 0x....      BL       LPLD_GPIO_Output_b
     49                return ( 2 );
   \   0000007E   0x2002             MOVS     R0,#+2
   \   00000080   0xE066             B.N      ??wait_key_2
     50              }
     51            }
     52              if ( !KEY_RIGHT )
   \                     ??wait_key_3: (+1)
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable4_6  ;; 0x43fe2228
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x2800             CMP      R0,#+0
   \   0000008A   0xD11A             BNE.N    ??wait_key_5
     53            {
     54              BZ_ON;
   \   0000008C   0x2201             MOVS     R2,#+1
   \   0000008E   0x2118             MOVS     R1,#+24
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   00000094   0x.... 0x....      BL       LPLD_GPIO_Output_b
     55              LPLD_LPTMR_DelayMs(1);
   \   00000098   0x2001             MOVS     R0,#+1
   \   0000009A   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     56              if ( !KEY_RIGHT )
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable4_6  ;; 0x43fe2228
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x2800             CMP      R0,#+0
   \   000000A6   0xD10C             BNE.N    ??wait_key_5
     57              {  
     58                while( !KEY_RIGHT );
   \                     ??wait_key_6: (+1)
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable4_6  ;; 0x43fe2228
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xD0FA             BEQ.N    ??wait_key_6
     59                BZ_OFF;
   \   000000B2   0x2200             MOVS     R2,#+0
   \   000000B4   0x2118             MOVS     R1,#+24
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   000000BA   0x.... 0x....      BL       LPLD_GPIO_Output_b
     60                return ( 3 );
   \   000000BE   0x2003             MOVS     R0,#+3
   \   000000C0   0xE046             B.N      ??wait_key_2
     61              }
     62            }
     63              if ( !KEY_DOWN )
   \                     ??wait_key_5: (+1)
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable4_7  ;; 0x43fe222c
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0x2800             CMP      R0,#+0
   \   000000CA   0xD11A             BNE.N    ??wait_key_7
     64            {
     65              BZ_ON;
   \   000000CC   0x2201             MOVS     R2,#+1
   \   000000CE   0x2118             MOVS     R1,#+24
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   000000D4   0x.... 0x....      BL       LPLD_GPIO_Output_b
     66              LPLD_LPTMR_DelayMs(1);
   \   000000D8   0x2001             MOVS     R0,#+1
   \   000000DA   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     67              if ( !KEY_DOWN)
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable4_7  ;; 0x43fe222c
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0x2800             CMP      R0,#+0
   \   000000E6   0xD10C             BNE.N    ??wait_key_7
     68              {
     69                while( !KEY_DOWN );
   \                     ??wait_key_8: (+1)
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable4_7  ;; 0x43fe222c
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x2800             CMP      R0,#+0
   \   000000F0   0xD0FA             BEQ.N    ??wait_key_8
     70                BZ_OFF;
   \   000000F2   0x2200             MOVS     R2,#+0
   \   000000F4   0x2118             MOVS     R1,#+24
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   000000FA   0x.... 0x....      BL       LPLD_GPIO_Output_b
     71                return ( 4 );
   \   000000FE   0x2004             MOVS     R0,#+4
   \   00000100   0xE026             B.N      ??wait_key_2
     72              }
     73            }
     74              if ( !KEY_CLICK )
   \                     ??wait_key_7: (+1)
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable4_8  ;; 0x43fe2230
   \   00000106   0x6800             LDR      R0,[R0, #+0]
   \   00000108   0x2800             CMP      R0,#+0
   \   0000010A   0xD11A             BNE.N    ??wait_key_9
     75            {
     76              BZ_ON;
   \   0000010C   0x2201             MOVS     R2,#+1
   \   0000010E   0x2118             MOVS     R1,#+24
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   00000114   0x.... 0x....      BL       LPLD_GPIO_Output_b
     77              LPLD_LPTMR_DelayMs(1);
   \   00000118   0x2001             MOVS     R0,#+1
   \   0000011A   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     78              if ( !KEY_CLICK )
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable4_8  ;; 0x43fe2230
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0x2800             CMP      R0,#+0
   \   00000126   0xD10C             BNE.N    ??wait_key_9
     79              {
     80                while( !KEY_CLICK );
   \                     ??wait_key_10: (+1)
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable4_8  ;; 0x43fe2230
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x2800             CMP      R0,#+0
   \   00000130   0xD0FA             BEQ.N    ??wait_key_10
     81                BZ_OFF;
   \   00000132   0x2200             MOVS     R2,#+0
   \   00000134   0x2118             MOVS     R1,#+24
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   0000013A   0x.... 0x....      BL       LPLD_GPIO_Output_b
     82                return ( 5 );
   \   0000013E   0x2005             MOVS     R0,#+5
   \   00000140   0xE006             B.N      ??wait_key_2
     83              }
     84            }
     85            BZ_OFF;
   \                     ??wait_key_9: (+1)
   \   00000142   0x2200             MOVS     R2,#+0
   \   00000144   0x2118             MOVS     R1,#+24
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   0000014A   0x.... 0x....      BL       LPLD_GPIO_Output_b
     86            return 0;
   \   0000014E   0x2000             MOVS     R0,#+0
   \                     ??wait_key_2: (+1)
   \   00000150   0xBD02             POP      {R1,PC}          ;; return
     87          }
     88          
     89          

   \                                 In section .text, align 2, keep-with-next
     90          void  keyboard_init()
     91          {
   \                     keyboard_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     92            //四个输出高电平
     93            GPIO_InitTypeDef gpio_inittype;
     94            gpio_inittype.GPIO_PTx = PTD;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable4_9  ;; 0x400ff0c0
   \   00000008   0x9001             STR      R0,[SP, #+4]
     95            gpio_inittype.GPIO_Pins = GPIO_Pin8 | GPIO_Pin9 | GPIO_Pin10 | GPIO_Pin11;
   \   0000000A   0xF44F 0x6070      MOV      R0,#+3840
   \   0000000E   0x9002             STR      R0,[SP, #+8]
     96            gpio_inittype.GPIO_Dir = DIR_OUTPUT;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xF88D 0x0010      STRB     R0,[SP, #+16]
     97            gpio_inittype.GPIO_Output = OUTPUT_H;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0xF88D 0x0011      STRB     R0,[SP, #+17]
     98            gpio_inittype.GPIO_PinControl = IRQC_DIS | INPUT_PULL_DOWN ;
   \   0000001C   0x2002             MOVS     R0,#+2
   \   0000001E   0x9003             STR      R0,[SP, #+12]
     99            LPLD_GPIO_Init(gpio_inittype);
   \   00000020   0xA901             ADD      R1,SP,#+4
   \   00000022   0xB084             SUB      SP,SP,#+16
   \   00000024   0x4668             MOV      R0,SP
   \   00000026   0x2214             MOVS     R2,#+20
   \   00000028   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002C   0xBC0F             POP      {R0-R3}
   \   0000002E   0x.... 0x....      BL       LPLD_GPIO_Init
    100            
    101            //四个下拉，读电平
    102            gpio_inittype.GPIO_PTx = PTD;
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable4_9  ;; 0x400ff0c0
   \   00000036   0x9001             STR      R0,[SP, #+4]
    103            gpio_inittype.GPIO_Pins = GPIO_Pin12 | GPIO_Pin13 | GPIO_Pin14 | GPIO_Pin15  ;
   \   00000038   0xF44F 0x4070      MOV      R0,#+61440
   \   0000003C   0x9002             STR      R0,[SP, #+8]
    104            gpio_inittype.GPIO_Dir = DIR_INPUT;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0xF88D 0x0010      STRB     R0,[SP, #+16]
    105            gpio_inittype.GPIO_Output = OUTPUT_H;
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0xF88D 0x0011      STRB     R0,[SP, #+17]
    106            gpio_inittype.GPIO_PinControl = IRQC_RI | INPUT_PULL_DOWN ;//下拉，上升沿中断
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable4_10  ;; 0x90002
   \   0000004E   0x9003             STR      R0,[SP, #+12]
    107            gpio_inittype.GPIO_Isr = check_keyboard;
   \   00000050   0x.... 0x....      ADR.W    R0,check_keyboard
   \   00000054   0x9005             STR      R0,[SP, #+20]
    108            LPLD_GPIO_Init(gpio_inittype);
   \   00000056   0xA901             ADD      R1,SP,#+4
   \   00000058   0xB084             SUB      SP,SP,#+16
   \   0000005A   0x4668             MOV      R0,SP
   \   0000005C   0x2214             MOVS     R2,#+20
   \   0000005E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000062   0xBC0F             POP      {R0-R3}
   \   00000064   0x.... 0x....      BL       LPLD_GPIO_Init
    109            LPLD_GPIO_EnableIrq(gpio_inittype);
   \   00000068   0xA901             ADD      R1,SP,#+4
   \   0000006A   0xB084             SUB      SP,SP,#+16
   \   0000006C   0x4668             MOV      R0,SP
   \   0000006E   0x2214             MOVS     R2,#+20
   \   00000070   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000074   0xBC0F             POP      {R0-R3}
   \   00000076   0x.... 0x....      BL       LPLD_GPIO_EnableIrq
    110            
    111          }
   \   0000007A   0xB007             ADD      SP,SP,#+28
   \   0000007C   0xBD00             POP      {PC}             ;; return
    112          

   \                                 In section .text, align 4, keep-with-next
    113          void check_keyboard()
    114          {
   \                     check_keyboard: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    115            GPIO_InitTypeDef gpio_inittype;
    116            
    117            BZ_ON;
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x2118             MOVS     R1,#+24
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x400ff000
   \   0000000C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    118          
    119            gpio_inittype.GPIO_PTx = PTD;
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable4_9  ;; 0x400ff0c0
   \   00000014   0x9001             STR      R0,[SP, #+4]
    120            gpio_inittype.GPIO_Pins = GPIO_Pin12 | GPIO_Pin13 | GPIO_Pin14 | GPIO_Pin15  ;
   \   00000016   0xF44F 0x4070      MOV      R0,#+61440
   \   0000001A   0x9002             STR      R0,[SP, #+8]
    121            
    122            LPLD_GPIO_DisableIrq(gpio_inittype);
   \   0000001C   0xA901             ADD      R1,SP,#+4
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x2214             MOVS     R2,#+20
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_GPIO_DisableIrq
    123            
    124            if (LPLD_GPIO_IsPinxExt(PORTD, GPIO_Pin12))
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable4_11  ;; 0x4004c0a0
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x04C0             LSLS     R0,R0,#+19
   \   00000036   0xD562             BPL.N    ??check_keyboard_0
    125            {
    126              LPLD_GPIO_ClearIntFlag(PORTD);
   \   00000038   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable4_11  ;; 0x4004c0a0
   \   00000040   0x6008             STR      R0,[R1, #+0]
    127              LPLD_GPIO_DisableIrq(gpio_inittype);
   \   00000042   0xA901             ADD      R1,SP,#+4
   \   00000044   0xB084             SUB      SP,SP,#+16
   \   00000046   0x4668             MOV      R0,SP
   \   00000048   0x2214             MOVS     R2,#+20
   \   0000004A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000004E   0xBC0F             POP      {R0-R3}
   \   00000050   0x.... 0x....      BL       LPLD_GPIO_DisableIrq
    128              
    129              
    130              DDRD12 = 1 ;//输出
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable4_12  ;; 0x43fe1ab0
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    131              PTD12_O = 1;//输出0；
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable4_13  ;; 0x43fe1830
   \   00000062   0x6008             STR      R0,[R1, #+0]
    132              PTD8_O = PTD9_O = PTD10_O = PTD11_O = 0;
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable4_14  ;; 0x43fe182c
   \   0000006A   0x6008             STR      R0,[R1, #+0]
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable4_15  ;; 0x43fe1828
   \   00000070   0x6008             STR      R0,[R1, #+0]
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable4_16  ;; 0x43fe1824
   \   00000076   0x6008             STR      R0,[R1, #+0]
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable4_17  ;; 0x43fe1820
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    133              DDRD8 = DDRD9 = DDRD10 = DDRD11 = 0; //输入 
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable4_18  ;; 0x43fe1aac
   \   00000084   0x6008             STR      R0,[R1, #+0]
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable4_19  ;; 0x43fe1aa8
   \   0000008A   0x6008             STR      R0,[R1, #+0]
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable4_20  ;; 0x43fe1aa4
   \   00000090   0x6008             STR      R0,[R1, #+0]
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable4_21  ;; 0x43fe1aa0
   \   00000096   0x6008             STR      R0,[R1, #+0]
    134              
    135              if ( PTD8_I )
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable4_22  ;; 0x43fe1a20
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x2800             CMP      R0,#+0
   \   000000A0   0xD008             BEQ.N    ??check_keyboard_1
    136              {    
    137                while(PTD8_I);
   \                     ??check_keyboard_2: (+1)
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable4_22  ;; 0x43fe1a20
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0x2800             CMP      R0,#+0
   \   000000AA   0xD1FA             BNE.N    ??check_keyboard_2
    138                
    139                keyboard_ans = _D;
   \   000000AC   0x200F             MOVS     R0,#+15
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable4_23
   \   000000B2   0x7008             STRB     R0,[R1, #+0]
    140              }
    141              if ( PTD9_I )
   \                     ??check_keyboard_1: (+1)
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable4_24  ;; 0x43fe1a24
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x2800             CMP      R0,#+0
   \   000000BC   0xD007             BEQ.N    ??check_keyboard_3
    142              {
    143                while(PTD9_I);
   \                     ??check_keyboard_4: (+1)
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable4_24  ;; 0x43fe1a24
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0x2800             CMP      R0,#+0
   \   000000C6   0xD1FA             BNE.N    ??check_keyboard_4
    144                
    145                keyboard_ans = _J;
   \   000000C8   0x200E             MOVS     R0,#+14
   \   000000CA   0x....             LDR.N    R1,??DataTable4_23
   \   000000CC   0x7008             STRB     R0,[R1, #+0]
    146              }
    147              if ( PTD10_I )
   \                     ??check_keyboard_3: (+1)
   \   000000CE   0x....             LDR.N    R0,??DataTable4_25  ;; 0x43fe1a28
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0x2800             CMP      R0,#+0
   \   000000D4   0xD006             BEQ.N    ??check_keyboard_5
    148              {
    149                while(PTD10_I);
   \                     ??check_keyboard_6: (+1)
   \   000000D6   0x....             LDR.N    R0,??DataTable4_25  ;; 0x43fe1a28
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x2800             CMP      R0,#+0
   \   000000DC   0xD1FB             BNE.N    ??check_keyboard_6
    150                
    151                keyboard_ans = _0;
   \   000000DE   0x200D             MOVS     R0,#+13
   \   000000E0   0x....             LDR.N    R1,??DataTable4_23
   \   000000E2   0x7008             STRB     R0,[R1, #+0]
    152              }
    153              if ( PTD11_I )
   \                     ??check_keyboard_5: (+1)
   \   000000E4   0x....             LDR.N    R0,??DataTable4_26  ;; 0x43fe1a2c
   \   000000E6   0x6800             LDR      R0,[R0, #+0]
   \   000000E8   0x2800             CMP      R0,#+0
   \   000000EA   0xD006             BEQ.N    ??check_keyboard_7
    154              {
    155                while(PTD11_I);
   \                     ??check_keyboard_8: (+1)
   \   000000EC   0x....             LDR.N    R0,??DataTable4_26  ;; 0x43fe1a2c
   \   000000EE   0x6800             LDR      R0,[R0, #+0]
   \   000000F0   0x2800             CMP      R0,#+0
   \   000000F2   0xD1FB             BNE.N    ??check_keyboard_8
    156                
    157                keyboard_ans = _X;
   \   000000F4   0x200C             MOVS     R0,#+12
   \   000000F6   0x....             LDR.N    R1,??DataTable4_23
   \   000000F8   0x7008             STRB     R0,[R1, #+0]
    158              }
    159              deal_keyboard();
   \                     ??check_keyboard_7: (+1)
   \   000000FA   0x.... 0x....      BL       deal_keyboard
    160            }
    161            
    162            if (LPLD_GPIO_IsPinxExt(PORTD, GPIO_Pin13))
   \                     ??check_keyboard_0: (+1)
   \   000000FE   0x....             LDR.N    R0,??DataTable4_11  ;; 0x4004c0a0
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x0480             LSLS     R0,R0,#+18
   \   00000104   0xD552             BPL.N    ??check_keyboard_9
    163            {
    164              LPLD_GPIO_ClearIntFlag(PORTD);
   \   00000106   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000010A   0x....             LDR.N    R1,??DataTable4_11  ;; 0x4004c0a0
   \   0000010C   0x6008             STR      R0,[R1, #+0]
    165              LPLD_GPIO_DisableIrq(gpio_inittype);
   \   0000010E   0xA901             ADD      R1,SP,#+4
   \   00000110   0xB084             SUB      SP,SP,#+16
   \   00000112   0x4668             MOV      R0,SP
   \   00000114   0x2214             MOVS     R2,#+20
   \   00000116   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000011A   0xBC0F             POP      {R0-R3}
   \   0000011C   0x.... 0x....      BL       LPLD_GPIO_DisableIrq
    166              
    167              DDRD13 = 1 ;//输出
   \   00000120   0x2001             MOVS     R0,#+1
   \   00000122   0x....             LDR.N    R1,??DataTable4_27  ;; 0x43fe1ab4
   \   00000124   0x6008             STR      R0,[R1, #+0]
    168              PTD13_O = 1;//输出0；
   \   00000126   0x2001             MOVS     R0,#+1
   \   00000128   0x....             LDR.N    R1,??DataTable4_28  ;; 0x43fe1834
   \   0000012A   0x6008             STR      R0,[R1, #+0]
    169              PTD8_O = PTD9_O = PTD10_O = PTD11_O = 0;
   \   0000012C   0x2000             MOVS     R0,#+0
   \   0000012E   0x....             LDR.N    R1,??DataTable4_14  ;; 0x43fe182c
   \   00000130   0x6008             STR      R0,[R1, #+0]
   \   00000132   0x....             LDR.N    R1,??DataTable4_15  ;; 0x43fe1828
   \   00000134   0x6008             STR      R0,[R1, #+0]
   \   00000136   0x....             LDR.N    R1,??DataTable4_16  ;; 0x43fe1824
   \   00000138   0x6008             STR      R0,[R1, #+0]
   \   0000013A   0x....             LDR.N    R1,??DataTable4_17  ;; 0x43fe1820
   \   0000013C   0x6008             STR      R0,[R1, #+0]
    170              DDRD8 = DDRD9 = DDRD10 = DDRD11 = 0; //输入
   \   0000013E   0x2000             MOVS     R0,#+0
   \   00000140   0x....             LDR.N    R1,??DataTable4_18  ;; 0x43fe1aac
   \   00000142   0x6008             STR      R0,[R1, #+0]
   \   00000144   0x....             LDR.N    R1,??DataTable4_19  ;; 0x43fe1aa8
   \   00000146   0x6008             STR      R0,[R1, #+0]
   \   00000148   0x....             LDR.N    R1,??DataTable4_20  ;; 0x43fe1aa4
   \   0000014A   0x6008             STR      R0,[R1, #+0]
   \   0000014C   0x....             LDR.N    R1,??DataTable4_21  ;; 0x43fe1aa0
   \   0000014E   0x6008             STR      R0,[R1, #+0]
    171              if ( PTD8_I )
   \   00000150   0x....             LDR.N    R0,??DataTable4_22  ;; 0x43fe1a20
   \   00000152   0x6800             LDR      R0,[R0, #+0]
   \   00000154   0x2800             CMP      R0,#+0
   \   00000156   0xD006             BEQ.N    ??check_keyboard_10
    172              {     
    173                while(PTD8_I);
   \                     ??check_keyboard_11: (+1)
   \   00000158   0x....             LDR.N    R0,??DataTable4_22  ;; 0x43fe1a20
   \   0000015A   0x6800             LDR      R0,[R0, #+0]
   \   0000015C   0x2800             CMP      R0,#+0
   \   0000015E   0xD1FB             BNE.N    ??check_keyboard_11
    174                
    175                keyboard_ans = _C;
   \   00000160   0x200B             MOVS     R0,#+11
   \   00000162   0x....             LDR.N    R1,??DataTable4_23
   \   00000164   0x7008             STRB     R0,[R1, #+0]
    176              }
    177              if ( PTD9_I )
   \                     ??check_keyboard_10: (+1)
   \   00000166   0x....             LDR.N    R0,??DataTable4_24  ;; 0x43fe1a24
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0x2800             CMP      R0,#+0
   \   0000016C   0xD006             BEQ.N    ??check_keyboard_12
    178              {
    179                while(PTD9_I);
   \                     ??check_keyboard_13: (+1)
   \   0000016E   0x....             LDR.N    R0,??DataTable4_24  ;; 0x43fe1a24
   \   00000170   0x6800             LDR      R0,[R0, #+0]
   \   00000172   0x2800             CMP      R0,#+0
   \   00000174   0xD1FB             BNE.N    ??check_keyboard_13
    180                
    181                keyboard_ans = _9;
   \   00000176   0x200A             MOVS     R0,#+10
   \   00000178   0x....             LDR.N    R1,??DataTable4_23
   \   0000017A   0x7008             STRB     R0,[R1, #+0]
    182              }
    183              if ( PTD10_I )
   \                     ??check_keyboard_12: (+1)
   \   0000017C   0x....             LDR.N    R0,??DataTable4_25  ;; 0x43fe1a28
   \   0000017E   0x6800             LDR      R0,[R0, #+0]
   \   00000180   0x2800             CMP      R0,#+0
   \   00000182   0xD006             BEQ.N    ??check_keyboard_14
    184              {
    185                while(PTD10_I);
   \                     ??check_keyboard_15: (+1)
   \   00000184   0x....             LDR.N    R0,??DataTable4_25  ;; 0x43fe1a28
   \   00000186   0x6800             LDR      R0,[R0, #+0]
   \   00000188   0x2800             CMP      R0,#+0
   \   0000018A   0xD1FB             BNE.N    ??check_keyboard_15
    186                
    187                keyboard_ans = _8;
   \   0000018C   0x2009             MOVS     R0,#+9
   \   0000018E   0x....             LDR.N    R1,??DataTable4_23
   \   00000190   0x7008             STRB     R0,[R1, #+0]
    188              }
    189              if ( PTD11_I )
   \                     ??check_keyboard_14: (+1)
   \   00000192   0x....             LDR.N    R0,??DataTable4_26  ;; 0x43fe1a2c
   \   00000194   0x6800             LDR      R0,[R0, #+0]
   \   00000196   0x2800             CMP      R0,#+0
   \   00000198   0xD006             BEQ.N    ??check_keyboard_16
    190              {
    191                while(PTD11_I);
   \                     ??check_keyboard_17: (+1)
   \   0000019A   0x....             LDR.N    R0,??DataTable4_26  ;; 0x43fe1a2c
   \   0000019C   0x6800             LDR      R0,[R0, #+0]
   \   0000019E   0x2800             CMP      R0,#+0
   \   000001A0   0xD1FB             BNE.N    ??check_keyboard_17
    192                
    193                keyboard_ans = _7;
   \   000001A2   0x2008             MOVS     R0,#+8
   \   000001A4   0x....             LDR.N    R1,??DataTable4_23
   \   000001A6   0x7008             STRB     R0,[R1, #+0]
    194              }
    195              deal_keyboard();
   \                     ??check_keyboard_16: (+1)
   \   000001A8   0x.... 0x....      BL       deal_keyboard
    196            }  
    197            
    198            if (LPLD_GPIO_IsPinxExt(PORTD, GPIO_Pin14))
   \                     ??check_keyboard_9: (+1)
   \   000001AC   0x....             LDR.N    R0,??DataTable4_11  ;; 0x4004c0a0
   \   000001AE   0x6800             LDR      R0,[R0, #+0]
   \   000001B0   0x0440             LSLS     R0,R0,#+17
   \   000001B2   0xD552             BPL.N    ??check_keyboard_18
    199            {
    200              LPLD_GPIO_ClearIntFlag(PORTD);
   \   000001B4   0xF05F 0x30FF      MOVS     R0,#-1
   \   000001B8   0x....             LDR.N    R1,??DataTable4_11  ;; 0x4004c0a0
   \   000001BA   0x6008             STR      R0,[R1, #+0]
    201              LPLD_GPIO_DisableIrq(gpio_inittype);  
   \   000001BC   0xA901             ADD      R1,SP,#+4
   \   000001BE   0xB084             SUB      SP,SP,#+16
   \   000001C0   0x4668             MOV      R0,SP
   \   000001C2   0x2214             MOVS     R2,#+20
   \   000001C4   0x.... 0x....      BL       __aeabi_memcpy4
   \   000001C8   0xBC0F             POP      {R0-R3}
   \   000001CA   0x.... 0x....      BL       LPLD_GPIO_DisableIrq
    202              
    203              DDRD14 = 1 ;//输出
   \   000001CE   0x2001             MOVS     R0,#+1
   \   000001D0   0x....             LDR.N    R1,??DataTable4_29  ;; 0x43fe1ab8
   \   000001D2   0x6008             STR      R0,[R1, #+0]
    204              PTD14_O = 1;//输出0；
   \   000001D4   0x2001             MOVS     R0,#+1
   \   000001D6   0x....             LDR.N    R1,??DataTable4_30  ;; 0x43fe1838
   \   000001D8   0x6008             STR      R0,[R1, #+0]
    205              PTD8_O = PTD9_O = PTD10_O = PTD11_O = 0;
   \   000001DA   0x2000             MOVS     R0,#+0
   \   000001DC   0x....             LDR.N    R1,??DataTable4_14  ;; 0x43fe182c
   \   000001DE   0x6008             STR      R0,[R1, #+0]
   \   000001E0   0x....             LDR.N    R1,??DataTable4_15  ;; 0x43fe1828
   \   000001E2   0x6008             STR      R0,[R1, #+0]
   \   000001E4   0x....             LDR.N    R1,??DataTable4_16  ;; 0x43fe1824
   \   000001E6   0x6008             STR      R0,[R1, #+0]
   \   000001E8   0x....             LDR.N    R1,??DataTable4_17  ;; 0x43fe1820
   \   000001EA   0x6008             STR      R0,[R1, #+0]
    206              DDRD8 = DDRD9 = DDRD10 = DDRD11 = 0; //输入
   \   000001EC   0x2000             MOVS     R0,#+0
   \   000001EE   0x....             LDR.N    R1,??DataTable4_18  ;; 0x43fe1aac
   \   000001F0   0x6008             STR      R0,[R1, #+0]
   \   000001F2   0x....             LDR.N    R1,??DataTable4_19  ;; 0x43fe1aa8
   \   000001F4   0x6008             STR      R0,[R1, #+0]
   \   000001F6   0x....             LDR.N    R1,??DataTable4_20  ;; 0x43fe1aa4
   \   000001F8   0x6008             STR      R0,[R1, #+0]
   \   000001FA   0x....             LDR.N    R1,??DataTable4_21  ;; 0x43fe1aa0
   \   000001FC   0x6008             STR      R0,[R1, #+0]
    207              if ( PTD8_I )
   \   000001FE   0x....             LDR.N    R0,??DataTable4_22  ;; 0x43fe1a20
   \   00000200   0x6800             LDR      R0,[R0, #+0]
   \   00000202   0x2800             CMP      R0,#+0
   \   00000204   0xD006             BEQ.N    ??check_keyboard_19
    208              {     
    209                while(PTD8_I);
   \                     ??check_keyboard_20: (+1)
   \   00000206   0x....             LDR.N    R0,??DataTable4_22  ;; 0x43fe1a20
   \   00000208   0x6800             LDR      R0,[R0, #+0]
   \   0000020A   0x2800             CMP      R0,#+0
   \   0000020C   0xD1FB             BNE.N    ??check_keyboard_20
    210                
    211                keyboard_ans = _B;
   \   0000020E   0x2007             MOVS     R0,#+7
   \   00000210   0x....             LDR.N    R1,??DataTable4_23
   \   00000212   0x7008             STRB     R0,[R1, #+0]
    212              }
    213              if ( PTD9_I )
   \                     ??check_keyboard_19: (+1)
   \   00000214   0x....             LDR.N    R0,??DataTable4_24  ;; 0x43fe1a24
   \   00000216   0x6800             LDR      R0,[R0, #+0]
   \   00000218   0x2800             CMP      R0,#+0
   \   0000021A   0xD006             BEQ.N    ??check_keyboard_21
    214              {
    215                while(PTD9_I);
   \                     ??check_keyboard_22: (+1)
   \   0000021C   0x....             LDR.N    R0,??DataTable4_24  ;; 0x43fe1a24
   \   0000021E   0x6800             LDR      R0,[R0, #+0]
   \   00000220   0x2800             CMP      R0,#+0
   \   00000222   0xD1FB             BNE.N    ??check_keyboard_22
    216                
    217                keyboard_ans = _6;
   \   00000224   0x2006             MOVS     R0,#+6
   \   00000226   0x....             LDR.N    R1,??DataTable4_23
   \   00000228   0x7008             STRB     R0,[R1, #+0]
    218              }
    219              if ( PTD10_I )
   \                     ??check_keyboard_21: (+1)
   \   0000022A   0x....             LDR.N    R0,??DataTable4_25  ;; 0x43fe1a28
   \   0000022C   0x6800             LDR      R0,[R0, #+0]
   \   0000022E   0x2800             CMP      R0,#+0
   \   00000230   0xD006             BEQ.N    ??check_keyboard_23
    220              {
    221                while(PTD10_I);
   \                     ??check_keyboard_24: (+1)
   \   00000232   0x....             LDR.N    R0,??DataTable4_25  ;; 0x43fe1a28
   \   00000234   0x6800             LDR      R0,[R0, #+0]
   \   00000236   0x2800             CMP      R0,#+0
   \   00000238   0xD1FB             BNE.N    ??check_keyboard_24
    222                
    223                keyboard_ans = _5;
   \   0000023A   0x2005             MOVS     R0,#+5
   \   0000023C   0x....             LDR.N    R1,??DataTable4_23
   \   0000023E   0x7008             STRB     R0,[R1, #+0]
    224              }
    225              if ( PTD11_I )
   \                     ??check_keyboard_23: (+1)
   \   00000240   0x....             LDR.N    R0,??DataTable4_26  ;; 0x43fe1a2c
   \   00000242   0x6800             LDR      R0,[R0, #+0]
   \   00000244   0x2800             CMP      R0,#+0
   \   00000246   0xD006             BEQ.N    ??check_keyboard_25
    226              {
    227                while(PTD11_I);
   \                     ??check_keyboard_26: (+1)
   \   00000248   0x....             LDR.N    R0,??DataTable4_26  ;; 0x43fe1a2c
   \   0000024A   0x6800             LDR      R0,[R0, #+0]
   \   0000024C   0x2800             CMP      R0,#+0
   \   0000024E   0xD1FB             BNE.N    ??check_keyboard_26
    228                
    229                keyboard_ans = _4;
   \   00000250   0x2004             MOVS     R0,#+4
   \   00000252   0x....             LDR.N    R1,??DataTable4_23
   \   00000254   0x7008             STRB     R0,[R1, #+0]
    230              }
    231              deal_keyboard();
   \                     ??check_keyboard_25: (+1)
   \   00000256   0x.... 0x....      BL       deal_keyboard
    232            } 
    233            
    234            if (LPLD_GPIO_IsPinxExt(PORTD, GPIO_Pin15))
   \                     ??check_keyboard_18: (+1)
   \   0000025A   0x....             LDR.N    R0,??DataTable4_11  ;; 0x4004c0a0
   \   0000025C   0x6800             LDR      R0,[R0, #+0]
   \   0000025E   0x0400             LSLS     R0,R0,#+16
   \   00000260   0xD552             BPL.N    ??check_keyboard_27
    235            {
    236              LPLD_GPIO_ClearIntFlag(PORTD);
   \   00000262   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000266   0x....             LDR.N    R1,??DataTable4_11  ;; 0x4004c0a0
   \   00000268   0x6008             STR      R0,[R1, #+0]
    237              LPLD_GPIO_DisableIrq(gpio_inittype);  
   \   0000026A   0xA901             ADD      R1,SP,#+4
   \   0000026C   0xB084             SUB      SP,SP,#+16
   \   0000026E   0x4668             MOV      R0,SP
   \   00000270   0x2214             MOVS     R2,#+20
   \   00000272   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000276   0xBC0F             POP      {R0-R3}
   \   00000278   0x.... 0x....      BL       LPLD_GPIO_DisableIrq
    238              
    239              
    240              DDRD15 = 1 ;//输出
   \   0000027C   0x2001             MOVS     R0,#+1
   \   0000027E   0x....             LDR.N    R1,??DataTable4_31  ;; 0x43fe1abc
   \   00000280   0x6008             STR      R0,[R1, #+0]
    241              PTD15_O = 1;//输出0；
   \   00000282   0x2001             MOVS     R0,#+1
   \   00000284   0x....             LDR.N    R1,??DataTable4_32  ;; 0x43fe183c
   \   00000286   0x6008             STR      R0,[R1, #+0]
    242              PTD8_O = PTD9_O = PTD10_O = PTD11_O = 0;
   \   00000288   0x2000             MOVS     R0,#+0
   \   0000028A   0x....             LDR.N    R1,??DataTable4_14  ;; 0x43fe182c
   \   0000028C   0x6008             STR      R0,[R1, #+0]
   \   0000028E   0x....             LDR.N    R1,??DataTable4_15  ;; 0x43fe1828
   \   00000290   0x6008             STR      R0,[R1, #+0]
   \   00000292   0x....             LDR.N    R1,??DataTable4_16  ;; 0x43fe1824
   \   00000294   0x6008             STR      R0,[R1, #+0]
   \   00000296   0x....             LDR.N    R1,??DataTable4_17  ;; 0x43fe1820
   \   00000298   0x6008             STR      R0,[R1, #+0]
    243              DDRD8 = DDRD9 = DDRD10 = DDRD11 = 0; //输入
   \   0000029A   0x2000             MOVS     R0,#+0
   \   0000029C   0x....             LDR.N    R1,??DataTable4_18  ;; 0x43fe1aac
   \   0000029E   0x6008             STR      R0,[R1, #+0]
   \   000002A0   0x....             LDR.N    R1,??DataTable4_19  ;; 0x43fe1aa8
   \   000002A2   0x6008             STR      R0,[R1, #+0]
   \   000002A4   0x....             LDR.N    R1,??DataTable4_20  ;; 0x43fe1aa4
   \   000002A6   0x6008             STR      R0,[R1, #+0]
   \   000002A8   0x....             LDR.N    R1,??DataTable4_21  ;; 0x43fe1aa0
   \   000002AA   0x6008             STR      R0,[R1, #+0]
    244              if ( PTD8_I )
   \   000002AC   0x....             LDR.N    R0,??DataTable4_22  ;; 0x43fe1a20
   \   000002AE   0x6800             LDR      R0,[R0, #+0]
   \   000002B0   0x2800             CMP      R0,#+0
   \   000002B2   0xD006             BEQ.N    ??check_keyboard_28
    245              {
    246                while(PTD8_I);
   \                     ??check_keyboard_29: (+1)
   \   000002B4   0x....             LDR.N    R0,??DataTable4_22  ;; 0x43fe1a20
   \   000002B6   0x6800             LDR      R0,[R0, #+0]
   \   000002B8   0x2800             CMP      R0,#+0
   \   000002BA   0xD1FB             BNE.N    ??check_keyboard_29
    247                
    248                keyboard_ans = _A;
   \   000002BC   0x2003             MOVS     R0,#+3
   \   000002BE   0x....             LDR.N    R1,??DataTable4_23
   \   000002C0   0x7008             STRB     R0,[R1, #+0]
    249              }
    250              if ( PTD9_I )
   \                     ??check_keyboard_28: (+1)
   \   000002C2   0x....             LDR.N    R0,??DataTable4_24  ;; 0x43fe1a24
   \   000002C4   0x6800             LDR      R0,[R0, #+0]
   \   000002C6   0x2800             CMP      R0,#+0
   \   000002C8   0xD006             BEQ.N    ??check_keyboard_30
    251              {
    252                while(PTD9_I);
   \                     ??check_keyboard_31: (+1)
   \   000002CA   0x....             LDR.N    R0,??DataTable4_24  ;; 0x43fe1a24
   \   000002CC   0x6800             LDR      R0,[R0, #+0]
   \   000002CE   0x2800             CMP      R0,#+0
   \   000002D0   0xD1FB             BNE.N    ??check_keyboard_31
    253                
    254                keyboard_ans = _3;
   \   000002D2   0x2002             MOVS     R0,#+2
   \   000002D4   0x....             LDR.N    R1,??DataTable4_23
   \   000002D6   0x7008             STRB     R0,[R1, #+0]
    255              }
    256              if ( PTD10_I )
   \                     ??check_keyboard_30: (+1)
   \   000002D8   0x....             LDR.N    R0,??DataTable4_25  ;; 0x43fe1a28
   \   000002DA   0x6800             LDR      R0,[R0, #+0]
   \   000002DC   0x2800             CMP      R0,#+0
   \   000002DE   0xD006             BEQ.N    ??check_keyboard_32
    257              {
    258                while(PTD10_I);
   \                     ??check_keyboard_33: (+1)
   \   000002E0   0x....             LDR.N    R0,??DataTable4_25  ;; 0x43fe1a28
   \   000002E2   0x6800             LDR      R0,[R0, #+0]
   \   000002E4   0x2800             CMP      R0,#+0
   \   000002E6   0xD1FB             BNE.N    ??check_keyboard_33
    259                
    260                keyboard_ans =  _2;
   \   000002E8   0x2001             MOVS     R0,#+1
   \   000002EA   0x....             LDR.N    R1,??DataTable4_23
   \   000002EC   0x7008             STRB     R0,[R1, #+0]
    261              }
    262              if ( PTD11_I )
   \                     ??check_keyboard_32: (+1)
   \   000002EE   0x....             LDR.N    R0,??DataTable4_26  ;; 0x43fe1a2c
   \   000002F0   0x6800             LDR      R0,[R0, #+0]
   \   000002F2   0x2800             CMP      R0,#+0
   \   000002F4   0xD006             BEQ.N    ??check_keyboard_34
    263              {
    264                while(PTD11_I);
   \                     ??check_keyboard_35: (+1)
   \   000002F6   0x....             LDR.N    R0,??DataTable4_26  ;; 0x43fe1a2c
   \   000002F8   0x6800             LDR      R0,[R0, #+0]
   \   000002FA   0x2800             CMP      R0,#+0
   \   000002FC   0xD1FB             BNE.N    ??check_keyboard_35
    265                
    266                keyboard_ans = _1;
   \   000002FE   0x2000             MOVS     R0,#+0
   \   00000300   0x....             LDR.N    R1,??DataTable4_23
   \   00000302   0x7008             STRB     R0,[R1, #+0]
    267              }
    268              deal_keyboard();
   \                     ??check_keyboard_34: (+1)
   \   00000304   0x.... 0x....      BL       deal_keyboard
    269            } 
    270            
    271            keyboard_init();  
   \                     ??check_keyboard_27: (+1)
   \   00000308   0x.... 0x....      BL       keyboard_init
    272            BZ_OFF;
   \   0000030C   0x2200             MOVS     R2,#+0
   \   0000030E   0x2118             MOVS     R1,#+24
   \   00000310   0x....             LDR.N    R0,??DataTable4_3  ;; 0x400ff000
   \   00000312   0x.... 0x....      BL       LPLD_GPIO_Output_b
    273          }
   \   00000316   0xB007             ADD      SP,SP,#+28
   \   00000318   0xBD00             POP      {PC}             ;; return
    274          
    275          
    276          

   \                                 In section .text, align 2, keep-with-next
    277          void deal_keyboard()
    278          {
    279            switch(keyboard_ans)
   \                     deal_keyboard: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_23
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD00E             BEQ.N    ??deal_keyboard_0
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD00E             BEQ.N    ??deal_keyboard_1
   \   0000000C   0x2802             CMP      R0,#+2
   \   0000000E   0xD00B             BEQ.N    ??deal_keyboard_2
   \   00000010   0x2804             CMP      R0,#+4
   \   00000012   0xD00C             BEQ.N    ??deal_keyboard_3
   \   00000014   0x2806             CMP      R0,#+6
   \   00000016   0xD00B             BEQ.N    ??deal_keyboard_4
   \   00000018   0x2809             CMP      R0,#+9
   \   0000001A   0xD007             BEQ.N    ??deal_keyboard_5
   \   0000001C   0x280B             CMP      R0,#+11
   \   0000001E   0xD008             BEQ.N    ??deal_keyboard_6
   \   00000020   0x280F             CMP      R0,#+15
   \   00000022   0xD006             BEQ.N    ??deal_keyboard_6
   \   00000024   0xE005             B.N      ??deal_keyboard_7
    280            {
    281              //换位
    282              case(_1):
    283                break;
   \                     ??deal_keyboard_0: (+1)
   \   00000026   0xE004             B.N      ??deal_keyboard_7
    284                case(_3):
    285                  
    286                  break;
   \                     ??deal_keyboard_2: (+1)
   \   00000028   0xE003             B.N      ??deal_keyboard_7
    287                  
    288                  //参数推减
    289                  case(_2):
    290                    
    291                    break;
   \                     ??deal_keyboard_1: (+1)
   \   0000002A   0xE002             B.N      ??deal_keyboard_7
    292                    
    293                    case(_8):
    294                      
    295                      break;
   \                     ??deal_keyboard_5: (+1)
   \   0000002C   0xE001             B.N      ??deal_keyboard_7
    296                      
    297                      //翻页
    298                      case(_4):
    299                        
    300                        
    301                        break;
   \                     ??deal_keyboard_3: (+1)
   \   0000002E   0xE000             B.N      ??deal_keyboard_7
    302                        
    303                        case(_6):
    304                          
    305                          
    306                          break;
   \                     ??deal_keyboard_4: (+1)
   \   00000030   0xE7FF             B.N      ??deal_keyboard_7
    307                          
    308                          case(_C):
    309                            
    310                            case(_D): 
    311                              break;
    312                              
    313            }
    314            
    315          }
   \                     ??deal_keyboard_6: (+1)
   \                     ??deal_keyboard_7: (+1)
   \   00000032   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x000A0003         DC32     0xa0003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     check_sw

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x43FE2218         DC32     0x43fe2218

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x43FE221C         DC32     0x43fe221c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x43FE2228         DC32     0x43fe2228

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x43FE222C         DC32     0x43fe222c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x43FE2230         DC32     0x43fe2230

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x00090002         DC32     0x90002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x4004C0A0         DC32     0x4004c0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x43FE1AB0         DC32     0x43fe1ab0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x43FE1830         DC32     0x43fe1830

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x43FE182C         DC32     0x43fe182c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x43FE1828         DC32     0x43fe1828

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x43FE1824         DC32     0x43fe1824

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x43FE1820         DC32     0x43fe1820

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x43FE1AAC         DC32     0x43fe1aac

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x43FE1AA8         DC32     0x43fe1aa8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x43FE1AA4         DC32     0x43fe1aa4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x43FE1AA0         DC32     0x43fe1aa0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x43FE1A20         DC32     0x43fe1a20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x........         DC32     keyboard_ans

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x43FE1A24         DC32     0x43fe1a24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x43FE1A28         DC32     0x43fe1a28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x43FE1A2C         DC32     0x43fe1a2c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_27:
   \   00000000   0x43FE1AB4         DC32     0x43fe1ab4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_28:
   \   00000000   0x43FE1834         DC32     0x43fe1834

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_29:
   \   00000000   0x43FE1AB8         DC32     0x43fe1ab8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_30:
   \   00000000   0x43FE1838         DC32     0x43fe1838

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_31:
   \   00000000   0x43FE1ABC         DC32     0x43fe1abc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_32:
   \   00000000   0x43FE183C         DC32     0x43fe183c
    316          
    317          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   check_keyboard
        32   -> LPLD_GPIO_DisableIrq
        32   -> LPLD_GPIO_Output_b
        48   -> __aeabi_memcpy4
        32   -> deal_keyboard
        32   -> keyboard_init
       0   deal_keyboard
      48   key_init
        32   -> LPLD_GPIO_EnableIrq
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
      48   keyboard_init
        32   -> LPLD_GPIO_EnableIrq
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
       8   wait_key
         8   -> LPLD_GPIO_Output_b
         8   -> LPLD_LPTMR_DelayMs


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_27
       4  ??DataTable4_28
       4  ??DataTable4_29
       4  ??DataTable4_3
       4  ??DataTable4_30
       4  ??DataTable4_31
       4  ??DataTable4_32
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
     794  check_keyboard
      52  deal_keyboard
     136  key_init
       1  keyboard_ans
     126  keyboard_init
     338  wait_key

 
     1 byte  in section .data
 1 578 bytes in section .text
 
 1 578 bytes of CODE memory
     1 byte  of DATA memory

Errors: none
Warnings: none
