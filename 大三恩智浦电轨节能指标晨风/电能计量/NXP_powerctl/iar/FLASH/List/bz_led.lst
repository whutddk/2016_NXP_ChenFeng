###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        14/Aug/2016  11:03:48
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\app\ITAC\bz_led.c
#    Command line =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\app\ITAC\bz_led.c
#        -D LPLD_K60 -lCN
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\List\
#        -lB
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\List\
#        -o
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\app\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\app\BSP\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\app\ITAC\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\app\CTL\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\CPU\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\common\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\LPLD\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\FatFs\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\USB\common\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\..\..\..\lib\USB\class\
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\List\bz_led.lst
#    Object file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\iar\FLASH\Obj\bz_led.o
#
###############################################################################

C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\project\NXP_powerctl\app\ITAC\bz_led.c
      1          #include "include.h"
      2          
      3          

   \                                 In section .data, align 1
      4          enum _bz_style bz_style = norm;
   \                     bz_style:
   \   00000000   0x03               DC8 3

   \                                 In section .bss, align 2
      5          uint16 bz_cnt = 0;
   \                     bz_cnt:
   \   00000000                      DS8 2
      6          

   \                                 In section .text, align 2, keep-with-next
      7          void bzled_init()
      8          {
   \                     bzled_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
      9            GPIO_InitTypeDef bzled_inittype;
     10            
     11            bzled_inittype.GPIO_PTx = PTA; //led bz
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000008   0x9001             STR      R0,[SP, #+4]
     12            bzled_inittype.GPIO_Pins = GPIO_Pin24 | GPIO_Pin28;
   \   0000000A   0xF05F 0x5088      MOVS     R0,#+285212672
   \   0000000E   0x9002             STR      R0,[SP, #+8]
     13            bzled_inittype.GPIO_Dir = DIR_OUTPUT;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0xF88D 0x0010      STRB     R0,[SP, #+16]
     14            bzled_inittype.GPIO_Output = OUTPUT_H;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0xF88D 0x0011      STRB     R0,[SP, #+17]
     15            bzled_inittype.GPIO_PinControl = IRQC_DIS;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x9003             STR      R0,[SP, #+12]
     16            bzled_inittype.GPIO_Isr = NULL;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x9005             STR      R0,[SP, #+20]
     17            
     18            LPLD_GPIO_Init(bzled_inittype);
   \   00000024   0xA901             ADD      R1,SP,#+4
   \   00000026   0xB084             SUB      SP,SP,#+16
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0x2214             MOVS     R2,#+20
   \   0000002C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000030   0xBC0F             POP      {R0-R3}
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Init
     19          }
   \   00000036   0xB007             ADD      SP,SP,#+28
   \   00000038   0xBD00             POP      {PC}             ;; return
     20          

   \                                 In section .text, align 2, keep-with-next
     21          void bzled_work()
     22          {
   \                     bzled_work: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     23            switch(bz_style)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD009             BEQ.N    ??bzled_work_0
   \   0000000C   0x2802             CMP      R0,#+2
   \   0000000E   0xD00D             BEQ.N    ??bzled_work_1
   \   00000010   0xD309             BCC.N    ??bzled_work_2
   \   00000012   0x2804             CMP      R0,#+4
   \   00000014   0xD00D             BEQ.N    ??bzled_work_3
   \   00000016   0xD30F             BCC.N    ??bzled_work_4
   \   00000018   0x2806             CMP      R0,#+6
   \   0000001A   0xD010             BEQ.N    ??bzled_work_5
   \   0000001C   0xD312             BCC.N    ??bzled_work_6
   \   0000001E   0xE013             B.N      ??bzled_work_7
     24            {
     25              case(ready): bz_ready();break;
   \                     ??bzled_work_0: (+1)
   \   00000020   0x.... 0x....      BL       bz_ready
   \   00000024   0xE010             B.N      ??bzled_work_7
     26              case(datarec): bz_datarec();break;
   \                     ??bzled_work_2: (+1)
   \   00000026   0x.... 0x....      BL       bz_datarec
   \   0000002A   0xE00D             B.N      ??bzled_work_7
     27              case(warn):bz_warn(); break;
   \                     ??bzled_work_1: (+1)
   \   0000002C   0x.... 0x....      BL       bz_warn
   \   00000030   0xE00A             B.N      ??bzled_work_7
     28              case(cross):bz_cross(); break;
   \                     ??bzled_work_3: (+1)
   \   00000032   0x.... 0x....      BL       bz_cross
   \   00000036   0xE007             B.N      ??bzled_work_7
     29              case(norm):bz_norm(); break;
   \                     ??bzled_work_4: (+1)
   \   00000038   0x.... 0x....      BL       bz_norm
   \   0000003C   0xE004             B.N      ??bzled_work_7
     30              case(fzc):bz_fzc(); break;
   \                     ??bzled_work_5: (+1)
   \   0000003E   0x.... 0x....      BL       bz_fzc
   \   00000042   0xE001             B.N      ??bzled_work_7
     31              case(on):bz_on(); break;
   \                     ??bzled_work_6: (+1)
   \   00000044   0x.... 0x....      BL       bz_on
     32            }
     33            if ( ctl.flag_on &&  bz_style == norm)
   \                     ??bzled_work_7: (+1)
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   0000004C   0x7800             LDRB     R0,[R0, #+0]
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD008             BEQ.N    ??bzled_work_8
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x2803             CMP      R0,#+3
   \   0000005A   0xD103             BNE.N    ??bzled_work_8
     34            {
     35              bz_style = on;
   \   0000005C   0x2005             MOVS     R0,#+5
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   00000062   0x7008             STRB     R0,[R1, #+0]
     36            }
     37          }
   \                     ??bzled_work_8: (+1)
   \   00000064   0xBD01             POP      {R0,PC}          ;; return
     38          

   \                                 In section .text, align 2, keep-with-next
     39          void bz_ready()
     40          {
   \                     bz_ready: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     41            if ( bz_cnt < 100  )
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   00000006   0x8800             LDRH     R0,[R0, #+0]
   \   00000008   0x2864             CMP      R0,#+100
   \   0000000A   0xDA0C             BGE.N    ??bz_ready_0
     42            {
     43              BZ_ON;
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x2118             MOVS     R1,#+24
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000014   0x.... 0x....      BL       LPLD_GPIO_Output_b
     44              LED_ON;
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x211C             MOVS     R1,#+28
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000020   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000024   0xE081             B.N      ??bz_ready_1
     45            }
     46            else if ( bz_cnt <= 200 )
   \                     ??bz_ready_0: (+1)
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   0000002A   0x8800             LDRH     R0,[R0, #+0]
   \   0000002C   0x28C9             CMP      R0,#+201
   \   0000002E   0xDA0C             BGE.N    ??bz_ready_2
     47            {
     48              BZ_OFF;
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x2118             MOVS     R1,#+24
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000038   0x.... 0x....      BL       LPLD_GPIO_Output_b
     49              LED_OFF;
   \   0000003C   0x2201             MOVS     R2,#+1
   \   0000003E   0x211C             MOVS     R1,#+28
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000044   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000048   0xE06F             B.N      ??bz_ready_1
     50            }
     51            else if ( bz_cnt <= 300 )
   \                     ??bz_ready_2: (+1)
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   0000004E   0x8800             LDRH     R0,[R0, #+0]
   \   00000050   0xF5B0 0x7F96      CMP      R0,#+300
   \   00000054   0xDC0C             BGT.N    ??bz_ready_3
     52            {
     53              BZ_ON;
   \   00000056   0x2201             MOVS     R2,#+1
   \   00000058   0x2118             MOVS     R1,#+24
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Output_b
     54              LED_ON;
   \   00000062   0x2200             MOVS     R2,#+0
   \   00000064   0x211C             MOVS     R1,#+28
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   0000006A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000006E   0xE05C             B.N      ??bz_ready_1
     55            } 
     56            else if ( bz_cnt <= 400 )
   \                     ??bz_ready_3: (+1)
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   00000074   0x8800             LDRH     R0,[R0, #+0]
   \   00000076   0xF5B0 0x7FC8      CMP      R0,#+400
   \   0000007A   0xDC0C             BGT.N    ??bz_ready_4
     57            {
     58              BZ_OFF;
   \   0000007C   0x2200             MOVS     R2,#+0
   \   0000007E   0x2118             MOVS     R1,#+24
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000084   0x.... 0x....      BL       LPLD_GPIO_Output_b
     59              LED_OFF;
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x211C             MOVS     R1,#+28
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000090   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000094   0xE049             B.N      ??bz_ready_1
     60            }  
     61            else if ( bz_cnt <= 500 )
   \                     ??bz_ready_4: (+1)
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   0000009A   0x8800             LDRH     R0,[R0, #+0]
   \   0000009C   0xF5B0 0x7FFA      CMP      R0,#+500
   \   000000A0   0xDC0C             BGT.N    ??bz_ready_5
     62            {
     63              BZ_ON;
   \   000000A2   0x2201             MOVS     R2,#+1
   \   000000A4   0x2118             MOVS     R1,#+24
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   000000AA   0x.... 0x....      BL       LPLD_GPIO_Output_b
     64              LED_ON;
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x211C             MOVS     R1,#+28
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   000000B6   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   000000BA   0xE036             B.N      ??bz_ready_1
     65            } 
     66            else if ( bz_cnt <= 1000 )
   \                     ??bz_ready_5: (+1)
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   000000C0   0x8800             LDRH     R0,[R0, #+0]
   \   000000C2   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000000C6   0xDC0C             BGT.N    ??bz_ready_6
     67            {
     68              BZ_OFF;
   \   000000C8   0x2200             MOVS     R2,#+0
   \   000000CA   0x2118             MOVS     R1,#+24
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   000000D0   0x.... 0x....      BL       LPLD_GPIO_Output_b
     69              LED_OFF;
   \   000000D4   0x2201             MOVS     R2,#+1
   \   000000D6   0x211C             MOVS     R1,#+28
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   000000DC   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   000000E0   0xE023             B.N      ??bz_ready_1
     70            } 
     71            else if ( bz_cnt <= 1500 )
   \                     ??bz_ready_6: (+1)
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   000000E6   0x8800             LDRH     R0,[R0, #+0]
   \   000000E8   0xF240 0x51DD      MOVW     R1,#+1501
   \   000000EC   0x4288             CMP      R0,R1
   \   000000EE   0xDA0C             BGE.N    ??bz_ready_7
     72            {
     73              BZ_ON;
   \   000000F0   0x2201             MOVS     R2,#+1
   \   000000F2   0x2118             MOVS     R1,#+24
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   000000F8   0x.... 0x....      BL       LPLD_GPIO_Output_b
     74              LED_ON;
   \   000000FC   0x2200             MOVS     R2,#+0
   \   000000FE   0x211C             MOVS     R1,#+28
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000104   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000108   0xE00F             B.N      ??bz_ready_1
     75            } 
     76            else 
     77            {
     78              BZ_OFF;
   \                     ??bz_ready_7: (+1)
   \   0000010A   0x2200             MOVS     R2,#+0
   \   0000010C   0x2118             MOVS     R1,#+24
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000112   0x.... 0x....      BL       LPLD_GPIO_Output_b
     79              LED_OFF;
   \   00000116   0x2201             MOVS     R2,#+1
   \   00000118   0x211C             MOVS     R1,#+28
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   0000011E   0x.... 0x....      BL       LPLD_GPIO_Output_b
     80              bz_style = norm;
   \   00000122   0x2003             MOVS     R0,#+3
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   00000128   0x7008             STRB     R0,[R1, #+0]
     81            } 
     82            
     83          }
   \                     ??bz_ready_1: (+1)
   \   0000012A   0xBD01             POP      {R0,PC}          ;; return
     84          

   \                                 In section .text, align 2, keep-with-next
     85          void bz_datarec()
     86          {
   \                     bz_datarec: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     87            if ( bz_cnt < 50  )
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   00000006   0x8800             LDRH     R0,[R0, #+0]
   \   00000008   0x2832             CMP      R0,#+50
   \   0000000A   0xDA0C             BGE.N    ??bz_datarec_0
     88            {
     89              BZ_ON;
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x2118             MOVS     R1,#+24
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000014   0x.... 0x....      BL       LPLD_GPIO_Output_b
     90              LED_ON;
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x211C             MOVS     R1,#+28
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000020   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000024   0xE04C             B.N      ??bz_datarec_1
     91            }
     92            else if ( bz_cnt <= 100 )
   \                     ??bz_datarec_0: (+1)
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   0000002A   0x8800             LDRH     R0,[R0, #+0]
   \   0000002C   0x2865             CMP      R0,#+101
   \   0000002E   0xDA0C             BGE.N    ??bz_datarec_2
     93            {
     94              BZ_OFF;
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x2118             MOVS     R1,#+24
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000038   0x.... 0x....      BL       LPLD_GPIO_Output_b
     95              LED_OFF;
   \   0000003C   0x2201             MOVS     R2,#+1
   \   0000003E   0x211C             MOVS     R1,#+28
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff000
   \   00000044   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000048   0xE03A             B.N      ??bz_datarec_1
     96            }
     97            else if ( bz_cnt < 150  )
   \                     ??bz_datarec_2: (+1)
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   0000004E   0x8800             LDRH     R0,[R0, #+0]
   \   00000050   0x2896             CMP      R0,#+150
   \   00000052   0xDA0A             BGE.N    ??bz_datarec_3
     98            {
     99              BZ_ON;
   \   00000054   0x2201             MOVS     R2,#+1
   \   00000056   0x2118             MOVS     R1,#+24
   \   00000058   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000005A   0x.... 0x....      BL       LPLD_GPIO_Output_b
    100              LED_ON;
   \   0000005E   0x2200             MOVS     R2,#+0
   \   00000060   0x211C             MOVS     R1,#+28
   \   00000062   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000064   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000068   0xE02A             B.N      ??bz_datarec_1
    101            }
    102            else if ( bz_cnt <= 200 )
   \                     ??bz_datarec_3: (+1)
   \   0000006A   0x....             LDR.N    R0,??DataTable9_3
   \   0000006C   0x8800             LDRH     R0,[R0, #+0]
   \   0000006E   0x28C9             CMP      R0,#+201
   \   00000070   0xDA0A             BGE.N    ??bz_datarec_4
    103            {
    104              BZ_OFF;
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0x2118             MOVS     R1,#+24
   \   00000076   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000078   0x.... 0x....      BL       LPLD_GPIO_Output_b
    105              LED_OFF;
   \   0000007C   0x2201             MOVS     R2,#+1
   \   0000007E   0x211C             MOVS     R1,#+28
   \   00000080   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000082   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000086   0xE01B             B.N      ??bz_datarec_1
    106            }
    107            else if ( bz_cnt < 250  )
   \                     ??bz_datarec_4: (+1)
   \   00000088   0x....             LDR.N    R0,??DataTable9_3
   \   0000008A   0x8800             LDRH     R0,[R0, #+0]
   \   0000008C   0x28FA             CMP      R0,#+250
   \   0000008E   0xDA0A             BGE.N    ??bz_datarec_5
    108            {
    109              BZ_ON;
   \   00000090   0x2201             MOVS     R2,#+1
   \   00000092   0x2118             MOVS     R1,#+24
   \   00000094   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000096   0x.... 0x....      BL       LPLD_GPIO_Output_b
    110              LED_ON;
   \   0000009A   0x2200             MOVS     R2,#+0
   \   0000009C   0x211C             MOVS     R1,#+28
   \   0000009E   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   000000A0   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   000000A4   0xE00C             B.N      ??bz_datarec_1
    111            }
    112            else
    113            {
    114              BZ_OFF;
   \                     ??bz_datarec_5: (+1)
   \   000000A6   0x2200             MOVS     R2,#+0
   \   000000A8   0x2118             MOVS     R1,#+24
   \   000000AA   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   000000AC   0x.... 0x....      BL       LPLD_GPIO_Output_b
    115              LED_OFF;
   \   000000B0   0x2201             MOVS     R2,#+1
   \   000000B2   0x211C             MOVS     R1,#+28
   \   000000B4   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   000000B6   0x.... 0x....      BL       LPLD_GPIO_Output_b
    116              bz_style = norm;
   \   000000BA   0x2003             MOVS     R0,#+3
   \   000000BC   0x....             LDR.N    R1,??DataTable9_1
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
    117            }
    118            
    119          }
   \                     ??bz_datarec_1: (+1)
   \   000000C0   0xBD01             POP      {R0,PC}          ;; return
    120            

   \                                 In section .text, align 2, keep-with-next
    121          void bz_norm()
    122          {
   \                     bz_norm: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    123            if ( bz_cnt < 100  )
   \   00000002   0x....             LDR.N    R0,??DataTable9_3
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0x2864             CMP      R0,#+100
   \   00000008   0xDA0A             BGE.N    ??bz_norm_0
    124            {
    125              BZ_ON;
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0x2118             MOVS     R1,#+24
   \   0000000E   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000010   0x.... 0x....      BL       LPLD_GPIO_Output_b
    126              LED_ON;
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x211C             MOVS     R1,#+28
   \   00000018   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE013             B.N      ??bz_norm_1
    127            }
    128            else if ( bz_cnt <= 10000 )
   \                     ??bz_norm_0: (+1)
   \   00000020   0x....             LDR.N    R0,??DataTable9_3
   \   00000022   0x8800             LDRH     R0,[R0, #+0]
   \   00000024   0xF242 0x7111      MOVW     R1,#+10001
   \   00000028   0x4288             CMP      R0,R1
   \   0000002A   0xDA0A             BGE.N    ??bz_norm_2
    129            {
    130              BZ_OFF;
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0x2118             MOVS     R1,#+24
   \   00000030   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Output_b
    131              LED_OFF;
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0x211C             MOVS     R1,#+28
   \   0000003A   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000003C   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000040   0xE002             B.N      ??bz_norm_1
    132              
    133            }
    134            else
    135            {
    136              bz_cnt = 0;
   \                     ??bz_norm_2: (+1)
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x....             LDR.N    R1,??DataTable9_3
   \   00000046   0x8008             STRH     R0,[R1, #+0]
    137            }
    138          }
   \                     ??bz_norm_1: (+1)
   \   00000048   0xBD01             POP      {R0,PC}          ;; return
    139          

   \                                 In section .text, align 2, keep-with-next
    140          void bz_warn()
    141          {
   \                     bz_warn: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    142            if ( bz_cnt < 500  )
   \   00000002   0x....             LDR.N    R0,??DataTable9_3
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0xF5B0 0x7FFA      CMP      R0,#+500
   \   0000000A   0xDA0A             BGE.N    ??bz_warn_0
    143            {
    144              BZ_ON;
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x2118             MOVS     R1,#+24
   \   00000010   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000012   0x.... 0x....      BL       LPLD_GPIO_Output_b
    145              LED_ON;
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x211C             MOVS     R1,#+28
   \   0000001A   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000001C   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000020   0xE04E             B.N      ??bz_warn_1
    146            }
    147            else if ( bz_cnt <= 1000 )
   \                     ??bz_warn_0: (+1)
   \   00000022   0x....             LDR.N    R0,??DataTable9_3
   \   00000024   0x8800             LDRH     R0,[R0, #+0]
   \   00000026   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000002A   0xDC0A             BGT.N    ??bz_warn_2
    148            {
    149              BZ_OFF;
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0x2118             MOVS     R1,#+24
   \   00000030   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Output_b
    150              LED_OFF;
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0x211C             MOVS     R1,#+28
   \   0000003A   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000003C   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000040   0xE03E             B.N      ??bz_warn_1
    151            }
    152            else if ( bz_cnt < 1500  )
   \                     ??bz_warn_2: (+1)
   \   00000042   0x....             LDR.N    R0,??DataTable9_3
   \   00000044   0x8800             LDRH     R0,[R0, #+0]
   \   00000046   0xF240 0x51DC      MOVW     R1,#+1500
   \   0000004A   0x4288             CMP      R0,R1
   \   0000004C   0xDA0A             BGE.N    ??bz_warn_3
    153            {
    154              BZ_ON;
   \   0000004E   0x2201             MOVS     R2,#+1
   \   00000050   0x2118             MOVS     R1,#+24
   \   00000052   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000054   0x.... 0x....      BL       LPLD_GPIO_Output_b
    155              LED_ON;
   \   00000058   0x2200             MOVS     R2,#+0
   \   0000005A   0x211C             MOVS     R1,#+28
   \   0000005C   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000005E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000062   0xE02D             B.N      ??bz_warn_1
    156            }
    157            else if ( bz_cnt <= 2000 )
   \                     ??bz_warn_3: (+1)
   \   00000064   0x....             LDR.N    R0,??DataTable9_3
   \   00000066   0x8800             LDRH     R0,[R0, #+0]
   \   00000068   0xF5B0 0x6FFA      CMP      R0,#+2000
   \   0000006C   0xDC0A             BGT.N    ??bz_warn_4
    158            {
    159              BZ_OFF;
   \   0000006E   0x2200             MOVS     R2,#+0
   \   00000070   0x2118             MOVS     R1,#+24
   \   00000072   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000074   0x.... 0x....      BL       LPLD_GPIO_Output_b
    160              LED_OFF;
   \   00000078   0x2201             MOVS     R2,#+1
   \   0000007A   0x211C             MOVS     R1,#+28
   \   0000007C   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000007E   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000082   0xE01D             B.N      ??bz_warn_1
    161            }
    162            else if ( bz_cnt < 2500  )
   \                     ??bz_warn_4: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable9_3
   \   00000086   0x8800             LDRH     R0,[R0, #+0]
   \   00000088   0xF640 0x11C4      MOVW     R1,#+2500
   \   0000008C   0x4288             CMP      R0,R1
   \   0000008E   0xDA0A             BGE.N    ??bz_warn_5
    163            {
    164              BZ_ON;
   \   00000090   0x2201             MOVS     R2,#+1
   \   00000092   0x2118             MOVS     R1,#+24
   \   00000094   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000096   0x.... 0x....      BL       LPLD_GPIO_Output_b
    165              LED_ON;
   \   0000009A   0x2200             MOVS     R2,#+0
   \   0000009C   0x211C             MOVS     R1,#+28
   \   0000009E   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   000000A0   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   000000A4   0xE00C             B.N      ??bz_warn_1
    166            }
    167            else 
    168            {
    169              BZ_OFF;
   \                     ??bz_warn_5: (+1)
   \   000000A6   0x2200             MOVS     R2,#+0
   \   000000A8   0x2118             MOVS     R1,#+24
   \   000000AA   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   000000AC   0x.... 0x....      BL       LPLD_GPIO_Output_b
    170              LED_OFF;
   \   000000B0   0x2201             MOVS     R2,#+1
   \   000000B2   0x211C             MOVS     R1,#+28
   \   000000B4   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   000000B6   0x.... 0x....      BL       LPLD_GPIO_Output_b
    171              
    172              bz_style = norm;
   \   000000BA   0x2003             MOVS     R0,#+3
   \   000000BC   0x....             LDR.N    R1,??DataTable9_1
   \   000000BE   0x7008             STRB     R0,[R1, #+0]
    173              
    174            }
    175          }
   \                     ??bz_warn_1: (+1)
   \   000000C0   0xBD01             POP      {R0,PC}          ;; return
    176          

   \                                 In section .text, align 2, keep-with-next
    177          void bz_on()
    178          {
   \                     bz_on: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    179            if ( bz_cnt < 10  )
   \   00000002   0x....             LDR.N    R0,??DataTable9_3
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0x280A             CMP      R0,#+10
   \   00000008   0xDA0A             BGE.N    ??bz_on_0
    180            {
    181              BZ_ON;
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0x2118             MOVS     R1,#+24
   \   0000000E   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000010   0x.... 0x....      BL       LPLD_GPIO_Output_b
    182              LED_ON;
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x211C             MOVS     R1,#+28
   \   00000018   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE015             B.N      ??bz_on_1
    183            }
    184            else if ( bz_cnt <= 1000 )
   \                     ??bz_on_0: (+1)
   \   00000020   0x....             LDR.N    R0,??DataTable9_3
   \   00000022   0x8800             LDRH     R0,[R0, #+0]
   \   00000024   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000028   0xDC0A             BGT.N    ??bz_on_2
    185            {
    186              BZ_OFF;
   \   0000002A   0x2200             MOVS     R2,#+0
   \   0000002C   0x2118             MOVS     R1,#+24
   \   0000002E   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000030   0x.... 0x....      BL       LPLD_GPIO_Output_b
    187              LED_OFF;
   \   00000034   0x2201             MOVS     R2,#+1
   \   00000036   0x211C             MOVS     R1,#+28
   \   00000038   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000003A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000003E   0xE005             B.N      ??bz_on_1
    188            }
    189            else
    190            {
    191              bz_cnt = 0;
   \                     ??bz_on_2: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR.N    R1,??DataTable9_3
   \   00000044   0x8008             STRH     R0,[R1, #+0]
    192              bz_style = norm;
   \   00000046   0x2003             MOVS     R0,#+3
   \   00000048   0x....             LDR.N    R1,??DataTable9_1
   \   0000004A   0x7008             STRB     R0,[R1, #+0]
    193            }
    194          }
   \                     ??bz_on_1: (+1)
   \   0000004C   0xBD01             POP      {R0,PC}          ;; return
    195          

   \                                 In section .text, align 2, keep-with-next
    196          void bz_cross()
    197          {
   \                     bz_cross: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    198            if ( bz_cnt < 30  )
   \   00000002   0x....             LDR.N    R0,??DataTable9_3
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0x281E             CMP      R0,#+30
   \   00000008   0xDA0A             BGE.N    ??bz_cross_0
    199            {
    200              BZ_ON;
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0x2118             MOVS     R1,#+24
   \   0000000E   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000010   0x.... 0x....      BL       LPLD_GPIO_Output_b
    201              LED_ON;
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x211C             MOVS     R1,#+28
   \   00000018   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE048             B.N      ??bz_cross_1
    202            }
    203            else if ( bz_cnt <= 60 )
   \                     ??bz_cross_0: (+1)
   \   00000020   0x....             LDR.N    R0,??DataTable9_3
   \   00000022   0x8800             LDRH     R0,[R0, #+0]
   \   00000024   0x283D             CMP      R0,#+61
   \   00000026   0xDA0A             BGE.N    ??bz_cross_2
    204            {
    205              BZ_OFF;
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x2118             MOVS     R1,#+24
   \   0000002C   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000002E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    206              LED_OFF;
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0x211C             MOVS     R1,#+28
   \   00000036   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000038   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000003C   0xE039             B.N      ??bz_cross_1
    207            }
    208            else if ( bz_cnt < 90  )
   \                     ??bz_cross_2: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable9_3
   \   00000040   0x8800             LDRH     R0,[R0, #+0]
   \   00000042   0x285A             CMP      R0,#+90
   \   00000044   0xDA0A             BGE.N    ??bz_cross_3
    209            {
    210              BZ_ON;
   \   00000046   0x2201             MOVS     R2,#+1
   \   00000048   0x2118             MOVS     R1,#+24
   \   0000004A   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000004C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    211              LED_ON;
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x211C             MOVS     R1,#+28
   \   00000054   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000056   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000005A   0xE02A             B.N      ??bz_cross_1
    212            }
    213            else if ( bz_cnt <= 120 )
   \                     ??bz_cross_3: (+1)
   \   0000005C   0x....             LDR.N    R0,??DataTable9_3
   \   0000005E   0x8800             LDRH     R0,[R0, #+0]
   \   00000060   0x2879             CMP      R0,#+121
   \   00000062   0xDA0A             BGE.N    ??bz_cross_4
    214            {
    215              BZ_OFF;
   \   00000064   0x2200             MOVS     R2,#+0
   \   00000066   0x2118             MOVS     R1,#+24
   \   00000068   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000006A   0x.... 0x....      BL       LPLD_GPIO_Output_b
    216              LED_OFF;
   \   0000006E   0x2201             MOVS     R2,#+1
   \   00000070   0x211C             MOVS     R1,#+28
   \   00000072   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000074   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000078   0xE01B             B.N      ??bz_cross_1
    217            }
    218            else if ( bz_cnt < 170  )
   \                     ??bz_cross_4: (+1)
   \   0000007A   0x....             LDR.N    R0,??DataTable9_3
   \   0000007C   0x8800             LDRH     R0,[R0, #+0]
   \   0000007E   0x28AA             CMP      R0,#+170
   \   00000080   0xDA0A             BGE.N    ??bz_cross_5
    219            {
    220              BZ_ON;
   \   00000082   0x2201             MOVS     R2,#+1
   \   00000084   0x2118             MOVS     R1,#+24
   \   00000086   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000088   0x.... 0x....      BL       LPLD_GPIO_Output_b
    221              LED_ON;
   \   0000008C   0x2200             MOVS     R2,#+0
   \   0000008E   0x211C             MOVS     R1,#+28
   \   00000090   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000092   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000096   0xE00C             B.N      ??bz_cross_1
    222            }
    223            else
    224            {
    225              BZ_OFF;
   \                     ??bz_cross_5: (+1)
   \   00000098   0x2200             MOVS     R2,#+0
   \   0000009A   0x2118             MOVS     R1,#+24
   \   0000009C   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000009E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    226              LED_OFF;
   \   000000A2   0x2201             MOVS     R2,#+1
   \   000000A4   0x211C             MOVS     R1,#+28
   \   000000A6   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   000000A8   0x.... 0x....      BL       LPLD_GPIO_Output_b
    227              bz_style = norm;
   \   000000AC   0x2003             MOVS     R0,#+3
   \   000000AE   0x....             LDR.N    R1,??DataTable9_1
   \   000000B0   0x7008             STRB     R0,[R1, #+0]
    228            }
    229            
    230          }
   \                     ??bz_cross_1: (+1)
   \   000000B2   0xBD01             POP      {R0,PC}          ;; return
    231          

   \                                 In section .text, align 2, keep-with-next
    232          void bz_fzc()
    233          {
   \                     bz_fzc: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    234            if ( bz_cnt < 50  )
   \   00000002   0x....             LDR.N    R0,??DataTable9_3
   \   00000004   0x8800             LDRH     R0,[R0, #+0]
   \   00000006   0x2832             CMP      R0,#+50
   \   00000008   0xDA0A             BGE.N    ??bz_fzc_0
    235            {
    236              BZ_ON;
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0x2118             MOVS     R1,#+24
   \   0000000E   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000010   0x.... 0x....      BL       LPLD_GPIO_Output_b
    237              LED_ON;
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x211C             MOVS     R1,#+28
   \   00000018   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000001E   0xE02A             B.N      ??bz_fzc_1
    238            }
    239            else if ( bz_cnt <= 100 )
   \                     ??bz_fzc_0: (+1)
   \   00000020   0x....             LDR.N    R0,??DataTable9_3
   \   00000022   0x8800             LDRH     R0,[R0, #+0]
   \   00000024   0x2865             CMP      R0,#+101
   \   00000026   0xDA0A             BGE.N    ??bz_fzc_2
    240            {
    241              BZ_OFF;
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x2118             MOVS     R1,#+24
   \   0000002C   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000002E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    242              LED_OFF;
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0x211C             MOVS     R1,#+28
   \   00000036   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000038   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000003C   0xE01B             B.N      ??bz_fzc_1
    243              
    244            }
    245            else  if ( bz_cnt < 150  )
   \                     ??bz_fzc_2: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable9_3
   \   00000040   0x8800             LDRH     R0,[R0, #+0]
   \   00000042   0x2896             CMP      R0,#+150
   \   00000044   0xDA0A             BGE.N    ??bz_fzc_3
    246            {
    247              BZ_ON;
   \   00000046   0x2201             MOVS     R2,#+1
   \   00000048   0x2118             MOVS     R1,#+24
   \   0000004A   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000004C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    248              LED_ON;
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x211C             MOVS     R1,#+28
   \   00000054   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000056   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   0000005A   0xE00C             B.N      ??bz_fzc_1
    249            }
    250            else 
    251            {
    252              BZ_OFF;
   \                     ??bz_fzc_3: (+1)
   \   0000005C   0x2200             MOVS     R2,#+0
   \   0000005E   0x2118             MOVS     R1,#+24
   \   00000060   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   00000062   0x.... 0x....      BL       LPLD_GPIO_Output_b
    253              LED_OFF;
   \   00000066   0x2201             MOVS     R2,#+1
   \   00000068   0x211C             MOVS     R1,#+28
   \   0000006A   0x....             LDR.N    R0,??DataTable9  ;; 0x400ff000
   \   0000006C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    254               bz_style = norm;
   \   00000070   0x2003             MOVS     R0,#+3
   \   00000072   0x....             LDR.N    R1,??DataTable9_1
   \   00000074   0x7008             STRB     R0,[R1, #+0]
    255            }
    256          
    257          }
   \                     ??bz_fzc_1: (+1)
   \   00000076   0xBD01             POP      {R0,PC}          ;; return
    258          

   \                                 In section .text, align 2, keep-with-next
    259          void bz_set(enum _bz_style bz)
    260          {
    261            bz_cnt = 0;
   \                     bz_set: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x....             LDR.N    R2,??DataTable9_3
   \   00000004   0x8011             STRH     R1,[R2, #+0]
    262            bz_style = bz; 
   \   00000006   0x....             LDR.N    R1,??DataTable9_1
   \   00000008   0x7008             STRB     R0,[R1, #+0]
    263          }
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     bz_style

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     ctl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     bz_cnt

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   bz_cross
         8   -> LPLD_GPIO_Output_b
       8   bz_datarec
         8   -> LPLD_GPIO_Output_b
       8   bz_fzc
         8   -> LPLD_GPIO_Output_b
       8   bz_norm
         8   -> LPLD_GPIO_Output_b
       8   bz_on
         8   -> LPLD_GPIO_Output_b
       8   bz_ready
         8   -> LPLD_GPIO_Output_b
       0   bz_set
       8   bz_warn
         8   -> LPLD_GPIO_Output_b
      48   bzled_init
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
       8   bzled_work
         8   -> bz_cross
         8   -> bz_datarec
         8   -> bz_fzc
         8   -> bz_norm
         8   -> bz_on
         8   -> bz_ready
         8   -> bz_warn


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       2  bz_cnt
     180  bz_cross
     194  bz_datarec
     120  bz_fzc
      74  bz_norm
      78  bz_on
     300  bz_ready
      12  bz_set
       1  bz_style
     194  bz_warn
      58  bzled_init
     102  bzled_work

 
     2 bytes in section .bss
     1 byte  in section .data
 1 328 bytes in section .text
 
 1 328 bytes of CODE memory
     3 bytes of DATA memory

Errors: none
Warnings: none
