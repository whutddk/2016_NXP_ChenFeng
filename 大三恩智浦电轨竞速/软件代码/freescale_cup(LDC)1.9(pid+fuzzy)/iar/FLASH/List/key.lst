###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        11/Mar/2016  11:02:56
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\app\ITAC\key.c
#    Command line =  
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\app\ITAC\key.c"
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\List\"
#        -lB
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\List\"
#        -o
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\MAIN\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\BSP\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\CTL\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\sensor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\ITAC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\CPU\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\LPLD\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\FatFs\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\USB\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\USB\driver\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\USB\class\"
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\List\key.lst
#    Object file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\Obj\key.o
#
###############################################################################

D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\app\ITAC\key.c
      1          #include "include.h"
      2          
      3          
      4          #define KEY_A  PTE7_I
      5          

   \                                 In section .bss, align 4
      6          GPIO_InitTypeDef key_inittype;
   \                     key_inittype:
   \   00000000                      DS8 20
      7          

   \                                 In section .text, align 2, keep-with-next
      8          void key_init()
      9          {
   \                     key_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     10            
     11            key_inittype.GPIO_PTx = PTE;
   \   00000002   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff100
   \   00000004   0x....             LDR.N    R1,??DataTable1_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
     12            key_inittype.GPIO_Pins = GPIO_Pin6 | GPIO_Pin7 | GPIO_Pin10 | GPIO_Pin11 | GPIO_Pin12; 
   \   00000008   0xF44F 0x50E6      MOV      R0,#+7360
   \   0000000C   0x....             LDR.N    R1,??DataTable1_1
   \   0000000E   0x6048             STR      R0,[R1, #+4]
     13            key_inittype.GPIO_Dir = DIR_INPUT;        //输入
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable1_1
   \   00000014   0x7308             STRB     R0,[R1, #+12]
     14            key_inittype.GPIO_PinControl = INPUT_PULL_UP | IRQC_FA; //上拉 下降沿触发外部中断
   \   00000016   0x....             LDR.N    R0,??DataTable1_2  ;; 0xa0003
   \   00000018   0x....             LDR.N    R1,??DataTable1_1
   \   0000001A   0x6088             STR      R0,[R1, #+8]
     15            key_inittype.GPIO_Isr = key;
   \   0000001C   0x.... 0x....      ADR.W    R0,key
   \   00000020   0x....             LDR.N    R1,??DataTable1_1
   \   00000022   0x6108             STR      R0,[R1, #+16]
     16            LPLD_GPIO_Init(key_inittype);
   \   00000024   0x....             LDR.N    R1,??DataTable1_1
   \   00000026   0xB084             SUB      SP,SP,#+16
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0x2214             MOVS     R2,#+20
   \   0000002C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000030   0xBC0F             POP      {R0-R3}
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Init
     17            
     18            //使能中断
     19            LPLD_GPIO_EnableIrq(key_inittype);
   \   00000036   0x....             LDR.N    R1,??DataTable1_1
   \   00000038   0xB084             SUB      SP,SP,#+16
   \   0000003A   0x4668             MOV      R0,SP
   \   0000003C   0x2214             MOVS     R2,#+20
   \   0000003E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000042   0xBC0F             POP      {R0-R3}
   \   00000044   0x.... 0x....      BL       LPLD_GPIO_EnableIrq
     20          }
   \   00000048   0xBD01             POP      {R0,PC}          ;; return
     21          

   \                                 In section .text, align 4, keep-with-next
     22          void key()
     23          {
   \                     key: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     24            uint8 i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     25            
     26            
     27            
     28            // bz_set(datarec);
     29            if  LPLD_GPIO_IsPinxExt(PORTE, GPIO_Pin6) //上 中断
   \   00000004   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004d0a0
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x0640             LSLS     R0,R0,#+25
   \   0000000A   0xD504             BPL.N    ??key_0
     30            {
     31              LPLD_GPIO_ClearIntFlag(PORTE);//清中断标志
   \   0000000C   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000010   0x....             LDR.N    R1,??DataTable1_3  ;; 0x4004d0a0
   \   00000012   0x6008             STR      R0,[R1, #+0]
     32              
     33              //操作
     34              
     35              return;
   \   00000014   0xE03F             B.N      ??key_1
     36            }
     37            
     38            
     39            
     40            
     41            
     42            if  LPLD_GPIO_IsPinxExt(PORTE, GPIO_Pin7) //中 中断
   \                     ??key_0: (+1)
   \   00000016   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004d0a0
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x0600             LSLS     R0,R0,#+24
   \   0000001C   0xD520             BPL.N    ??key_2
     43            {
     44              LPLD_GPIO_ClearIntFlag(PORTE);//清中断标志
   \   0000001E   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000022   0x....             LDR.N    R1,??DataTable1_3  ;; 0x4004d0a0
   \   00000024   0x6008             STR      R0,[R1, #+0]
     45              
     46              //操作
     47              
     48              if(KEY_A == 0)
   \   00000026   0x....             LDR.N    R0,??DataTable1_4  ;; 0x43fe221c
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD117             BNE.N    ??key_3
     49              {
     50                //去抖
     51                LPLD_LPTMR_DelayMs(5);
   \   0000002E   0x2005             MOVS     R0,#+5
   \   00000030   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     52                
     53                if(KEY_A == 0)
   \   00000034   0x....             LDR.N    R0,??DataTable1_4  ;; 0x43fe221c
   \   00000036   0x6800             LDR      R0,[R0, #+0]
     54                {
     55                  
     56                }
     57                
     58                  //直到按键松开再运行
     59                  while(KEY_A == 0)
   \                     ??key_4: (+1)
   \   00000038   0x....             LDR.N    R0,??DataTable1_4  ;; 0x43fe221c
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD10B             BNE.N    ??key_5
     60                  {
     61                    for(i=0;i<250;i++)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x0004             MOVS     R4,R0
   \                     ??key_6: (+1)
   \   00000044   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000046   0x2CFA             CMP      R4,#+250
   \   00000048   0xDAF6             BGE.N    ??key_4
     62                    {
     63                      
     64                     LPLD_LPTMR_DelayMs(10);
   \   0000004A   0x200A             MOVS     R0,#+10
   \   0000004C   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     65                    sensor_isr();
   \   00000050   0x.... 0x....      BL       sensor_isr
     66                   // PIT2_init();
     67                    }
   \   00000054   0x1C64             ADDS     R4,R4,#+1
   \   00000056   0xE7F5             B.N      ??key_6
     68                  
     69                  } 
     70                 
     71                  bz_set(datarec);
   \                     ??key_5: (+1)
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       bz_set
     72                }
     73                
     74              return;
   \                     ??key_3: (+1)
   \   0000005E   0xE01A             B.N      ??key_1
     75            }
     76            
     77            
     78            
     79            
     80            
     81            if  LPLD_GPIO_IsPinxExt(PORTE, GPIO_Pin10) //左 中断
   \                     ??key_2: (+1)
   \   00000060   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004d0a0
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x0540             LSLS     R0,R0,#+21
   \   00000066   0xD504             BPL.N    ??key_7
     82            {
     83              LPLD_GPIO_ClearIntFlag(PORTE);//清中断标志
   \   00000068   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000006C   0x....             LDR.N    R1,??DataTable1_3  ;; 0x4004d0a0
   \   0000006E   0x6008             STR      R0,[R1, #+0]
     84              
     85              //操作
     86              
     87              return;
   \   00000070   0xE011             B.N      ??key_1
     88            }
     89            
     90            
     91            
     92            
     93            if  LPLD_GPIO_IsPinxExt(PORTE, GPIO_Pin11) //右 中断
   \                     ??key_7: (+1)
   \   00000072   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004d0a0
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x0500             LSLS     R0,R0,#+20
   \   00000078   0xD504             BPL.N    ??key_8
     94            {
     95              LPLD_GPIO_ClearIntFlag(PORTE);//清中断标志
   \   0000007A   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000007E   0x....             LDR.N    R1,??DataTable1_3  ;; 0x4004d0a0
   \   00000080   0x6008             STR      R0,[R1, #+0]
     96              
     97              //操作
     98              
     99              return;
   \   00000082   0xE008             B.N      ??key_1
    100            }
    101            
    102            
    103            
    104            if  LPLD_GPIO_IsPinxExt(PORTE, GPIO_Pin12) //下 中断
   \                     ??key_8: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable1_3  ;; 0x4004d0a0
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x04C0             LSLS     R0,R0,#+19
   \   0000008A   0xD504             BPL.N    ??key_9
    105            {
    106              LPLD_GPIO_ClearIntFlag(PORTE);//清中断标志
   \   0000008C   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000090   0x....             LDR.N    R1,??DataTable1_3  ;; 0x4004d0a0
   \   00000092   0x6008             STR      R0,[R1, #+0]
    107              
    108              //操作
    109              
    110              return;
   \   00000094   0xE7FF             B.N      ??key_1
    111            }
    112            
    113            
    114            
    115          }
   \                     ??key_9: (+1)
   \                     ??key_1: (+1)
   \   00000096   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     key_inittype

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x000A0003         DC32     0xa0003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x4004D0A0         DC32     0x4004d0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x43FE221C         DC32     0x43fe221c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   key
         8   -> LPLD_LPTMR_DelayMs
         8   -> bz_set
         8   -> sensor_isr
      24   key_init
         8   -> LPLD_GPIO_EnableIrq
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
     152  key
      74  key_init
      20  key_inittype

 
  20 bytes in section .bss
 246 bytes in section .text
 
 246 bytes of CODE memory
  20 bytes of DATA memory

Errors: none
Warnings: none
