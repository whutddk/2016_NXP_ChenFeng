###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        11/Mar/2016  11:02:59
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\app\CTL\motto.c
#    Command line =  
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\app\CTL\motto.c"
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\List\"
#        -lB
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\List\"
#        -o
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\MAIN\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\BSP\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\CTL\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\sensor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\app\ITAC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\CPU\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\LPLD\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\FatFs\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\USB\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\USB\driver\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\..\..\..\lib\USB\class\"
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\List\motto.lst
#    Object file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\iar\FLASH\Obj\motto.o
#
###############################################################################

D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(LDC)1.9(pid+fuzzy)\app\CTL\motto.c
      1          //电机控制
      2          #include "include.h"
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void motto_set()
      5          {
   \                     motto_set: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      6            //限幅
      7            if ( ctl.motto.out > 8000 )
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0x6C00             LDR      R0,[R0, #+64]
   \   00000006   0x....             LDR.N    R1,??DataTable2_1  ;; 0x45fa0001
   \   00000008   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000000C   0xD803             BHI.N    ??motto_set_0
      8            {
      9              ctl.motto.out = 8000;
   \   0000000E   0x....             LDR.N    R0,??DataTable2_2  ;; 0x45fa0000
   \   00000010   0x....             LDR.N    R1,??DataTable2
   \   00000012   0x6408             STR      R0,[R1, #+64]
   \   00000014   0xE008             B.N      ??motto_set_1
     10            }
     11            else if ( ctl.motto.out < -8000 )
   \                     ??motto_set_0: (+1)
   \   00000016   0x....             LDR.N    R0,??DataTable2
   \   00000018   0x6C00             LDR      R0,[R0, #+64]
   \   0000001A   0x....             LDR.N    R1,??DataTable2_3  ;; 0xc5fa0000
   \   0000001C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000020   0xD202             BCS.N    ??motto_set_1
     12            {
     13              ctl.motto.out = -8000;
   \   00000022   0x....             LDR.N    R0,??DataTable2_3  ;; 0xc5fa0000
   \   00000024   0x....             LDR.N    R1,??DataTable2
   \   00000026   0x6408             STR      R0,[R1, #+64]
     14            }
     15            
     16            
     17            if ( ctl.motto.out >= 0.000000  )
   \                     ??motto_set_1: (+1)
   \   00000028   0x....             LDR.N    R0,??DataTable2
   \   0000002A   0x6C00             LDR      R0,[R0, #+64]
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000032   0xD80E             BHI.N    ??motto_set_2
     18            {
     19              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, (uint32) ( ctl.motto.out ) );
   \   00000034   0x....             LDR.N    R0,??DataTable2
   \   00000036   0x6C00             LDR      R0,[R0, #+64]
   \   00000038   0x.... 0x....      BL       __aeabi_f2uiz
   \   0000003C   0x0002             MOVS     R2,R0
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   00000042   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     20              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, (uint32) 0 );
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   0000004C   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
   \   00000050   0xE015             B.N      ??motto_set_3
     21            }
     22            else if ( ctl.motto.out < 0.000000 )
   \                     ??motto_set_2: (+1)
   \   00000052   0x....             LDR.N    R0,??DataTable2
   \   00000054   0x6C00             LDR      R0,[R0, #+64]
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000005C   0xD20F             BCS.N    ??motto_set_3
     23            {
     24              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0 );
   \   0000005E   0x2200             MOVS     R2,#+0
   \   00000060   0x2101             MOVS     R1,#+1
   \   00000062   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   00000064   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     25              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, (uint32) ( -ctl.motto.out ) );
   \   00000068   0x....             LDR.N    R0,??DataTable2
   \   0000006A   0x6C00             LDR      R0,[R0, #+64]
   \   0000006C   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000070   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000074   0x0002             MOVS     R2,R0
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   0000007A   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     26            }
     27            
     28            
     29          }
   \                     ??motto_set_3: (+1)
   \   0000007E   0xBD01             POP      {R0,PC}          ;; return
     30          
     31          
     32          
     33          //轮子172mm 5000个脉冲
     34          

   \                                 In section .text, align 2, keep-with-next
     35          void motto_getsped()
     36          {
   \                     motto_getsped: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     37            
     38            ctl.motto.sped_cur =  LPLD_FTM_GetCounter(FTM2)  ;//赋值需要不可以连等
   \   00000002   0x....             LDR.N    R0,??DataTable2_5  ;; 0x400b8000
   \   00000004   0x.... 0x....      BL       LPLD_FTM_GetCounter
   \   00000008   0x....             LDR.N    R1,??DataTable2
   \   0000000A   0x8588             STRH     R0,[R1, #+44]
     39            
     40            LPLD_FTM_ClearCounter(FTM2);
   \   0000000C   0x....             LDR.N    R0,??DataTable2_5  ;; 0x400b8000
   \   0000000E   0x.... 0x....      BL       LPLD_FTM_ClearCounter
     41            
     42          
     43          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
     44          
     45          
     46          
     47          

   \                                 In section .bss, align 1
     48          int8 Straight_Flag=0;
   \                     Straight_Flag:
   \   00000000                      DS8 1
     49          

   \                                 In section .text, align 2, keep-with-next
     50          void ctl_sped() //速度控制，增量式PI控制
     51          {
   \                     ctl_sped: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     52            
     53            
     54            
     55            if(line.pos[0] > 60 || line.pos[0] < -60)
   \   00000002   0x....             LDR.N    R0,??DataTable2_6
   \   00000004   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \   00000008   0x283D             CMP      R0,#+61
   \   0000000A   0xDA05             BGE.N    ??ctl_sped_0
   \   0000000C   0x....             LDR.N    R0,??DataTable2_6
   \   0000000E   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \   00000012   0xF110 0x0F3C      CMN      R0,#+60
   \   00000016   0xDA17             BGE.N    ??ctl_sped_1
     56            {
     57              
     58              ctl.motto.distance += ctl.motto.sped_cur;
   \                     ??ctl_sped_0: (+1)
   \   00000018   0x....             LDR.N    R0,??DataTable2
   \   0000001A   0xF8B0 0x0054      LDRH     R0,[R0, #+84]
   \   0000001E   0x....             LDR.N    R1,??DataTable2
   \   00000020   0x8D89             LDRH     R1,[R1, #+44]
   \   00000022   0x1808             ADDS     R0,R1,R0
   \   00000024   0x....             LDR.N    R1,??DataTable2
   \   00000026   0xF8A1 0x0054      STRH     R0,[R1, #+84]
     59              
     60              if(ctl.motto.distance >= 5000)
   \   0000002A   0x....             LDR.N    R0,??DataTable2
   \   0000002C   0xF9B0 0x0054      LDRSH    R0,[R0, #+84]
   \   00000030   0xF241 0x3188      MOVW     R1,#+5000
   \   00000034   0x4288             CMP      R0,R1
   \   00000036   0xDB03             BLT.N    ??ctl_sped_2
     61              {
     62                Straight_Flag = 1;
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x....             LDR.N    R1,??DataTable2_7
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
   \   0000003E   0xE00A             B.N      ??ctl_sped_3
     63              }
     64              
     65              else
     66              {
     67                Straight_Flag =0;  
   \                     ??ctl_sped_2: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR.N    R1,??DataTable2_7
   \   00000044   0x7008             STRB     R0,[R1, #+0]
   \   00000046   0xE006             B.N      ??ctl_sped_3
     68              }  
     69              
     70            }
     71            
     72            else
     73            {
     74              Straight_Flag = 0;
   \                     ??ctl_sped_1: (+1)
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR.N    R1,??DataTable2_7
   \   0000004C   0x7008             STRB     R0,[R1, #+0]
     75              ctl.motto.distance = 0;
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x....             LDR.N    R1,??DataTable2
   \   00000052   0xF8A1 0x0054      STRH     R0,[R1, #+84]
     76          
     77            }
     78            
     79            
     80            
     81            if(Straight_Flag == 1)
   \                     ??ctl_sped_3: (+1)
   \   00000056   0x....             LDR.N    R0,??DataTable2_7
   \   00000058   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000005C   0x2801             CMP      R0,#+1
   \   0000005E   0xD11B             BNE.N    ??ctl_sped_4
     82            {
     83              ctl.motto.error[1] =   ctl.motto.aim * 1.15 - ctl.motto.sped_cur;
   \   00000060   0x....             LDR.N    R0,??DataTable2
   \   00000062   0xF9B0 0x002E      LDRSH    R0,[R0, #+46]
   \   00000066   0x.... 0x....      BL       __aeabi_i2d
   \   0000006A   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   0000006E   0x....             LDR.N    R3,??DataTable2_8  ;; 0x3ff26666
   \   00000070   0x.... 0x....      BL       __aeabi_dmul
   \   00000074   0x0004             MOVS     R4,R0
   \   00000076   0x000D             MOVS     R5,R1
   \   00000078   0x....             LDR.N    R0,??DataTable2
   \   0000007A   0xF9B0 0x002C      LDRSH    R0,[R0, #+44]
   \   0000007E   0x.... 0x....      BL       __aeabi_i2d
   \   00000082   0x0002             MOVS     R2,R0
   \   00000084   0x000B             MOVS     R3,R1
   \   00000086   0x0020             MOVS     R0,R4
   \   00000088   0x0029             MOVS     R1,R5
   \   0000008A   0x.... 0x....      BL       __aeabi_dsub
   \   0000008E   0x.... 0x....      BL       __aeabi_d2f
   \   00000092   0x....             LDR.N    R1,??DataTable2
   \   00000094   0x6488             STR      R0,[R1, #+72]
   \   00000096   0xE00A             B.N      ??ctl_sped_5
     84              
     85            }
     86            
     87            else
     88            {
     89              ctl.motto.error[1] =   ctl.motto.aim  - ctl.motto.sped_cur;
   \                     ??ctl_sped_4: (+1)
   \   00000098   0x....             LDR.N    R0,??DataTable2
   \   0000009A   0xF9B0 0x002E      LDRSH    R0,[R0, #+46]
   \   0000009E   0x....             LDR.N    R1,??DataTable2
   \   000000A0   0xF9B1 0x102C      LDRSH    R1,[R1, #+44]
   \   000000A4   0x1A40             SUBS     R0,R0,R1
   \   000000A6   0x.... 0x....      BL       __aeabi_i2f
   \   000000AA   0x....             LDR.N    R1,??DataTable2
   \   000000AC   0x6488             STR      R0,[R1, #+72]
     90            }
     91            
     92            
     93            
     94            ctl.motto.result  = ctl.motto.Kp  * ( ctl.motto.error[1] - ctl.motto.error[0] );
   \                     ??ctl_sped_5: (+1)
   \   000000AE   0x....             LDR.N    R0,??DataTable2
   \   000000B0   0x6C80             LDR      R0,[R0, #+72]
   \   000000B2   0x....             LDR.N    R1,??DataTable2
   \   000000B4   0x6C49             LDR      R1,[R1, #+68]
   \   000000B6   0x.... 0x....      BL       __aeabi_fsub
   \   000000BA   0x....             LDR.N    R1,??DataTable2
   \   000000BC   0x6B09             LDR      R1,[R1, #+48]
   \   000000BE   0x.... 0x....      BL       __aeabi_fmul
   \   000000C2   0x....             LDR.N    R1,??DataTable2
   \   000000C4   0x63C8             STR      R0,[R1, #+60]
     95            ctl.motto.result += ctl.motto.Ki  *   ctl.motto.error[1];
   \   000000C6   0x....             LDR.N    R0,??DataTable2
   \   000000C8   0x6B41             LDR      R1,[R0, #+52]
   \   000000CA   0x....             LDR.N    R0,??DataTable2
   \   000000CC   0x6C80             LDR      R0,[R0, #+72]
   \   000000CE   0x.... 0x....      BL       __aeabi_fmul
   \   000000D2   0x....             LDR.N    R1,??DataTable2
   \   000000D4   0x6BC9             LDR      R1,[R1, #+60]
   \   000000D6   0x.... 0x....      BL       __aeabi_fadd
   \   000000DA   0x....             LDR.N    R1,??DataTable2
   \   000000DC   0x63C8             STR      R0,[R1, #+60]
     96            
     97            ctl.motto.error[0] = ctl.motto.error[1];  
   \   000000DE   0x....             LDR.N    R0,??DataTable2
   \   000000E0   0x6C80             LDR      R0,[R0, #+72]
   \   000000E2   0x....             LDR.N    R1,??DataTable2
   \   000000E4   0x6448             STR      R0,[R1, #+68]
     98            ctl.motto.out += ctl.motto.result;
   \   000000E6   0x....             LDR.N    R0,??DataTable2
   \   000000E8   0x6C01             LDR      R1,[R0, #+64]
   \   000000EA   0x....             LDR.N    R0,??DataTable2
   \   000000EC   0x6BC0             LDR      R0,[R0, #+60]
   \   000000EE   0x.... 0x....      BL       __aeabi_fadd
   \   000000F2   0x....             LDR.N    R1,??DataTable2
   \   000000F4   0x6408             STR      R0,[R1, #+64]
     99            
    100          
    101          
    102          }
   \   000000F6   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ctl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x45FA0001         DC32     0x45fa0001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x45FA0000         DC32     0x45fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0xC5FA0000         DC32     0xc5fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     Straight_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x3FF26666         DC32     0x3ff26666
    103          
    104          
    105          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   ctl_sped
        16   -> __aeabi_d2f
        16   -> __aeabi_dmul
        16   -> __aeabi_dsub
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
        16   -> __aeabi_i2d
        16   -> __aeabi_i2f
       8   motto_getsped
         8   -> LPLD_FTM_ClearCounter
         8   -> LPLD_FTM_GetCounter
       8   motto_set
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> __aeabi_f2uiz
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       1  Straight_Flag
     248  ctl_sped
      20  motto_getsped
     128  motto_set

 
   1 byte  in section .bss
 432 bytes in section .text
 
 432 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
