###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        18/Oct/2015  16:10:11
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\app\IMG\CCD.c
#    Command line =  
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\app\IMG\CCD.c
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\FLASH\List\
#        -lB
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\FLASH\List\
#        -o
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\app\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\app\MAIN\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\app\BSP\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\app\CTL\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\app\IMG\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\app\ITAC\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\CPU\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\common\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\LPLD\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\LPLD\HW\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\FatFs\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\FatFs\option\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\USB\common\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\USB\driver\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\USB\descriptor\
#        -I
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\..\..\..\lib\USB\class\
#        -On -I "D:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\FLASH\List\CCD.lst
#    Object file  =  
#        X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\iar\FLASH\Obj\CCD.o
#
###############################################################################

X:\whutddk\·ÉË¼¿¨¶û\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup1.0\app\IMG\CCD.c
      1          #include "include.h"
      2          
      3          
      4          /*************************************************************************
      5          *                             À¶Öæµç×Ó¹¤×÷ÊÒ
      6          *
      7          *  º¯ÊýÃû³Æ£ºCCD_init
      8          *  ¹¦ÄÜËµÃ÷£ºCCD³õÊ¼»¯
      9          *  ²ÎÊýËµÃ÷£º
     10          *  º¯Êý·µ»Ø£ºÎÞ
     11          *  ÐÞ¸ÄÊ±¼ä£º2012-10-20
     12          *  ±¸    ×¢£ºÀîÈñ¸ê 2015 9 13
     13          *************************************************************************/
     14          

   \                                 In section .bss, align 4
     15          GPIO_InitTypeDef ccdgpio_struct;
   \                     ccdgpio_struct:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     16          ADC_InitTypeDef ccdadc_struct;
   \                     ccdadc_struct:
   \   00000000                      DS8 20
     17          

   \                                 In section .text, align 2, keep-with-next
     18          void CCD_init()
     19          {
   \                     CCD_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     20            ccdgpio_struct.GPIO_PTx = PTA;
   \   00000002   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000004   0x....             LDR.N    R1,??DataTable2_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
     21            ccdgpio_struct.GPIO_Pins = GPIO_Pin28 | GPIO_Pin29 ;
   \   00000008   0xF05F 0x5040      MOVS     R0,#+805306368
   \   0000000C   0x....             LDR.N    R1,??DataTable2_1
   \   0000000E   0x6048             STR      R0,[R1, #+4]
     22            ccdgpio_struct.GPIO_Dir = DIR_OUTPUT;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x....             LDR.N    R1,??DataTable2_1
   \   00000014   0x7308             STRB     R0,[R1, #+12]
     23            ccdgpio_struct.GPIO_Output = OUTPUT_H;
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable2_1
   \   0000001A   0x7348             STRB     R0,[R1, #+13]
     24            ccdgpio_struct.GPIO_PinControl = IRQC_DIS;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR.N    R1,??DataTable2_1
   \   00000020   0x6088             STR      R0,[R1, #+8]
     25            LPLD_GPIO_Init(ccdgpio_struct);//SI CLK
   \   00000022   0x....             LDR.N    R1,??DataTable2_1
   \   00000024   0xB084             SUB      SP,SP,#+16
   \   00000026   0x4668             MOV      R0,SP
   \   00000028   0x2214             MOVS     R2,#+20
   \   0000002A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002E   0xBC0F             POP      {R0-R3}
   \   00000030   0x.... 0x....      BL       LPLD_GPIO_Init
     26            
     27            ccdadc_struct.ADC_Adcx = ADC0;
   \   00000034   0x....             LDR.N    R0,??DataTable2_2  ;; 0x4003b000
   \   00000036   0x....             LDR.N    R1,??DataTable2_3
   \   00000038   0x6008             STR      R0,[R1, #+0]
     28            ccdadc_struct.ADC_BitMode = SE_8BIT;
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x....             LDR.N    R1,??DataTable2_3
   \   0000003E   0x7148             STRB     R0,[R1, #+5]
     29            ccdadc_struct.ADC_DiffMode = ADC_SE;
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR.N    R1,??DataTable2_3
   \   00000044   0x7108             STRB     R0,[R1, #+4]
     30            ccdadc_struct.ADC_SampleTimeCfg = SAMTIME_SHORT;
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x....             LDR.N    R1,??DataTable2_3
   \   0000004A   0x7188             STRB     R0,[R1, #+6]
     31            ccdadc_struct.ADC_HwAvgSel = HW_DISAVG ;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x....             LDR.N    R1,??DataTable2_3
   \   00000050   0x7208             STRB     R0,[R1, #+8]
     32            ccdadc_struct.ADC_CalEnable = TRUE;
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x....             LDR.N    R1,??DataTable2_3
   \   00000056   0x72C8             STRB     R0,[R1, #+11]
     33            ccdadc_struct.ADC_DmaEnable = FALSE;        //Ê¹ÄÜDMA
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x....             LDR.N    R1,??DataTable2_3
   \   0000005C   0x7348             STRB     R0,[R1, #+13]
     34            ccdadc_struct.ADC_HwTrgCfg = HW_TRGDSABLE;      //ÅäÖÃÎªÓ²¼þ´¥·¢×ª»»
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x....             LDR.N    R1,??DataTable2_3
   \   00000062   0x7308             STRB     R0,[R1, #+12]
     35            
     36            LPLD_ADC_Init(ccdadc_struct);
   \   00000064   0x....             LDR.N    R1,??DataTable2_3
   \   00000066   0xB084             SUB      SP,SP,#+16
   \   00000068   0x4668             MOV      R0,SP
   \   0000006A   0x2214             MOVS     R2,#+20
   \   0000006C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000070   0xBC0F             POP      {R0-R3}
   \   00000072   0x.... 0x....      BL       LPLD_ADC_Init
     37            LPLD_ADC_Chn_Enable(ADC0, AD8); //ccd0
   \   00000076   0x2108             MOVS     R1,#+8
   \   00000078   0x....             LDR.N    R0,??DataTable2_2  ;; 0x4003b000
   \   0000007A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     38            LPLD_ADC_Chn_Enable(ADC0, AD9); //ccd1
   \   0000007E   0x2109             MOVS     R1,#+9
   \   00000080   0x....             LDR.N    R0,??DataTable2_2  ;; 0x4003b000
   \   00000082   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     39            LPLD_ADC_Chn_Enable(ADC0, AD12); //ccd2
   \   00000086   0x210C             MOVS     R1,#+12
   \   00000088   0x....             LDR.N    R0,??DataTable2_2  ;; 0x4003b000
   \   0000008A   0x.... 0x....      BL       LPLD_ADC_Chn_Enable
     40          }
   \   0000008E   0xBD01             POP      {R0,PC}          ;; return
     41          

   \                                 In section .text, align 2, keep-with-next
     42          void StartIntegration(void) 
     43          {
   \                     StartIntegration: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     44            
     45            uint8 i;
     46            
     47            SI_SetVal();            /* SI  = 1 */
   \   00000002   0x2201             MOVS     R2,#+1
   \   00000004   0x211C             MOVS     R1,#+28
   \   00000006   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000008   0x.... 0x....      BL       LPLD_GPIO_Output_b
     48            SamplingDelay();
   \   0000000C   0x.... 0x....      BL       SamplingDelay
     49            CLK_SetVal();           /* CLK = 1 */
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x211D             MOVS     R1,#+29
   \   00000014   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000016   0x.... 0x....      BL       LPLD_GPIO_Output_b
     50            SamplingDelay();
   \   0000001A   0x.... 0x....      BL       SamplingDelay
     51            SI_ClrVal();            /* SI  = 0 */
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x211C             MOVS     R1,#+28
   \   00000022   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000024   0x.... 0x....      BL       LPLD_GPIO_Output_b
     52            SamplingDelay();
   \   00000028   0x.... 0x....      BL       SamplingDelay
     53            CLK_ClrVal();           /* CLK = 0 */
   \   0000002C   0x2200             MOVS     R2,#+0
   \   0000002E   0x211D             MOVS     R1,#+29
   \   00000030   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Output_b
     54            
     55            for(i=0; i<127; i++)
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x0004             MOVS     R4,R0
   \                     ??StartIntegration_0: (+1)
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x2C7F             CMP      R4,#+127
   \   0000003E   0xDA13             BGE.N    ??StartIntegration_1
     56            {
     57              SamplingDelay();
   \   00000040   0x.... 0x....      BL       SamplingDelay
     58              SamplingDelay();
   \   00000044   0x.... 0x....      BL       SamplingDelay
     59              CLK_SetVal();       /* CLK = 1 */
   \   00000048   0x2201             MOVS     R2,#+1
   \   0000004A   0x211D             MOVS     R1,#+29
   \   0000004C   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Output_b
     60              SamplingDelay();
   \   00000052   0x.... 0x....      BL       SamplingDelay
     61              SamplingDelay();
   \   00000056   0x.... 0x....      BL       SamplingDelay
     62              CLK_ClrVal();       /* CLK = 0 */
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0x211D             MOVS     R1,#+29
   \   0000005E   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000060   0x.... 0x....      BL       LPLD_GPIO_Output_b
     63            }
   \   00000064   0x1C64             ADDS     R4,R4,#+1
   \   00000066   0xE7E8             B.N      ??StartIntegration_0
     64            SamplingDelay();
   \                     ??StartIntegration_1: (+1)
   \   00000068   0x.... 0x....      BL       SamplingDelay
     65            SamplingDelay();
   \   0000006C   0x.... 0x....      BL       SamplingDelay
     66            CLK_SetVal();           /* CLK = 1 */
   \   00000070   0x2201             MOVS     R2,#+1
   \   00000072   0x211D             MOVS     R1,#+29
   \   00000074   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000076   0x.... 0x....      BL       LPLD_GPIO_Output_b
     67            SamplingDelay();
   \   0000007A   0x.... 0x....      BL       SamplingDelay
     68            SamplingDelay();
   \   0000007E   0x.... 0x....      BL       SamplingDelay
     69            CLK_ClrVal();           /* CLK = 0 */
   \   00000082   0x2200             MOVS     R2,#+0
   \   00000084   0x211D             MOVS     R1,#+29
   \   00000086   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000088   0x.... 0x....      BL       LPLD_GPIO_Output_b
     70          }
   \   0000008C   0xBD10             POP      {R4,PC}          ;; return
     71          
     72          
     73          /*************************************************************************
     74          *                           À¶Öæµç×Ó¹¤×÷ÊÒ
     75          *
     76          *  º¯ÊýÃû³Æ£ºImageCapture
     77          *  ¹¦ÄÜËµÃ÷£ºCCD²ÉÑù³ÌÐò
     78          *  ²ÎÊýËµÃ÷£º* ImageData   ²ÉÑùÊý×é
     79          *  º¯Êý·µ»Ø£ºÎÞ
     80          *  ÐÞ¸ÄÊ±¼ä£º2012-10-20
     81          *  ±¸    ×¢£º
     82          *ImageData =  ad_once(ADC1, AD6a, ADC_8bit);
     83          *************************************************************************/
     84          

   \                                 In section .text, align 2, keep-with-next
     85          void ImageCapture() 
     86          {
   \                     ImageCapture: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     87            
     88            uint8_t i;
     89            uint8 *i1 = &img.Pixel[0][0];
   \   00000002   0x....             LDR.N    R5,??DataTable2_4
     90            uint8 *i2 = &img.Pixel[1][0];
   \   00000004   0x....             LDR.N    R6,??DataTable2_5
     91            extern uint8_t AtemP ;
     92            
     93            SI_SetVal();            /* SI  = 1 */
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x211C             MOVS     R1,#+28
   \   0000000A   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   0000000C   0x.... 0x....      BL       LPLD_GPIO_Output_b
     94            SamplingDelay();
   \   00000010   0x.... 0x....      BL       SamplingDelay
     95            CLK_SetVal();           /* CLK = 1 */
   \   00000014   0x2201             MOVS     R2,#+1
   \   00000016   0x211D             MOVS     R1,#+29
   \   00000018   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
     96            SamplingDelay();
   \   0000001E   0x.... 0x....      BL       SamplingDelay
     97            SI_ClrVal();            /* SI  = 0 */
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0x211C             MOVS     R1,#+28
   \   00000026   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000028   0x.... 0x....      BL       LPLD_GPIO_Output_b
     98            SamplingDelay();
   \   0000002C   0x.... 0x....      BL       SamplingDelay
     99            
    100            //Delay 10us for sample the first pixel
    101            /**/
    102            for(i = 0; i < 250; i++) {                    //¸ü¸Ä250£¬ÈÃCCDµÄÍ¼Ïñ¿´ÉÏÈ¥±È½ÏÆ½»¬£¬
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x0004             MOVS     R4,R0
   \                     ??ImageCapture_0: (+1)
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x2CFA             CMP      R4,#+250
   \   00000038   0xDA03             BGE.N    ??ImageCapture_1
    103              SamplingDelay() ;  //200ns                  //°Ñ¸ÃÖµ¸Ä´ó»òÕß¸ÄÐ¡´ïµ½×Ô¼ºÂúÒâµÄ½á¹û¡£
   \   0000003A   0x.... 0x....      BL       SamplingDelay
    104            }
   \   0000003E   0x1C64             ADDS     R4,R4,#+1
   \   00000040   0xE7F8             B.N      ??ImageCapture_0
    105            
    106            //Sampling Pixel 1
    107            
    108            *i1 =  LPLD_ADC_Get(ADC0, AD9);
   \                     ??ImageCapture_1: (+1)
   \   00000042   0x2109             MOVS     R1,#+9
   \   00000044   0x....             LDR.N    R0,??DataTable2_2  ;; 0x4003b000
   \   00000046   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000004A   0x7028             STRB     R0,[R5, #+0]
    109            i1 ++ ;
   \   0000004C   0x1C6D             ADDS     R5,R5,#+1
    110            *i2 =  LPLD_ADC_Get(ADC0, AD12);
   \   0000004E   0x210C             MOVS     R1,#+12
   \   00000050   0x....             LDR.N    R0,??DataTable2_2  ;; 0x4003b000
   \   00000052   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000056   0x7030             STRB     R0,[R6, #+0]
    111            i2 ++ ;
   \   00000058   0x1C76             ADDS     R6,R6,#+1
    112            CLK_ClrVal();           /* CLK = 0 */
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0x211D             MOVS     R1,#+29
   \   0000005E   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   00000060   0x.... 0x....      BL       LPLD_GPIO_Output_b
    113            
    114            for(i=0; i<127; i++) {
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x0004             MOVS     R4,R0
   \                     ??ImageCapture_2: (+1)
   \   00000068   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006A   0x2C7F             CMP      R4,#+127
   \   0000006C   0xDA1F             BGE.N    ??ImageCapture_3
    115              SamplingDelay();
   \   0000006E   0x.... 0x....      BL       SamplingDelay
    116              SamplingDelay();
   \   00000072   0x.... 0x....      BL       SamplingDelay
    117              CLK_SetVal();       /* CLK = 1 */
   \   00000076   0x2201             MOVS     R2,#+1
   \   00000078   0x211D             MOVS     R1,#+29
   \   0000007A   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   0000007C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    118              SamplingDelay();
   \   00000080   0x.... 0x....      BL       SamplingDelay
    119              SamplingDelay();
   \   00000084   0x.... 0x....      BL       SamplingDelay
    120              //Sampling Pixel 2~128
    121              
    122              *i1 =  LPLD_ADC_Get(ADC0, AD9);
   \   00000088   0x2109             MOVS     R1,#+9
   \   0000008A   0x....             LDR.N    R0,??DataTable2_2  ;; 0x4003b000
   \   0000008C   0x.... 0x....      BL       LPLD_ADC_Get
   \   00000090   0x7028             STRB     R0,[R5, #+0]
    123              *i2 =  LPLD_ADC_Get(ADC0, AD12);
   \   00000092   0x210C             MOVS     R1,#+12
   \   00000094   0x....             LDR.N    R0,??DataTable2_2  ;; 0x4003b000
   \   00000096   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000009A   0x7030             STRB     R0,[R6, #+0]
    124              i1 ++ ;
   \   0000009C   0x1C6D             ADDS     R5,R5,#+1
    125              i2 ++;
   \   0000009E   0x1C76             ADDS     R6,R6,#+1
    126              CLK_ClrVal();       /* CLK = 0 */
   \   000000A0   0x2200             MOVS     R2,#+0
   \   000000A2   0x211D             MOVS     R1,#+29
   \   000000A4   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   000000A6   0x.... 0x....      BL       LPLD_GPIO_Output_b
    127            }
   \   000000AA   0x1C64             ADDS     R4,R4,#+1
   \   000000AC   0xE7DC             B.N      ??ImageCapture_2
    128            SamplingDelay();
   \                     ??ImageCapture_3: (+1)
   \   000000AE   0x.... 0x....      BL       SamplingDelay
    129            SamplingDelay();
   \   000000B2   0x.... 0x....      BL       SamplingDelay
    130            CLK_SetVal();           /* CLK = 1 */
   \   000000B6   0x2201             MOVS     R2,#+1
   \   000000B8   0x211D             MOVS     R1,#+29
   \   000000BA   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   000000BC   0x.... 0x....      BL       LPLD_GPIO_Output_b
    131            SamplingDelay();
   \   000000C0   0x.... 0x....      BL       SamplingDelay
    132            SamplingDelay();
   \   000000C4   0x.... 0x....      BL       SamplingDelay
    133            CLK_ClrVal();           /* CLK = 0 */
   \   000000C8   0x2200             MOVS     R2,#+0
   \   000000CA   0x211D             MOVS     R1,#+29
   \   000000CC   0x....             LDR.N    R0,??DataTable2  ;; 0x400ff000
   \   000000CE   0x.... 0x....      BL       LPLD_GPIO_Output_b
    134            
    135          }
   \   000000D2   0xBD70             POP      {R4-R6,PC}       ;; return
    136          
    137          
    138          
    139          
    140          /*************************************************************************
    141          *                           À¶Öæµç×Ó¹¤×÷ÊÒ
    142          *
    143          *  º¯ÊýÃû³Æ£ºSamplingDelay
    144          *  ¹¦ÄÜËµÃ÷£ºCCDÑÓÊ±³ÌÐò 200ns
    145          *  ²ÎÊýËµÃ÷£º
    146          *  º¯Êý·µ»Ø£ºÎÞ
    147          *  ÐÞ¸ÄÊ±¼ä£º2012-10-20
    148          *  ±¸    ×¢£º
    149          *************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    150          void SamplingDelay(void)
    151          {
   \                     SamplingDelay: (+1)
   \   00000000   0xB081             SUB      SP,SP,#+4
    152            vuint8 i ;
    153            for(i=0;i<1;i++) 
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \                     ??SamplingDelay_0: (+1)
   \   00000008   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD107             BNE.N    ??SamplingDelay_1
    154            {
    155              asm("nop");
   \   00000010   0xBF00             nop
    156              asm("nop");
   \   00000012   0xBF00             nop
    157            }
   \   00000014   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000018   0x1C40             ADDS     R0,R0,#+1
   \   0000001A   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   0000001E   0xE7F3             B.N      ??SamplingDelay_0
    158            
    159          }
   \                     ??SamplingDelay_1: (+1)
   \   00000020   0xB001             ADD      SP,SP,#+4
   \   00000022   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     ccdgpio_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     ccdadc_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     img

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     img+0x80
    160          
    161          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   CCD_init
         8   -> LPLD_ADC_Chn_Enable
         8   -> LPLD_ADC_Init
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4
      16   ImageCapture
        16   -> LPLD_ADC_Get
        16   -> LPLD_GPIO_Output_b
        16   -> SamplingDelay
       4   SamplingDelay
       8   StartIntegration
         8   -> LPLD_GPIO_Output_b
         8   -> SamplingDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
     144  CCD_init
     212  ImageCapture
      36  SamplingDelay
     142  StartIntegration
      20  ccdadc_struct
      20  ccdgpio_struct

 
  40 bytes in section .bss
 558 bytes in section .text
 
 558 bytes of CODE memory
  40 bytes of DATA memory

Errors: none
Warnings: none
