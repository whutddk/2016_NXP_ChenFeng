###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        06/Mar/2016  20:36:08
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\app\CTL\control.c
#    Command line =  
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\app\CTL\control.c"
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\List\"
#        -lB
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\List\"
#        -o
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\MAIN\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\BSP\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\ITAC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\CTL\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\SENSOR\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\CPU\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\LPLD\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\FatFs\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\USB\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\USB\driver\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\USB\class\"
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\List\control.lst
#    Object file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\Obj\control.o
#
###############################################################################

D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\app\CTL\control.c
      1          //控制部分通用代码
      2          #include "include.h"
      3          

   \                                 In section .bss, align 4
      4          struct _ctl ctl;
   \                     ctl:
   \   00000000                      DS8 72
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void CTL_SEN_init()//控制参数初始化
      7          {
      8            ctl.S3010.Kp = 0;
   \                     CTL_SEN_init: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable1
   \   00000004   0x6048             STR      R0,[R1, #+4]
      9            ctl.S3010.Ki = 0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x....             LDR.N    R1,??DataTable1
   \   0000000A   0x6088             STR      R0,[R1, #+8]
     10            ctl.S3010.Kd = 0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x....             LDR.N    R1,??DataTable1
   \   00000010   0x60C8             STR      R0,[R1, #+12]
     11            
     12            ctl.motto.aim = 0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR.N    R1,??DataTable1
   \   00000016   0x84C8             STRH     R0,[R1, #+38]
     13            
     14            ctl.motto.Kp = 1.1;
   \   00000018   0x....             LDR.N    R0,??DataTable1_1  ;; 0x3f8ccccd
   \   0000001A   0x....             LDR.N    R1,??DataTable1
   \   0000001C   0x6288             STR      R0,[R1, #+40]
     15            ctl.motto.Ki = 0.3;
   \   0000001E   0x....             LDR.N    R0,??DataTable1_2  ;; 0x3e99999a
   \   00000020   0x....             LDR.N    R1,??DataTable1
   \   00000022   0x62C8             STR      R0,[R1, #+44]
     16            ctl.motto.Kd = 0;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x....             LDR.N    R1,??DataTable1
   \   00000028   0x6308             STR      R0,[R1, #+48]
     17            
     18          
     19            
     20            ctl.motto.out = 0;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR.N    R1,??DataTable1
   \   0000002E   0x63C8             STR      R0,[R1, #+60]
     21            
     22            line.lose_cnt = 0;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR.N    R1,??DataTable1_3
   \   00000034   0xF881 0x0029      STRB     R0,[R1, #+41]
     23            line.Hight = 0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x....             LDR.N    R1,??DataTable1_3
   \   0000003C   0xF881 0x002B      STRB     R0,[R1, #+43]
     24            line.flag_lose = 0;
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR.N    R1,??DataTable1_3
   \   00000044   0xF881 0x002A      STRB     R0,[R1, #+42]
     25            line.final = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR.N    R1,??DataTable1_3
   \   0000004C   0xF881 0x002C      STRB     R0,[R1, #+44]
     26            line.cross = 0;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x....             LDR.N    R1,??DataTable1_3
   \   00000054   0xF881 0x002D      STRB     R0,[R1, #+45]
     27            line.pos = 0;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x....             LDR.N    R1,??DataTable1_3
   \   0000005C   0xF881 0x002E      STRB     R0,[R1, #+46]
     28          }
   \   00000060   0x4770             BX       LR               ;; return
     29          
     30          
     31          //控制中断函数

   \                                 In section .text, align 2, keep-with-next
     32          void CTL_isr()//控制系统调度 //10ms
     33          {
   \                     CTL_isr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     34            static uint8 cnt = 0;
     35          
     36            cnt++;
   \   00000002   0x....             LDR.N    R0,??DataTable1_4
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x....             LDR.N    R1,??DataTable1_4
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
     37          
     38            
     39            if ( flag_stop == 0 ) //无急停标志
   \   0000000C   0x....             LDR.N    R0,??DataTable1_5
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x2800             CMP      R0,#+0
   \   00000012   0xD10F             BNE.N    ??CTL_isr_0
     40            {
     41              S3010_CTL();
   \   00000014   0x.... 0x....      BL       S3010_CTL
     42              
     43              //20ms中断区
     44              if ( cnt >= 2 )
   \   00000018   0x....             LDR.N    R0,??DataTable1_4
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x2802             CMP      R0,#+2
   \   0000001E   0xDB19             BLT.N    ??CTL_isr_1
     45              {
     46                cnt = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x....             LDR.N    R1,??DataTable1_4
   \   00000024   0x7008             STRB     R0,[R1, #+0]
     47                
     48                motto_getsped();//测速
   \   00000026   0x.... 0x....      BL       motto_getsped
     49                ctl_sped();//速度控制
   \   0000002A   0x.... 0x....      BL       ctl_sped
     50                motto_set();//电机输出    
   \   0000002E   0x.... 0x....      BL       motto_set
   \   00000032   0xE00F             B.N      ??CTL_isr_1
     51              }
     52              
     53            }
     54            else
     55            {
     56              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, 0 );
   \                     ??CTL_isr_0: (+1)
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40038000
   \   0000003A   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     57              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0 );
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x2101             MOVS     R1,#+1
   \   00000042   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40038000
   \   00000044   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     58          
     59              
     60              LPLD_FTM_PWM_ChangeDuty(FTM1, FTM_Ch0, 1520 );
   \   00000048   0xF44F 0x62BE      MOV      R2,#+1520
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x....             LDR.N    R0,??DataTable1_7  ;; 0x40039000
   \   00000050   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     61              
     62            }
     63            //此处是代码冗余
     64            safty_check();
   \                     ??CTL_isr_1: (+1)
   \   00000054   0x.... 0x....      BL       safty_check
     65          }
   \   00000058   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??cnt:
   \   00000000                      DS8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     ctl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x3F8CCCCD         DC32     0x3f8ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x3E99999A         DC32     0x3e99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     ??cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     flag_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x40039000         DC32     0x40039000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   CTL_SEN_init
       8   CTL_isr
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> S3010_CTL
         8   -> ctl_sped
         8   -> motto_getsped
         8   -> motto_set
         8   -> safty_check


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
      98  CTL_SEN_init
      90  CTL_isr
       1  cnt
      72  ctl

 
  73 bytes in section .bss
 220 bytes in section .text
 
 220 bytes of CODE memory
  73 bytes of DATA memory

Errors: none
Warnings: none
