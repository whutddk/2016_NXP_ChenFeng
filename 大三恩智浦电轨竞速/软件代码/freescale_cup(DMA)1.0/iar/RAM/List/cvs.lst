###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        06/Mar/2016  20:36:08
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\app\SENSOR\cvs.c
#    Command line =  
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\app\SENSOR\cvs.c"
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\List\"
#        -lB
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\List\"
#        -o
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\MAIN\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\BSP\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\ITAC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\CTL\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\app\SENSOR\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\CPU\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\LPLD\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\FatFs\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\USB\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\USB\driver\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\..\..\..\lib\USB\class\"
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\List\cvs.lst
#    Object file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\iar\RAM\Obj\cvs.o
#
###############################################################################

D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup(DMA)1.0\app\SENSOR\cvs.c
      1          #include "include.h"
      2          
      3          //DMA 

   \                                 In section .bss, align 4
      4          GPIO_InitTypeDef ICGPIO_init;
   \                     ICGPIO_init:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
      5          DMA_InitTypeDef ICDMA_init;
   \                     ICDMA_init:
   \   00000000                      DS8 44
      6          

   \                                 In section .bss, align 2
      7          uint8 trick[2] = {0,0};
   \                     trick:
   \   00000000                      DS8 2
      8          

   \                                 In section .text, align 2, keep-with-next
      9          void gpio_init()
     10          {
   \                     gpio_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     11            ICGPIO_init.GPIO_PTx = PTA;
   \   00000002   0x....             LDR.N    R0,??DataTable3  ;; 0x400ff000
   \   00000004   0x....             LDR.N    R1,??DataTable3_1
   \   00000006   0x6008             STR      R0,[R1, #+0]
     12            ICGPIO_init.GPIO_Pins = GPIO_Pin19;
   \   00000008   0xF45F 0x2000      MOVS     R0,#+524288
   \   0000000C   0x....             LDR.N    R1,??DataTable3_1
   \   0000000E   0x6048             STR      R0,[R1, #+4]
     13            ICGPIO_init.GPIO_Dir = DIR_INPUT;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable3_1
   \   00000014   0x7308             STRB     R0,[R1, #+12]
     14            ICGPIO_init.GPIO_PinControl = IRQC_DMAFA | INPUT_PULL_UP; //
   \   00000016   0x....             LDR.N    R0,??DataTable3_2  ;; 0x20003
   \   00000018   0x....             LDR.N    R1,??DataTable3_1
   \   0000001A   0x6088             STR      R0,[R1, #+8]
     15            LPLD_GPIO_Init(ICGPIO_init); 
   \   0000001C   0x....             LDR.N    R1,??DataTable3_1
   \   0000001E   0xB084             SUB      SP,SP,#+16
   \   00000020   0x4668             MOV      R0,SP
   \   00000022   0x2214             MOVS     R2,#+20
   \   00000024   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000028   0xBC0F             POP      {R0-R3}
   \   0000002A   0x.... 0x....      BL       LPLD_GPIO_Init
     16            
     17            ICGPIO_init.GPIO_PTx = PTB;
   \   0000002E   0x....             LDR.N    R0,??DataTable3_3  ;; 0x400ff040
   \   00000030   0x....             LDR.N    R1,??DataTable3_1
   \   00000032   0x6008             STR      R0,[R1, #+0]
     18            ICGPIO_init.GPIO_Pins = GPIO_Pin0;
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x....             LDR.N    R1,??DataTable3_1
   \   00000038   0x6048             STR      R0,[R1, #+4]
     19            ICGPIO_init.GPIO_Dir = DIR_INPUT;
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x....             LDR.N    R1,??DataTable3_1
   \   0000003E   0x7308             STRB     R0,[R1, #+12]
     20            ICGPIO_init.GPIO_PinControl = IRQC_DMAFA | INPUT_PULL_UP; //
   \   00000040   0x....             LDR.N    R0,??DataTable3_2  ;; 0x20003
   \   00000042   0x....             LDR.N    R1,??DataTable3_1
   \   00000044   0x6088             STR      R0,[R1, #+8]
     21            LPLD_GPIO_Init(ICGPIO_init); 
   \   00000046   0x....             LDR.N    R1,??DataTable3_1
   \   00000048   0xB084             SUB      SP,SP,#+16
   \   0000004A   0x4668             MOV      R0,SP
   \   0000004C   0x2214             MOVS     R2,#+20
   \   0000004E   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000052   0xBC0F             POP      {R0-R3}
   \   00000054   0x.... 0x....      BL       LPLD_GPIO_Init
     22          }
   \   00000058   0xBD01             POP      {R0,PC}          ;; return
     23          

   \                                 In section .text, align 2, keep-with-next
     24          void dma_init()
     25          {
   \                     dma_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     26            //DMA参数配置
     27            ICDMA_init.DMA_CHx = DMA_CH0;    //CH0通道
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x....             LDR.N    R1,??DataTable3_4
   \   00000008   0x7008             STRB     R0,[R1, #+0]
     28            ICDMA_init.DMA_Req = PORTA_DMAREQ;       //PORTE为请求源
   \   0000000A   0x2031             MOVS     R0,#+49
   \   0000000C   0x....             LDR.N    R1,??DataTable3_4
   \   0000000E   0x7048             STRB     R0,[R1, #+1]
     29            ICDMA_init.DMA_MajorLoopCnt = 0x7fff; //主循环计数值：行采集点数，宽度
   \   00000010   0xF647 0x70FF      MOVW     R0,#+32767
   \   00000014   0x....             LDR.N    R1,??DataTable3_4
   \   00000016   0x8088             STRH     R0,[R1, #+4]
     30            ICDMA_init.DMA_MinorByteCnt = 1; //次循环字节计数：每次读入1字节
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x....             LDR.N    R1,??DataTable3_4
   \   0000001C   0x6088             STR      R0,[R1, #+8]
     31            ICDMA_init.DMA_SourceAddr = (uint32)&trick[0];        //源地址：PTD8~15
   \   0000001E   0x....             LDR.N    R0,??DataTable3_5
   \   00000020   0x....             LDR.N    R1,??DataTable3_4
   \   00000022   0x60C8             STR      R0,[R1, #+12]
     32            ICDMA_init.DMA_DestAddr =  (uint32)&trick[1];      //目的地址：存放图像的数组
   \   00000024   0x....             LDR.N    R0,??DataTable3_6
   \   00000026   0x....             LDR.N    R1,??DataTable3_4
   \   00000028   0x6188             STR      R0,[R1, #+24]
     33            ICDMA_init.DMA_DestAddrOffset = 0;       //目的地址偏移：每次读入增加1
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR.N    R1,??DataTable3_4
   \   0000002E   0x83C8             STRH     R0,[R1, #+30]
     34            ICDMA_init.DMA_AutoDisableReq = TRUE;    //自动禁用请求
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x....             LDR.N    R1,??DataTable3_4
   \   00000034   0xF881 0x0024      STRB     R0,[R1, #+36]
     35            
     36            //初始化DMA
     37            LPLD_DMA_Init(ICDMA_init);
   \   00000038   0x....             LDR.N    R1,??DataTable3_4
   \   0000003A   0xB084             SUB      SP,SP,#+16
   \   0000003C   0x4668             MOV      R0,SP
   \   0000003E   0x222C             MOVS     R2,#+44
   \   00000040   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000044   0xBC0F             POP      {R0-R3}
   \   00000046   0x.... 0x....      BL       LPLD_DMA_Init
     38            
     39              //DMA参数配置
     40            ICDMA_init.DMA_CHx = DMA_CH1;    //CH0通道
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0x....             LDR.N    R1,??DataTable3_4
   \   0000004E   0x7008             STRB     R0,[R1, #+0]
     41            ICDMA_init.DMA_Req = PORTB_DMAREQ;       //PORTE为请求源
   \   00000050   0x2032             MOVS     R0,#+50
   \   00000052   0x....             LDR.N    R1,??DataTable3_4
   \   00000054   0x7048             STRB     R0,[R1, #+1]
     42            ICDMA_init.DMA_MajorLoopCnt = 0x7fff; //主循环计数值：行采集点数，宽度
   \   00000056   0xF647 0x70FF      MOVW     R0,#+32767
   \   0000005A   0x....             LDR.N    R1,??DataTable3_4
   \   0000005C   0x8088             STRH     R0,[R1, #+4]
     43            ICDMA_init.DMA_MinorByteCnt = 1; //次循环字节计数：每次读入1字节
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0x....             LDR.N    R1,??DataTable3_4
   \   00000062   0x6088             STR      R0,[R1, #+8]
     44            ICDMA_init.DMA_SourceAddr = (uint32)&trick[0];        //源地址：PTD8~15
   \   00000064   0x....             LDR.N    R0,??DataTable3_5
   \   00000066   0x....             LDR.N    R1,??DataTable3_4
   \   00000068   0x60C8             STR      R0,[R1, #+12]
     45            ICDMA_init.DMA_DestAddr =  (uint32)&trick[1];      //目的地址：存放图像的数组
   \   0000006A   0x....             LDR.N    R0,??DataTable3_6
   \   0000006C   0x....             LDR.N    R1,??DataTable3_4
   \   0000006E   0x6188             STR      R0,[R1, #+24]
     46            ICDMA_init.DMA_DestAddrOffset = 0;       //目的地址偏移：每次读入增加1
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x....             LDR.N    R1,??DataTable3_4
   \   00000074   0x83C8             STRH     R0,[R1, #+30]
     47            ICDMA_init.DMA_AutoDisableReq = TRUE;    //自动禁用请求
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x....             LDR.N    R1,??DataTable3_4
   \   0000007A   0xF881 0x0024      STRB     R0,[R1, #+36]
     48            
     49            LPLD_DMA_Init(ICDMA_init);
   \   0000007E   0x....             LDR.N    R1,??DataTable3_4
   \   00000080   0xB084             SUB      SP,SP,#+16
   \   00000082   0x4668             MOV      R0,SP
   \   00000084   0x222C             MOVS     R2,#+44
   \   00000086   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000008A   0xBC0F             POP      {R0-R3}
   \   0000008C   0x.... 0x....      BL       LPLD_DMA_Init
     50            
     51            //检测到场开始信号，加载目的地址
     52              LPLD_DMA_LoadDstAddr(DMA_CH0,&trick[1]);
   \   00000090   0x....             LDR.N    R0,??DataTable3_6
   \   00000092   0x....             LDR.N    R1,??DataTable3_7  ;; 0x40009010
   \   00000094   0x6008             STR      R0,[R1, #+0]
     53              LPLD_DMA_EnableReq(DMA_CH0);  
   \   00000096   0x....             LDR.N    R0,??DataTable3_8  ;; 0x4000800c
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000009E   0x....             LDR.N    R1,??DataTable3_8  ;; 0x4000800c
   \   000000A0   0x6008             STR      R0,[R1, #+0]
     54              
     55                //检测到场开始信号，加载目的地址
     56              LPLD_DMA_LoadDstAddr(DMA_CH1,&trick[1]);
   \   000000A2   0x....             LDR.N    R0,??DataTable3_6
   \   000000A4   0x....             LDR.N    R1,??DataTable3_9  ;; 0x40009030
   \   000000A6   0x6008             STR      R0,[R1, #+0]
     57              LPLD_DMA_EnableReq(DMA_CH1);  
   \   000000A8   0x....             LDR.N    R0,??DataTable3_8  ;; 0x4000800c
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000B0   0x....             LDR.N    R1,??DataTable3_8  ;; 0x4000800c
   \   000000B2   0x6008             STR      R0,[R1, #+0]
     58          }
   \   000000B4   0xB007             ADD      SP,SP,#+28
   \   000000B6   0xBD00             POP      {PC}             ;; return
     59          
     60          

   \                                 In section .data, align 4
     61          uint32 count_init = 0x7fff;
   \                     count_init:
   \   00000000   0x00007FFF         DC32 32767
     62          

   \                                 In section .text, align 2, keep-with-next
     63          uint32 DMA_cntget0()
     64          {
     65            uint32 temp ;
     66            temp = count_init - DMA0->TCD[0].CITER_ELINKNO;
   \                     DMA_cntget0: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable3_10
   \   00000002   0x6809             LDR      R1,[R1, #+0]
   \   00000004   0x....             LDR.N    R2,??DataTable3_11  ;; 0x40009016
   \   00000006   0x8812             LDRH     R2,[R2, #+0]
   \   00000008   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000A   0x1A89             SUBS     R1,R1,R2
   \   0000000C   0x0008             MOVS     R0,R1
     67              DMA0->TCD[0].CITER_ELINKNO = 0x7fff;
   \   0000000E   0xF647 0x71FF      MOVW     R1,#+32767
   \   00000012   0x....             LDR.N    R2,??DataTable3_11  ;; 0x40009016
   \   00000014   0x8011             STRH     R1,[R2, #+0]
     68              LPLD_DMA_LoadDstAddr(DMA_CH0,&trick[1]);
   \   00000016   0x....             LDR.N    R1,??DataTable3_6
   \   00000018   0x....             LDR.N    R2,??DataTable3_7  ;; 0x40009010
   \   0000001A   0x6011             STR      R1,[R2, #+0]
     69              LPLD_DMA_EnableReq(DMA_CH0);  
   \   0000001C   0x....             LDR.N    R1,??DataTable3_8  ;; 0x4000800c
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0xF051 0x0101      ORRS     R1,R1,#0x1
   \   00000024   0x....             LDR.N    R2,??DataTable3_8  ;; 0x4000800c
   \   00000026   0x6011             STR      R1,[R2, #+0]
     70            return  temp;
   \   00000028   0x4770             BX       LR               ;; return
     71          }
     72          

   \                                 In section .text, align 2, keep-with-next
     73          uint32 DMA_cntget1()
     74          {
     75            uint32 temp ;
     76            temp = count_init - DMA0->TCD[1].CITER_ELINKNO;
   \                     DMA_cntget1: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable3_10
   \   00000002   0x6809             LDR      R1,[R1, #+0]
   \   00000004   0x....             LDR.N    R2,??DataTable3_12  ;; 0x40009036
   \   00000006   0x8812             LDRH     R2,[R2, #+0]
   \   00000008   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000A   0x1A89             SUBS     R1,R1,R2
   \   0000000C   0x0008             MOVS     R0,R1
     77              DMA0->TCD[1].CITER_ELINKNO = 0x7fff;
   \   0000000E   0xF647 0x71FF      MOVW     R1,#+32767
   \   00000012   0x....             LDR.N    R2,??DataTable3_12  ;; 0x40009036
   \   00000014   0x8011             STRH     R1,[R2, #+0]
     78              LPLD_DMA_LoadDstAddr(DMA_CH1,&trick[1]);
   \   00000016   0x....             LDR.N    R1,??DataTable3_6
   \   00000018   0x....             LDR.N    R2,??DataTable3_9  ;; 0x40009030
   \   0000001A   0x6011             STR      R1,[R2, #+0]
     79              LPLD_DMA_EnableReq(DMA_CH1);  
   \   0000001C   0x....             LDR.N    R1,??DataTable3_8  ;; 0x4000800c
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0xF051 0x0102      ORRS     R1,R1,#0x2
   \   00000024   0x....             LDR.N    R2,??DataTable3_8  ;; 0x4000800c
   \   00000026   0x6011             STR      R1,[R2, #+0]
     80            return  temp;
   \   00000028   0x4770             BX       LR               ;; return
     81          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     ICGPIO_init

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x00020003         DC32     0x20003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     ICDMA_init

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     trick

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     trick+0x1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x40009010         DC32     0x40009010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x4000800C         DC32     0x4000800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x40009030         DC32     0x40009030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     count_init

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x40009016         DC32     0x40009016

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x40009036         DC32     0x40009036

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   DMA_cntget0
       0   DMA_cntget1
      48   dma_init
        32   -> LPLD_DMA_Init
        48   -> __aeabi_memcpy4
      24   gpio_init
         8   -> LPLD_GPIO_Init
        24   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      42  DMA_cntget0
      42  DMA_cntget1
      44  ICDMA_init
      20  ICGPIO_init
       4  count_init
     184  dma_init
      90  gpio_init
       2  trick

 
  66 bytes in section .bss
   4 bytes in section .data
 410 bytes in section .text
 
 410 bytes of CODE memory
  70 bytes of DATA memory

Errors: none
Warnings: none
