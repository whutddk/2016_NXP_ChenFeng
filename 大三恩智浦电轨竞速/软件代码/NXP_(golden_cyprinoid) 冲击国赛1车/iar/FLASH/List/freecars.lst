###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        16/Aug/2016  11:11:08
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\app\ITAC\freecars.c
#    Command line =  
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\app\ITAC\freecars.c" -D LPLD_K60 -lCN
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\" -lB
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\" -o
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\Obj\" --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\BSP\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\ITAC\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\CTL\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\MAIN\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\SENSOR\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\CPU\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\common\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\HW\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\DEV\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\FatFs\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\FatFs\option\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\common\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\driver\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\descriptor\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\class\" -On -I D:\IAR\arm\CMSIS\Include\ -D
#        ARM_MATH_CM4
#    List file    =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\freecars.lst
#    Object file  =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\Obj\freecars.o
#
###############################################################################

E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid) 1.9\app\ITAC\freecars.c
      1          /*
      2          name：  FreeCars上位机示波器例程
      3          author：FreeCars军哥
      4          Date:   2014-10-22
      5          site:   Http://FreeCars.taobao.com
      6          QQ群：  384273254，149168724
      7          版权：  此代码为FreeCars上位机协议代码，允许任意使用，也允许用于商业用途，但请保留此段文字！
      8          tips:   强烈建议小伙伴们使用FreeCars出品的蓝牙模块套装，无线上位机从这里开始！
      9          */
     10          #include "include.h"
     11          
     12          #define IsSingleLine  0
     13          

   \                                 In section .bss, align 4
     14          uint8 uSendBuf[UartDataNum*2]={0};
   \                     uSendBuf:
   \   00000000                      DS8 36

   \                                 In section .data, align 1
     15          uint8 FreeCarsDataNum=UartDataNum*2;
   \                     FreeCarsDataNum:
   \   00000000   0x22               DC8 34
     16          

   \                                 In section .bss, align 8
     17          double UartData[9] = {0};
   \                     UartData:
   \   00000000                      DS8 72

   \                                 In section .bss, align 4
     18          SerialPortType SerialPortRx;
   \                     SerialPortRx:
   \   00000000                      DS8 108
     19          
     20          /*
     21          向某个通道缓冲区填充数据
     22          chanel：通道
     23          data  ：数据-32768~32767
     24          */

   \                                 In section .text, align 2, keep-with-next
     25          void push(uint8 chanel,uint16 data)
     26          {
     27              uSendBuf[chanel*2]=data/256;
   \                     `push`: (+1)
   \   00000000   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000002   0xF44F 0x7280      MOV      R2,#+256
   \   00000006   0xFB91 0xF2F2      SDIV     R2,R1,R2
   \   0000000A   0x.... 0x....      LDR.W    R3,??DataTable4
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0xF803 0x2010      STRB     R2,[R3, R0, LSL #+1]
     28              uSendBuf[chanel*2+1]=data%256;
   \   00000014   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000016   0xF44F 0x7280      MOV      R2,#+256
   \   0000001A   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \   0000001E   0xFB03 0x1312      MLS      R3,R3,R2,R1
   \   00000022   0x.... 0x....      LDR.W    R2,??DataTable4
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0xEB12 0x0240      ADDS     R2,R2,R0, LSL #+1
   \   0000002C   0x7053             STRB     R3,[R2, #+1]
     29          }
   \   0000002E   0x4770             BX       LR               ;; return
     30          
     31          

   \                                 In section .text, align 2, keep-with-next
     32          void sendDataToScope()
     33          {
   \                     sendDataToScope: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     34            uint8 i,sum=0; 
   \   00000002   0x2500             MOVS     R5,#+0
     35            
     36            LPLD_UART_PutChar(FreeCarsUARTPort,251);
   \   00000004   0xF07F 0x0104      MVNS     R1,#+4
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400eb000
   \   0000000C   0x.... 0x....      BL       LPLD_UART_PutChar
     37            LPLD_UART_PutChar(FreeCarsUARTPort,109);
   \   00000010   0x216D             MOVS     R1,#+109
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400eb000
   \   00000016   0x.... 0x....      BL       LPLD_UART_PutChar
     38            LPLD_UART_PutChar(FreeCarsUARTPort,37);
   \   0000001A   0x2125             MOVS     R1,#+37
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400eb000
   \   00000020   0x.... 0x....      BL       LPLD_UART_PutChar
     39            sum+=(251);     
   \   00000024   0x1F6D             SUBS     R5,R5,#+5
     40            sum+=(109);
   \   00000026   0x356D             ADDS     R5,R5,#+109
     41            sum+=(37);
   \   00000028   0x3525             ADDS     R5,R5,#+37
     42            for(i=0;i<FreeCarsDataNum;i++)
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x0004             MOVS     R4,R0
   \                     ??sendDataToScope_0: (+1)
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x4284             CMP      R4,R0
   \   00000038   0xD20F             BCS.N    ??sendDataToScope_1
     43            {
     44              LPLD_UART_PutChar(FreeCarsUARTPort,uSendBuf[i]);
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable4
   \   0000003E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000040   0x5621             LDRSB    R1,[R4, R0]
   \   00000042   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400eb000
   \   00000048   0x.... 0x....      BL       LPLD_UART_PutChar
     45              sum+=uSendBuf[i];      
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable4
   \   00000050   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000052   0x5C20             LDRB     R0,[R4, R0]
   \   00000054   0x1945             ADDS     R5,R0,R5
     46            }
   \   00000056   0x1C64             ADDS     R4,R4,#+1
   \   00000058   0xE7E9             B.N      ??sendDataToScope_0
     47           LPLD_UART_PutChar(FreeCarsUARTPort,sum);
   \                     ??sendDataToScope_1: (+1)
   \   0000005A   0x0029             MOVS     R1,R5
   \   0000005C   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400eb000
   \   00000062   0x.... 0x....      BL       LPLD_UART_PutChar
     48          }
   \   00000066   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     49          

   \                                 In section .text, align 2, keep-with-next
     50          void freecars_isr(void)//接收中断
     51          {
   \                     freecars_isr: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
     52            int i,b,d1;
     53            uint32 d;
     54            
     55            {
     56          #if USE_UART5
     57              SerialPortRx.Data = LPLD_UART_GetChar(UART5); 
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x400eb000
   \   00000006   0x.... 0x....      BL       LPLD_UART_GetChar
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   0000000E   0x7108             STRB     R0,[R1, #+4]
     58          #else
     59              SerialPortRx.Data = LPLD_UART_GetChar(UART3); 
     60          #endif
     61                 
     62              if( SerialPortRx.Stack < UartRxBufferLen )
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x2864             CMP      R0,#+100
   \   00000018   0xF280 0x80FB      BGE.W    ??freecars_isr_0
     63              {
     64                SerialPortRx.Buffer[SerialPortRx.Stack++] = SerialPortRx.Data;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   00000020   0x7900             LDRB     R0,[R0, #+4]
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00000026   0x.... 0x....      LDR.W    R2,??DataTable4_3
   \   0000002A   0x6812             LDR      R2,[R2, #+0]
   \   0000002C   0x1851             ADDS     R1,R2,R1
   \   0000002E   0x7188             STRB     R0,[R1, #+6]
   \   00000030   0x....             LDR.N    R0,??DataTable4_3
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x1C40             ADDS     R0,R0,#+1
   \   00000036   0x....             LDR.N    R1,??DataTable4_3
   \   00000038   0x6008             STR      R0,[R1, #+0]
     65                
     66                if(   SerialPortRx.Stack >= UartRxDataLen 
     67                   && SerialPortRx.Buffer[SerialPortRx.Stack - UartRxDataLen]  ==0xff //校验字头
     68                     && SerialPortRx.Buffer[SerialPortRx.Stack - UartRxDataLen+1]==0x55
     69                       && SerialPortRx.Buffer[SerialPortRx.Stack - UartRxDataLen+2]==0xaa
     70                         && SerialPortRx.Buffer[SerialPortRx.Stack - UartRxDataLen+3]==0x10 )
   \   0000003A   0x....             LDR.N    R0,??DataTable4_3
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x2829             CMP      R0,#+41
   \   00000040   0xF2C0 0x8093      BLT.W    ??freecars_isr_1
   \   00000044   0x....             LDR.N    R0,??DataTable4_3
   \   00000046   0x....             LDR.N    R1,??DataTable4_3
   \   00000048   0x6809             LDR      R1,[R1, #+0]
   \   0000004A   0x1808             ADDS     R0,R1,R0
   \   0000004C   0xF810 0x0C23      LDRB     R0,[R0, #-35]
   \   00000050   0x28FF             CMP      R0,#+255
   \   00000052   0xF040 0x808A      BNE.W    ??freecars_isr_1
   \   00000056   0x....             LDR.N    R0,??DataTable4_3
   \   00000058   0x....             LDR.N    R1,??DataTable4_3
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0x1808             ADDS     R0,R1,R0
   \   0000005E   0xF810 0x0C22      LDRB     R0,[R0, #-34]
   \   00000062   0x2855             CMP      R0,#+85
   \   00000064   0xF040 0x8081      BNE.W    ??freecars_isr_1
   \   00000068   0x....             LDR.N    R0,??DataTable4_3
   \   0000006A   0x....             LDR.N    R1,??DataTable4_3
   \   0000006C   0x6809             LDR      R1,[R1, #+0]
   \   0000006E   0x1808             ADDS     R0,R1,R0
   \   00000070   0xF810 0x0C21      LDRB     R0,[R0, #-33]
   \   00000074   0x28AA             CMP      R0,#+170
   \   00000076   0xD178             BNE.N    ??freecars_isr_1
   \   00000078   0x....             LDR.N    R0,??DataTable4_3
   \   0000007A   0x....             LDR.N    R1,??DataTable4_3
   \   0000007C   0x6809             LDR      R1,[R1, #+0]
   \   0000007E   0x1808             ADDS     R0,R1,R0
   \   00000080   0xF810 0x0C20      LDRB     R0,[R0, #-32]
   \   00000084   0x2810             CMP      R0,#+16
   \   00000086   0xD170             BNE.N    ??freecars_isr_1
     71                {  
     72                  SerialPortRx.Check = 0;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x....             LDR.N    R1,??DataTable4_3
   \   0000008C   0xF881 0x006B      STRB     R0,[R1, #+107]
     73                  b = SerialPortRx.Stack - UartRxDataLen; 
   \   00000090   0x....             LDR.N    R0,??DataTable4_3
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0x3829             SUBS     R0,R0,#+41
   \   00000096   0x0005             MOVS     R5,R0
     74                  for(i=b; i<SerialPortRx.Stack-1; i++) 
   \   00000098   0x002C             MOVS     R4,R5
   \                     ??freecars_isr_2: (+1)
   \   0000009A   0x....             LDR.N    R0,??DataTable4_3
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x1E40             SUBS     R0,R0,#+1
   \   000000A0   0x4284             CMP      R4,R0
   \   000000A2   0xDA0B             BGE.N    ??freecars_isr_3
     75                  {
     76                    SerialPortRx.Check += SerialPortRx.Buffer[i];
   \   000000A4   0x....             LDR.N    R0,??DataTable4_3
   \   000000A6   0xF890 0x006B      LDRB     R0,[R0, #+107]
   \   000000AA   0x....             LDR.N    R1,??DataTable4_3
   \   000000AC   0x1861             ADDS     R1,R4,R1
   \   000000AE   0x7989             LDRB     R1,[R1, #+6]
   \   000000B0   0x1808             ADDS     R0,R1,R0
   \   000000B2   0x....             LDR.N    R1,??DataTable4_3
   \   000000B4   0xF881 0x006B      STRB     R0,[R1, #+107]
     77                  }
   \   000000B8   0x1C64             ADDS     R4,R4,#+1
   \   000000BA   0xE7EE             B.N      ??freecars_isr_2
     78                  
     79                  if( SerialPortRx.Check == SerialPortRx.Buffer[SerialPortRx.Stack-1] )
   \                     ??freecars_isr_3: (+1)
   \   000000BC   0x....             LDR.N    R0,??DataTable4_3
   \   000000BE   0xF890 0x006B      LDRB     R0,[R0, #+107]
   \   000000C2   0x....             LDR.N    R1,??DataTable4_3
   \   000000C4   0x....             LDR.N    R2,??DataTable4_3
   \   000000C6   0x6812             LDR      R2,[R2, #+0]
   \   000000C8   0x1851             ADDS     R1,R2,R1
   \   000000CA   0x7949             LDRB     R1,[R1, #+5]
   \   000000CC   0x4288             CMP      R0,R1
   \   000000CE   0xD148             BNE.N    ??freecars_isr_4
     80                  {   //校验成功，进行数据解算
     81                    for(i = 0; i<9; i++)
   \   000000D0   0x2000             MOVS     R0,#+0
   \   000000D2   0x0004             MOVS     R4,R0
   \                     ??freecars_isr_5: (+1)
   \   000000D4   0x2C09             CMP      R4,#+9
   \   000000D6   0xDA42             BGE.N    ??freecars_isr_6
     82                    {
     83                      d = SerialPortRx.Buffer[b+i*4+4]*0x1000000L + SerialPortRx.Buffer[b+i*4+5]*0x10000L + SerialPortRx.Buffer[b+i*4+6]*0x100L + SerialPortRx.Buffer[b+i*4+7];
   \   000000D8   0x....             LDR.N    R0,??DataTable4_3
   \   000000DA   0xEB15 0x0184      ADDS     R1,R5,R4, LSL #+2
   \   000000DE   0x1808             ADDS     R0,R1,R0
   \   000000E0   0x7A80             LDRB     R0,[R0, #+10]
   \   000000E2   0xF05F 0x7180      MOVS     R1,#+16777216
   \   000000E6   0x....             LDR.N    R2,??DataTable4_3
   \   000000E8   0xEB15 0x0384      ADDS     R3,R5,R4, LSL #+2
   \   000000EC   0x189A             ADDS     R2,R3,R2
   \   000000EE   0x7AD2             LDRB     R2,[R2, #+11]
   \   000000F0   0xF45F 0x3380      MOVS     R3,#+65536
   \   000000F4   0x435A             MULS     R2,R3,R2
   \   000000F6   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000FA   0x....             LDR.N    R1,??DataTable4_3
   \   000000FC   0xEB15 0x0284      ADDS     R2,R5,R4, LSL #+2
   \   00000100   0x1851             ADDS     R1,R2,R1
   \   00000102   0x7B09             LDRB     R1,[R1, #+12]
   \   00000104   0xF44F 0x7280      MOV      R2,#+256
   \   00000108   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000010C   0x....             LDR.N    R1,??DataTable4_3
   \   0000010E   0xEB15 0x0284      ADDS     R2,R5,R4, LSL #+2
   \   00000112   0x1851             ADDS     R1,R2,R1
   \   00000114   0x7B49             LDRB     R1,[R1, #+13]
   \   00000116   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   0000011A   0x0007             MOVS     R7,R0
     84                      if(d>0x7FFFFFFF)
   \   0000011C   0xF1B7 0x4F00      CMP      R7,#-2147483648
   \   00000120   0xD304             BCC.N    ??freecars_isr_7
     85                      {
     86                        d1 = 0x7FFFFFFF - d;
   \   00000122   0xF07F 0x4000      MVNS     R0,#-2147483648
   \   00000126   0x1BC0             SUBS     R0,R0,R7
   \   00000128   0x0006             MOVS     R6,R0
   \   0000012A   0xE000             B.N      ??freecars_isr_8
     87                      }
     88                      else
     89                      {
     90                        d1 = d;
   \                     ??freecars_isr_7: (+1)
   \   0000012C   0x003E             MOVS     R6,R7
     91                      }
     92                      UartData[i]=d1;
   \                     ??freecars_isr_8: (+1)
   \   0000012E   0x0030             MOVS     R0,R6
   \   00000130   0x.... 0x....      BL       __aeabi_i2d
   \   00000134   0x....             LDR.N    R2,??DataTable4_4
   \   00000136   0xEB12 0x02C4      ADDS     R2,R2,R4, LSL #+3
   \   0000013A   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     93                      UartData[i]/=65536.0;
   \   0000013E   0x....             LDR.N    R0,??DataTable4_4
   \   00000140   0xEB10 0x02C4      ADDS     R2,R0,R4, LSL #+3
   \   00000144   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000148   0x2200             MOVS     R2,#+0
   \   0000014A   0x....             LDR.N    R3,??DataTable4_5  ;; 0x40f00000
   \   0000014C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000150   0x....             LDR.N    R2,??DataTable4_4
   \   00000152   0xEB12 0x02C4      ADDS     R2,R2,R4, LSL #+3
   \   00000156   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
     94                    }
   \   0000015A   0x1C64             ADDS     R4,R4,#+1
   \   0000015C   0xE7BA             B.N      ??freecars_isr_5
     95                    UartDebug();  //转去处理，把受到的数据付给变量
   \                     ??freecars_isr_6: (+1)
   \   0000015E   0x.... 0x....      BL       UartDebug
     96                  }
     97                  SerialPortRx.Stack = 0;
   \                     ??freecars_isr_4: (+1)
   \   00000162   0x2000             MOVS     R0,#+0
   \   00000164   0x....             LDR.N    R1,??DataTable4_3
   \   00000166   0x6008             STR      R0,[R1, #+0]
   \   00000168   0xE056             B.N      ??freecars_isr_9
     98                }
     99                else if(   SerialPortRx.Stack >= UartRxCmdLen //UartRxDataLen个数为一帧
    100                        && SerialPortRx.Buffer[SerialPortRx.Stack - UartRxCmdLen]  ==0xff
    101                          && SerialPortRx.Buffer[SerialPortRx.Stack - UartRxCmdLen+1]==0x55
    102                            && SerialPortRx.Buffer[SerialPortRx.Stack - UartRxCmdLen+2]==0xaa
    103                              && SerialPortRx.Buffer[SerialPortRx.Stack - UartRxCmdLen+3]==0x77 )//cmd
   \                     ??freecars_isr_1: (+1)
   \   0000016A   0x....             LDR.N    R0,??DataTable4_3
   \   0000016C   0x6800             LDR      R0,[R0, #+0]
   \   0000016E   0x2807             CMP      R0,#+7
   \   00000170   0xDB52             BLT.N    ??freecars_isr_9
   \   00000172   0x....             LDR.N    R0,??DataTable4_3
   \   00000174   0x....             LDR.N    R1,??DataTable4_3
   \   00000176   0x6809             LDR      R1,[R1, #+0]
   \   00000178   0x1808             ADDS     R0,R1,R0
   \   0000017A   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000017E   0x28FF             CMP      R0,#+255
   \   00000180   0xD14A             BNE.N    ??freecars_isr_9
   \   00000182   0x....             LDR.N    R0,??DataTable4_3
   \   00000184   0x....             LDR.N    R1,??DataTable4_3
   \   00000186   0x6809             LDR      R1,[R1, #+0]
   \   00000188   0x5C08             LDRB     R0,[R1, R0]
   \   0000018A   0x2855             CMP      R0,#+85
   \   0000018C   0xD144             BNE.N    ??freecars_isr_9
   \   0000018E   0x....             LDR.N    R0,??DataTable4_3
   \   00000190   0x....             LDR.N    R1,??DataTable4_3
   \   00000192   0x6809             LDR      R1,[R1, #+0]
   \   00000194   0x1808             ADDS     R0,R1,R0
   \   00000196   0x7840             LDRB     R0,[R0, #+1]
   \   00000198   0x28AA             CMP      R0,#+170
   \   0000019A   0xD13D             BNE.N    ??freecars_isr_9
   \   0000019C   0x....             LDR.N    R0,??DataTable4_3
   \   0000019E   0x....             LDR.N    R1,??DataTable4_3
   \   000001A0   0x6809             LDR      R1,[R1, #+0]
   \   000001A2   0x1808             ADDS     R0,R1,R0
   \   000001A4   0x7880             LDRB     R0,[R0, #+2]
   \   000001A6   0x2877             CMP      R0,#+119
   \   000001A8   0xD136             BNE.N    ??freecars_isr_9
    104                {
    105                  SerialPortRx.Check = 0;
   \   000001AA   0x2000             MOVS     R0,#+0
   \   000001AC   0x....             LDR.N    R1,??DataTable4_3
   \   000001AE   0xF881 0x006B      STRB     R0,[R1, #+107]
    106                  b = SerialPortRx.Stack - UartRxCmdLen; //起始位
   \   000001B2   0x....             LDR.N    R0,??DataTable4_3
   \   000001B4   0x6800             LDR      R0,[R0, #+0]
   \   000001B6   0x1FC0             SUBS     R0,R0,#+7
   \   000001B8   0x0005             MOVS     R5,R0
    107                  for(i=b; i<SerialPortRx.Stack-1; i++)  //除校验位外的位进行校验
   \   000001BA   0x002C             MOVS     R4,R5
   \                     ??freecars_isr_10: (+1)
   \   000001BC   0x....             LDR.N    R0,??DataTable4_3
   \   000001BE   0x6800             LDR      R0,[R0, #+0]
   \   000001C0   0x1E40             SUBS     R0,R0,#+1
   \   000001C2   0x4284             CMP      R4,R0
   \   000001C4   0xDA0B             BGE.N    ??freecars_isr_11
    108                  {
    109                    SerialPortRx.Check += SerialPortRx.Buffer[i];//校验
   \   000001C6   0x....             LDR.N    R0,??DataTable4_3
   \   000001C8   0xF890 0x006B      LDRB     R0,[R0, #+107]
   \   000001CC   0x....             LDR.N    R1,??DataTable4_3
   \   000001CE   0x1861             ADDS     R1,R4,R1
   \   000001D0   0x7989             LDRB     R1,[R1, #+6]
   \   000001D2   0x1808             ADDS     R0,R1,R0
   \   000001D4   0x....             LDR.N    R1,??DataTable4_3
   \   000001D6   0xF881 0x006B      STRB     R0,[R1, #+107]
    110                  }
   \   000001DA   0x1C64             ADDS     R4,R4,#+1
   \   000001DC   0xE7EE             B.N      ??freecars_isr_10
    111                  if( SerialPortRx.Check == SerialPortRx.Buffer[SerialPortRx.Stack-1] )
   \                     ??freecars_isr_11: (+1)
   \   000001DE   0x....             LDR.N    R0,??DataTable4_3
   \   000001E0   0xF890 0x006B      LDRB     R0,[R0, #+107]
   \   000001E4   0x....             LDR.N    R1,??DataTable4_3
   \   000001E6   0x....             LDR.N    R2,??DataTable4_3
   \   000001E8   0x6812             LDR      R2,[R2, #+0]
   \   000001EA   0x1851             ADDS     R1,R2,R1
   \   000001EC   0x7949             LDRB     R1,[R1, #+5]
   \   000001EE   0x4288             CMP      R0,R1
   \   000001F0   0xD10B             BNE.N    ??freecars_isr_12
    112                  {   //校验成功
    113                    UartCmd(UartCmdNum,UartCmdData);//处理接收到的命令，付给MCU命令变量
   \   000001F2   0x....             LDR.N    R0,??DataTable4_3
   \   000001F4   0x....             LDR.N    R1,??DataTable4_3
   \   000001F6   0x6809             LDR      R1,[R1, #+0]
   \   000001F8   0x1808             ADDS     R0,R1,R0
   \   000001FA   0x7901             LDRB     R1,[R0, #+4]
   \   000001FC   0x....             LDR.N    R0,??DataTable4_3
   \   000001FE   0x....             LDR.N    R2,??DataTable4_3
   \   00000200   0x6812             LDR      R2,[R2, #+0]
   \   00000202   0x1810             ADDS     R0,R2,R0
   \   00000204   0x78C0             LDRB     R0,[R0, #+3]
   \   00000206   0x.... 0x....      BL       UartCmd
    114                  }
    115                  SerialPortRx.Stack = 0;
   \                     ??freecars_isr_12: (+1)
   \   0000020A   0x2000             MOVS     R0,#+0
   \   0000020C   0x....             LDR.N    R1,??DataTable4_3
   \   0000020E   0x6008             STR      R0,[R1, #+0]
   \   00000210   0xE002             B.N      ??freecars_isr_9
    116                }
    117              }
    118              else
    119              {
    120                SerialPortRx.Stack = 0;
   \                     ??freecars_isr_0: (+1)
   \   00000212   0x2000             MOVS     R0,#+0
   \   00000214   0x....             LDR.N    R1,??DataTable4_3
   \   00000216   0x6008             STR      R0,[R1, #+0]
    121              } 
    122            }
    123          }
   \                     ??freecars_isr_9: (+1)
   \   00000218   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    124          
    125          /*接收数据处理*/

   \                                 In section .bss, align 1
    126          uint8 flag_receive = 0;
   \                     flag_receive:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
    127          void UartDebug()
    128          {
   \                     UartDebug: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    129            ctl.motto.v = (int16)UartData[0];
   \   00000002   0x....             LDR.N    R2,??DataTable4_4
   \   00000004   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000008   0x.... 0x....      BL       __aeabi_d2iz
   \   0000000C   0x....             LDR.N    R1,??DataTable4_6
   \   0000000E   0xF8A1 0x0068      STRH     R0,[R1, #+104]
    130          //  
    131          //    ctl.motto.Kp = UartData[7];
    132          //    ctl.motto.Ki = UartData[8];
    133          //    
    134            ctl.S3010.Kp_S = UartData[1];
   \   00000012   0x....             LDR.N    R2,??DataTable4_4
   \   00000014   0xE9D2 0x0102      LDRD     R0,R1,[R2, #+8]
   \   00000018   0x.... 0x....      BL       __aeabi_d2f
   \   0000001C   0x....             LDR.N    R1,??DataTable4_6
   \   0000001E   0x6148             STR      R0,[R1, #+20]
    135            ctl.S3010.Kd_S = UartData[2];
   \   00000020   0x....             LDR.N    R2,??DataTable4_4
   \   00000022   0xE9D2 0x0104      LDRD     R0,R1,[R2, #+16]
   \   00000026   0x.... 0x....      BL       __aeabi_d2f
   \   0000002A   0x....             LDR.N    R1,??DataTable4_6
   \   0000002C   0x6248             STR      R0,[R1, #+36]
    136            ctl.S3010.Kp_M1 = UartData[3];
   \   0000002E   0x....             LDR.N    R2,??DataTable4_4
   \   00000030   0xE9D2 0x0106      LDRD     R0,R1,[R2, #+24]
   \   00000034   0x.... 0x....      BL       __aeabi_d2f
   \   00000038   0x....             LDR.N    R1,??DataTable4_6
   \   0000003A   0x6188             STR      R0,[R1, #+24]
    137            ctl.S3010.Kd_M1 = UartData[4];
   \   0000003C   0x....             LDR.N    R2,??DataTable4_4
   \   0000003E   0xE9D2 0x0108      LDRD     R0,R1,[R2, #+32]
   \   00000042   0x.... 0x....      BL       __aeabi_d2f
   \   00000046   0x....             LDR.N    R1,??DataTable4_6
   \   00000048   0x6288             STR      R0,[R1, #+40]
    138            ctl.S3010.Kp_M2 = UartData[5];
   \   0000004A   0x....             LDR.N    R2,??DataTable4_4
   \   0000004C   0xE9D2 0x010A      LDRD     R0,R1,[R2, #+40]
   \   00000050   0x.... 0x....      BL       __aeabi_d2f
   \   00000054   0x....             LDR.N    R1,??DataTable4_6
   \   00000056   0x61C8             STR      R0,[R1, #+28]
    139            ctl.S3010.Kd_M2 = UartData[6];
   \   00000058   0x....             LDR.N    R2,??DataTable4_4
   \   0000005A   0xE9D2 0x010C      LDRD     R0,R1,[R2, #+48]
   \   0000005E   0x.... 0x....      BL       __aeabi_d2f
   \   00000062   0x....             LDR.N    R1,??DataTable4_6
   \   00000064   0x62C8             STR      R0,[R1, #+44]
    140            ctl.S3010.Kp_B = UartData[7];
   \   00000066   0x....             LDR.N    R2,??DataTable4_4
   \   00000068   0xE9D2 0x010E      LDRD     R0,R1,[R2, #+56]
   \   0000006C   0x.... 0x....      BL       __aeabi_d2f
   \   00000070   0x....             LDR.N    R1,??DataTable4_6
   \   00000072   0x6208             STR      R0,[R1, #+32]
    141            ctl.S3010.Kd_B = UartData[8];
   \   00000074   0x....             LDR.N    R2,??DataTable4_4
   \   00000076   0xE9D2 0x0110      LDRD     R0,R1,[R2, #+64]
   \   0000007A   0x.... 0x....      BL       __aeabi_d2f
   \   0000007E   0x....             LDR.N    R1,??DataTable4_6
   \   00000080   0x6308             STR      R0,[R1, #+48]
    142            
    143          //       ctl.S3010.out = (uint32)UartData[8];
    144          //  ctl.motto.out = UartData[7];
    145          
    146          //  ctl.motto.Kp_S = UartData[7];
    147          //  ctl.motto.Kd_S = UartData[8];
    148            
    149            bz_set(datarec);
   \   00000082   0x2001             MOVS     R0,#+1
   \   00000084   0x.... 0x....      BL       bz_set
    150          }
   \   00000088   0xBD01             POP      {R0,PC}          ;; return
    151          

   \                                 In section .text, align 2, keep-with-next
    152          void UartCmd(uint8 cmdnum,uint8 cmddata)///
    153          {
   \                     UartCmd: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    154            switch(cmddata)
   \   00000006   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000008   0x0028             MOVS     R0,R5
   \   0000000A   0x2806             CMP      R0,#+6
   \   0000000C   0xD016             BEQ.N    ??UartCmd_0
   \   0000000E   0x2807             CMP      R0,#+7
   \   00000010   0xD015             BEQ.N    ??UartCmd_1
   \   00000012   0x2808             CMP      R0,#+8
   \   00000014   0xD014             BEQ.N    ??UartCmd_2
   \   00000016   0x2809             CMP      R0,#+9
   \   00000018   0xD013             BEQ.N    ??UartCmd_3
   \   0000001A   0x280A             CMP      R0,#+10
   \   0000001C   0xD012             BEQ.N    ??UartCmd_4
   \   0000001E   0x280B             CMP      R0,#+11
   \   00000020   0xD011             BEQ.N    ??UartCmd_5
   \   00000022   0x280C             CMP      R0,#+12
   \   00000024   0xD010             BEQ.N    ??UartCmd_6
   \   00000026   0x2864             CMP      R0,#+100
   \   00000028   0xD016             BEQ.N    ??UartCmd_7
   \   0000002A   0x2865             CMP      R0,#+101
   \   0000002C   0xD015             BEQ.N    ??UartCmd_8
   \   0000002E   0x2866             CMP      R0,#+102
   \   00000030   0xD017             BEQ.N    ??UartCmd_9
   \   00000032   0x2867             CMP      R0,#+103
   \   00000034   0xD018             BEQ.N    ??UartCmd_10
   \   00000036   0x2868             CMP      R0,#+104
   \   00000038   0xD017             BEQ.N    ??UartCmd_11
   \   0000003A   0xE019             B.N      ??UartCmd_12
    155            {
    156              case(6):break;//F6
   \                     ??UartCmd_0: (+1)
   \   0000003C   0xE018             B.N      ??UartCmd_12
    157              case(7):break;//F7
   \                     ??UartCmd_1: (+1)
   \   0000003E   0xE017             B.N      ??UartCmd_12
    158              case(8):break;//F8
   \                     ??UartCmd_2: (+1)
   \   00000040   0xE016             B.N      ??UartCmd_12
    159              case(9):break;//F9
   \                     ??UartCmd_3: (+1)
   \   00000042   0xE015             B.N      ??UartCmd_12
    160              case(10):break;//F10
   \                     ??UartCmd_4: (+1)
   \   00000044   0xE014             B.N      ??UartCmd_12
    161              case(11):break;//F11
   \                     ??UartCmd_5: (+1)
   \   00000046   0xE013             B.N      ??UartCmd_12
    162              case(12):   
    163                LDC1614_init();
   \                     ??UartCmd_6: (+1)
   \   00000048   0x.... 0x....      BL       LDC1614_init
    164              LDC1614_start_meas();
   \   0000004C   0x.... 0x....      BL       LDC1614_start_meas
    165                LPLD_LPTMR_DelayMs(10);
   \   00000050   0x200A             MOVS     R0,#+10
   \   00000052   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
    166          
    167              break;//F12
   \   00000056   0xE00B             B.N      ??UartCmd_12
    168              
    169              case(100):break;//PAUSE
   \                     ??UartCmd_7: (+1)
   \   00000058   0xE00A             B.N      ??UartCmd_12
    170              case(101):flag_stop = 0;break;//HOME
   \                     ??UartCmd_8: (+1)
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x....             LDR.N    R1,??DataTable4_7
   \   0000005E   0x7008             STRB     R0,[R1, #+0]
   \   00000060   0xE006             B.N      ??UartCmd_12
    171              case(102):timer_debug();break;//PG UP
   \                     ??UartCmd_9: (+1)
   \   00000062   0x.... 0x....      BL       timer_debug
   \   00000066   0xE003             B.N      ??UartCmd_12
    172              case(103):break;//PF DN
   \                     ??UartCmd_10: (+1)
   \   00000068   0xE002             B.N      ??UartCmd_12
    173              case(104):flag_stop = 1;break;//END
   \                     ??UartCmd_11: (+1)
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0x....             LDR.N    R1,??DataTable4_7
   \   0000006E   0x7008             STRB     R0,[R1, #+0]
    174            }
    175            bz_set(datarec);
   \                     ??UartCmd_12: (+1)
   \   00000070   0x2001             MOVS     R0,#+1
   \   00000072   0x.... 0x....      BL       bz_set
    176          }
   \   00000076   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     uSendBuf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x400EB000         DC32     0x400eb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     FreeCarsDataNum

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     SerialPortRx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     UartData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x40F00000         DC32     0x40f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     ctl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     flag_stop
    177          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   UartCmd
        16   -> LDC1614_init
        16   -> LDC1614_start_meas
        16   -> LPLD_LPTMR_DelayMs
        16   -> bz_set
        16   -> timer_debug
       8   UartDebug
         8   -> __aeabi_d2f
         8   -> __aeabi_d2iz
         8   -> bz_set
      24   freecars_isr
        24   -> LPLD_UART_GetChar
        24   -> UartCmd
        24   -> UartDebug
        24   -> __aeabi_ddiv
        24   -> __aeabi_i2d
       0   push
      16   sendDataToScope
        16   -> LPLD_UART_PutChar


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       1  FreeCarsDataNum
     108  SerialPortRx
     120  UartCmd
      72  UartData
     138  UartDebug
       1  flag_receive
     538  freecars_isr
      48  push
     104  sendDataToScope
      36  uSendBuf

 
 217 bytes in section .bss
   1 byte  in section .data
 980 bytes in section .text
 
 980 bytes of CODE memory
 218 bytes of DATA memory

Errors: none
Warnings: 1
