###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        16/Aug/2016  11:11:20
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\lib\CPU\system_MK60DZ10.c
#    Command line =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\lib\CPU\system_MK60DZ10.c -D
#        LPLD_K60 -lCN
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\" -lB
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\" -o
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\Obj\" --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\BSP\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\ITAC\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\CTL\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\MAIN\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\SENSOR\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\CPU\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\common\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\HW\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\DEV\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\FatFs\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\FatFs\option\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\common\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\driver\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\descriptor\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\class\" -On -I D:\IAR\arm\CMSIS\Include\ -D
#        ARM_MATH_CM4
#    List file    =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\system_MK60DZ10.lst
#    Object file  =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\Obj\system_MK60DZ10.o
#
###############################################################################

E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\lib\CPU\system_MK60DZ10.c
      1          /**
      2           * @file system_MK60DZ10.c
      3           * @version 1.2.1[By LPLD]
      4           * @date 2013-06-18
      5           * @brief MK60DZ10系列单片机系统配置文件
      6           *
      7           * 更改建议:禁止修改
      8           *
      9           * 该代码提供系统配置函数以及一个储存系统主频的全局变量。
     10           * 配置函数主要负责建立系统各模块的时钟。
     11           * 代码还实现常见的系统中断函数。
     12           *
     13           * 版权所有:北京拉普兰德电子技术有限公司
     14           * http://www.lpld.cn
     15           * mail:support@lpld.cn
     16           *
     17           * @par
     18           * 本代码由拉普兰德[LPLD]开发并维护，并向所有使用者开放源代码。
     19           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     20           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     21           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     22           * 拉普兰德不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     23           * 拉普兰德无义务解释、说明本代码的具体原理、功能、实现方法。
     24           * 除非拉普兰德[LPLD]授权，开发者不得将本代码用于商业产品。
     25           */
     26          
     27          #include <stdint.h>
     28          #include "common.h"
     29          
     30          #define DISABLE_WDOG    1
     31          
     32          /*----------------------------------------------------------------------------
     33            定义时钟相关值
     34           *----------------------------------------------------------------------------*/
     35          #define CPU_XTAL_CLK_HZ                 50000000u       //外部有源晶振频率，单位Hz
     36          #define CPU_XTAL32k_CLK_HZ              32768u          //外部32k时钟晶振频率，单位Hz    
     37          #define CPU_INT_SLOW_CLK_HZ             32768u          //慢速内部振荡器的值，单位Hz
     38          #define CPU_INT_FAST_CLK_HZ             4000000u        //快速内部振荡器的值，单位Hz
     39          #define DEFAULT_SYSTEM_CLOCK            100000000u      //默认系统主频，单位Hz
     40          
     41          /**
     42           * @brief 系统主频（单位Hz）
     43           */

   \                                 In section .data, align 4
     44          uint32_t SystemCoreClock = DEFAULT_SYSTEM_CLOCK;
   \                     SystemCoreClock:
   \   00000000   0x05F5E100         DC32 100000000
     45          
     46          /**
     47           * 初始化系统
     48           *
     49           * @param  none
     50           * @return none
     51           *
     52           * @brief  初始化MCU硬件系统，包括开放IO时钟、初始化主频、初始化调试串口，
     53           *         打印调试信息。SystemInit由MCU启动文件调用。
     54           *         
     55           */

   \                                 In section .text, align 2, keep-with-next
     56          void SystemInit (void) {
   \                     SystemInit: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     57            UART_InitTypeDef term_port_structure;
     58            //使能全部IO时钟
     59            SIM->SCGC5 |= (SIM_SCGC5_PORTA_MASK
     60                        | SIM_SCGC5_PORTB_MASK
     61                        | SIM_SCGC5_PORTC_MASK
     62                        | SIM_SCGC5_PORTD_MASK
     63                        | SIM_SCGC5_PORTE_MASK );
   \   00000004   0x....             LDR.N    R0,??DataTable3_1  ;; 0x40048038
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000C   0x....             LDR.N    R1,??DataTable3_1  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     64          #if (DISABLE_WDOG)
     65            //禁用看门狗模块
     66            /* WDOG_UNLOCK: WDOGUNLOCK=0xC520 */
     67            WDOG->UNLOCK = (uint16_t)0xC520u;     /* Key 1 */
   \   00000010   0xF24C 0x5020      MOVW     R0,#+50464
   \   00000014   0x....             LDR.N    R1,??DataTable3_2  ;; 0x4005200e
   \   00000016   0x8008             STRH     R0,[R1, #+0]
     68            /* WDOG_UNLOCK : WDOGUNLOCK=0xD928 */
     69            WDOG->UNLOCK  = (uint16_t)0xD928u;    /* Key 2 */
   \   00000018   0xF64D 0x1028      MOVW     R0,#+55592
   \   0000001C   0x....             LDR.N    R1,??DataTable3_2  ;; 0x4005200e
   \   0000001E   0x8008             STRH     R0,[R1, #+0]
     70            /* WDOG_STCTRLH: ??=0,DISTESTWDOG=0,BYTESEL=0,TESTSEL=0,TESTWDOG=0,??=0,STNDBYEN=1,WAITEN=1,STOPEN=1,DBGEN=0,ALLOWUPDATE=1,WINEN=0,IRQRSTEN=0,CLKSRC=1,WDOGEN=0 */
     71            WDOG->STCTRLH = (uint16_t)0x01D2u;
   \   00000020   0xF44F 0x70E9      MOV      R0,#+466
   \   00000024   0x....             LDR.N    R1,??DataTable3_3  ;; 0x40052000
   \   00000026   0x8008             STRH     R0,[R1, #+0]
     72          #endif /* (DISABLE_WDOG) */
     73            
     74            //将中断向量表、需在RAM中运行的函数等数据拷贝到RAM中
     75            common_relocate();
   \   00000028   0x.... 0x....      BL       common_relocate
     76            
     77            //初始化各部分时钟：系统内核主频、总线时钟、FlexBus时钟、Flash时钟
     78            LPLD_PLL_Setup(CORE_CLK_MHZ);
   \   0000002C   0x2064             MOVS     R0,#+100
   \   0000002E   0x.... 0x....      BL       LPLD_PLL_Setup
     79            
     80            //更新内核主频
     81            SystemCoreClockUpdate();
   \   00000032   0x.... 0x....      BL       SystemCoreClockUpdate
     82            
     83            //获取各部分时钟
     84            g_core_clock = SystemCoreClock;
   \   00000036   0x....             LDR.N    R0,??DataTable3_4
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x....             LDR.N    R1,??DataTable3_5
   \   0000003C   0x6008             STR      R0,[R1, #+0]
     85            g_bus_clock = g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV2_MASK) >> SIM_CLKDIV1_OUTDIV2_SHIFT)+ 1u);
   \   0000003E   0x....             LDR.N    R0,??DataTable3_5
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x....             LDR.N    R1,??DataTable3_6  ;; 0x40048044
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0xF3C1 0x6103      UBFX     R1,R1,#+24,#+4
   \   0000004A   0x1C49             ADDS     R1,R1,#+1
   \   0000004C   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000050   0x....             LDR.N    R1,??DataTable3_7
   \   00000052   0x6008             STR      R0,[R1, #+0]
     86            g_flexbus_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV3_MASK) >> SIM_CLKDIV1_OUTDIV3_SHIFT)+ 1u);
   \   00000054   0x....             LDR.N    R0,??DataTable3_5
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x....             LDR.N    R1,??DataTable3_6  ;; 0x40048044
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0xF3C1 0x5103      UBFX     R1,R1,#+20,#+4
   \   00000060   0x1C49             ADDS     R1,R1,#+1
   \   00000062   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000066   0x....             LDR.N    R1,??DataTable3_8
   \   00000068   0x6008             STR      R0,[R1, #+0]
     87            g_flash_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV4_MASK) >> SIM_CLKDIV1_OUTDIV4_SHIFT)+ 1u);
   \   0000006A   0x....             LDR.N    R0,??DataTable3_5
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x....             LDR.N    R1,??DataTable3_6  ;; 0x40048044
   \   00000070   0x6809             LDR      R1,[R1, #+0]
   \   00000072   0xF3C1 0x4103      UBFX     R1,R1,#+16,#+4
   \   00000076   0x1C49             ADDS     R1,R1,#+1
   \   00000078   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000007C   0x....             LDR.N    R1,??DataTable3_9
   \   0000007E   0x6008             STR      R0,[R1, #+0]
     88            
     89            //初始化用于打印调试信息的串口模块
     90            //TERM_PORT为UART通道，在k60_card.h中定义
     91            //TERMINAL_BAUD为UART波特率，在k60_card.h中定义
     92            term_port_structure.UART_Uartx = TERM_PORT;
   \   00000080   0x....             LDR.N    R0,??DataTable3_10  ;; 0x400eb000
   \   00000082   0x9001             STR      R0,[SP, #+4]
     93            term_port_structure.UART_BaudRate = TERMINAL_BAUD;
   \   00000084   0xF45F 0x30E1      MOVS     R0,#+115200
   \   00000088   0x9002             STR      R0,[SP, #+8]
     94            LPLD_UART_Init(term_port_structure);
   \   0000008A   0xA901             ADD      R1,SP,#+4
   \   0000008C   0xB084             SUB      SP,SP,#+16
   \   0000008E   0x4668             MOV      R0,SP
   \   00000090   0x2214             MOVS     R2,#+20
   \   00000092   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000096   0xBC0F             POP      {R0-R3}
   \   00000098   0x.... 0x....      BL       LPLD_UART_Init
     95            
     96            //打印系统调试信息
     97          #ifdef DEBUG_PRINT     
     98            printf("\r\n");   
   \   0000009C   0x....             ADR.N    R0,??DataTable3  ;; 0x0D, 0x0A, 0x00, 0x00
   \   0000009E   0x.... 0x....      BL       printf
     99            printf("*********** 基于拉普兰德K60底层库 http://www.lpld.cn ***********\r\n");
   \   000000A2   0x....             LDR.N    R0,??DataTable3_11
   \   000000A4   0x.... 0x....      BL       printf
    100            printf("OSKinetis固件库版本:%s\tmail:support@lpld.cn\r\n", OSKinetis_Version);
   \   000000A8   0x....             LDR.N    R1,??DataTable3_12
   \   000000AA   0x....             LDR.N    R0,??DataTable3_13
   \   000000AC   0x.... 0x....      BL       printf
    101            printf("系统内核时钟:%dMHz\t总线时钟:%dMHz\r\n", g_core_clock/1000000u, g_bus_clock/1000000u);
   \   000000B0   0x....             LDR.N    R0,??DataTable3_7
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \   000000B6   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000000BA   0x....             LDR.N    R0,??DataTable3_5
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \   000000C0   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000000C4   0x....             LDR.N    R0,??DataTable3_15
   \   000000C6   0x.... 0x....      BL       printf
    102            printf("FlexBus时钟:%dMHz\tFlash时钟:%dMHz\r\n", g_flexbus_clock/1000000u, g_flash_clock/1000000u);
   \   000000CA   0x....             LDR.N    R0,??DataTable3_9
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \   000000D0   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000000D4   0x....             LDR.N    R0,??DataTable3_8
   \   000000D6   0x6800             LDR      R0,[R0, #+0]
   \   000000D8   0x....             LDR.N    R1,??DataTable3_14  ;; 0xf4240
   \   000000DA   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000000DE   0x....             LDR.N    R0,??DataTable3_16
   \   000000E0   0x.... 0x....      BL       printf
    103            printf("系统启动完毕，若要禁用调试输出请定义PRINT_ON_OFF为1(k60_card.h)\r\n");
   \   000000E4   0x....             LDR.N    R0,??DataTable3_17
   \   000000E6   0x.... 0x....      BL       printf
    104            printf("********************************************************************\r\n");
   \   000000EA   0x....             LDR.N    R0,??DataTable3_18
   \   000000EC   0x.... 0x....      BL       printf
    105          #endif
    106            
    107          }
   \   000000F0   0xB007             ADD      SP,SP,#+28
   \   000000F2   0xBD00             POP      {PC}             ;; return
    108          
    109          /**
    110           * 更新SystemCoreClock
    111           *
    112           * @param  none
    113           * @return none
    114           *
    115           * @brief  更新全局变量SystemCoreClock的值，以便获取最新的系统内核频率。
    116           *         
    117           */

   \                                 In section .text, align 2, keep-with-next
    118          void SystemCoreClockUpdate (void) {
    119            uint32_t temp;
    120            temp =  CPU_XTAL_CLK_HZ *((uint32_t)(MCG->C6 & MCG_C6_VDIV_MASK) + 24u );
   \                     SystemCoreClockUpdate: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable3_19  ;; 0x40064005
   \   00000002   0x7809             LDRB     R1,[R1, #+0]
   \   00000004   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000006   0xF011 0x011F      ANDS     R1,R1,#0x1F
   \   0000000A   0x3118             ADDS     R1,R1,#+24
   \   0000000C   0x....             LDR.N    R2,??DataTable3_20  ;; 0x2faf080
   \   0000000E   0x4351             MULS     R1,R2,R1
   \   00000010   0x0008             MOVS     R0,R1
    121            temp = (uint32_t)(temp/((uint32_t)(MCG->C5 & MCG_C5_PRDIV_MASK) +1u ));
   \   00000012   0x....             LDR.N    R1,??DataTable3_21  ;; 0x40064004
   \   00000014   0x7809             LDRB     R1,[R1, #+0]
   \   00000016   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000018   0xF011 0x011F      ANDS     R1,R1,#0x1F
   \   0000001C   0x1C49             ADDS     R1,R1,#+1
   \   0000001E   0xFBB0 0xF0F1      UDIV     R0,R0,R1
    122            SystemCoreClock = temp;
   \   00000022   0x....             LDR.N    R1,??DataTable3_4
   \   00000024   0x6008             STR      R0,[R1, #+0]
    123          }
   \   00000026   0x4770             BX       LR               ;; return
    124          
    125          /**
    126           * 硬件错误中断函数
    127           *
    128           * @param  none
    129           * @return none
    130           *
    131           * @brief  触发此中断的原因一般为：模块使用未初始化、错误的寻址空间等。
    132           *         
    133           */

   \                                 In section .text, align 2, keep-with-next
    134          void HardFault_Handler(void)
    135          {
   \                     HardFault_Handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    136          #ifdef DEBUG_PRINT 
    137             printf("\r\n****内核发生硬件错误*****\r\n");
   \   00000002   0x....             LDR.N    R0,??DataTable3_22
   \   00000004   0x.... 0x....      BL       printf
    138          #endif
    139             return;
   \   00000008   0xBD01             POP      {R0,PC}          ;; return
    140          }
    141          
    142          /**
    143           * 默认中断函数
    144           *
    145           * @param  none
    146           * @return none
    147           *
    148           * @brief  未定义中断处理函数的中断源会进入此函数，并打印中断向量号。
    149           *         
    150           */

   \                                 In section .text, align 2, keep-with-next
    151          void DefaultISR(void)
    152          {
   \                     DefaultISR: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    153             #define VECTORNUM                     (*(volatile uint8_t*)(0xE000ED04)) 
    154          #ifdef DEBUG_PRINT 
    155             printf("\r\n****进入未定义中断,Interrupt Number %d*****\r\n",VECTORNUM-16);
   \   00000002   0x....             LDR.N    R0,??DataTable3_23  ;; 0xe000ed04
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0xF1B0 0x0110      SUBS     R1,R0,#+16
   \   0000000C   0x....             LDR.N    R0,??DataTable3_24
   \   0000000E   0x.... 0x....      BL       printf
    156          #endif
    157             return;
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    158          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x0D 0x0A          DC8      0x0D, 0x0A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x4005200E         DC32     0x4005200e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x40052000         DC32     0x40052000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     g_core_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x40048044         DC32     0x40048044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     g_bus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     g_flexbus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     g_flash_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x400EB000         DC32     0x400eb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x40064005         DC32     0x40064005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x02FAF080         DC32     0x2faf080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x40064004         DC32     0x40064004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0xE000ED04         DC32     0xe000ed04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .rodata, align 4
   \   00000000   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000008   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 20H, 0BBH, 0F9H, 0D3H, 0DAH
   \              0x2A 0x20    
   \              0xBB 0xF9    
   \              0xD3 0xDA    
   \   00000010   0xC0 0xAD          DC8 0C0H, 0ADH, 0C6H, 0D5H, 0C0H, 0BCH, 0B5H, 0C2H
   \              0xC6 0xD5    
   \              0xC0 0xBC    
   \              0xB5 0xC2    
   \   00000018   0x4B 0x36          DC8 4BH, 36H, 30H, 0B5H, 0D7H, 0B2H, 0E3H, 0BFH
   \              0x30 0xB5    
   \              0xD7 0xB2    
   \              0xE3 0xBF    
   \   00000020   0xE2 0x20          DC8 0E2H, 20H, 68H, 74H, 74H, 70H, 3AH, 2FH
   \              0x68 0x74    
   \              0x74 0x70    
   \              0x3A 0x2F    
   \   00000028   0x2F 0x77          DC8 2FH, 77H, 77H, 77H, 2EH, 6CH, 70H, 6CH
   \              0x77 0x77    
   \              0x2E 0x6C    
   \              0x70 0x6C    
   \   00000030   0x64 0x2E          DC8 64H, 2EH, 63H, 6EH, 20H, 2AH, 2AH, 2AH
   \              0x63 0x6E    
   \              0x20 0x2A    
   \              0x2A 0x2A    
   \   00000038   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000040   0x0D 0x0A          DC8 0DH, 0AH, 0
   \              0x00         
   \   00000043   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x4F 0x53          DC8 "OSKinetis\271\314\274\376\277\342\260\346\261\276:%s\tmail:support@lpld.cn\015\012"
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0xB9    
   \              0xCC 0xBC    
   \              0xFE 0xBF    
   \              0xE2 0xB0    
   \              0xE6 0xB1    
   \              0xBE 0x3A    
   \              0x25 0x73    
   \              0x09 0x6D    
   \              0x61 0x69    
   \              0x6C 0x3A    
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x40    
   \              0x6C 0x70    
   \              0x6C 0x64    
   \              0x2E 0x63    
   \              0x6E 0x0D    
   \              0x0A 0x00    
   \   0000002E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x33 0x2E          DC8 "3.03"
   \              0x30 0x33    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0xCF 0xB5          DC8 "\317\265\315\263\304\332\272\313\312\261\326\323:%dMHz\t\327\334\317\337\312\261\326\323:%dMHz\015\012"
   \              0xCD 0xB3    
   \              0xC4 0xDA    
   \              0xBA 0xCB    
   \              0xCA 0xB1    
   \              0xD6 0xD3    
   \              0x3A 0x25    
   \              0x64 0x4D    
   \              0x48 0x7A    
   \              0x09 0xD7    
   \              0xDC 0xCF    
   \              0xDF 0xCA    
   \              0xB1 0xD6    
   \              0xD3 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x46 0x6C          DC8 "FlexBus\312\261\326\323:%dMHz\tFlash\312\261\326\323:%dMHz\015\012"
   \              0x65 0x78    
   \              0x42 0x75    
   \              0x73 0xCA    
   \              0xB1 0xD6    
   \              0xD3 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x09    
   \              0x46 0x6C    
   \              0x61 0x73    
   \              0x68 0xCA    
   \              0xB1 0xD6    
   \              0xD3 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0xCF 0xB5          DC8 0CFH, 0B5H, 0CDH, 0B3H, 0C6H, 0F4H, 0B6H, 0AFH
   \              0xCD 0xB3    
   \              0xC6 0xF4    
   \              0xB6 0xAF    
   \   00000008   0xCD 0xEA          DC8 0CDH, 0EAH, 0B1H, 0CFH, 0A3H, 0ACH, 0C8H, 0F4H
   \              0xB1 0xCF    
   \              0xA3 0xAC    
   \              0xC8 0xF4    
   \   00000010   0xD2 0xAA          DC8 0D2H, 0AAH, 0BDH, 0FBH, 0D3H, 0C3H, 0B5H, 0F7H
   \              0xBD 0xFB    
   \              0xD3 0xC3    
   \              0xB5 0xF7    
   \   00000018   0xCA 0xD4          DC8 0CAH, 0D4H, 0CAH, 0E4H, 0B3H, 0F6H, 0C7H, 0EBH
   \              0xCA 0xE4    
   \              0xB3 0xF6    
   \              0xC7 0xEB    
   \   00000020   0xB6 0xA8          DC8 0B6H, 0A8H, 0D2H, 0E5H, 50H, 52H, 49H, 4EH
   \              0xD2 0xE5    
   \              0x50 0x52    
   \              0x49 0x4E    
   \   00000028   0x54 0x5F          DC8 54H, 5FH, 4FH, 4EH, 5FH, 4FH, 46H, 46H
   \              0x4F 0x4E    
   \              0x5F 0x4F    
   \              0x46 0x46    
   \   00000030   0xCE 0xAA          DC8 0CEH, 0AAH, 31H, 28H, 6BH, 36H, 30H, 5FH
   \              0x31 0x28    
   \              0x6B 0x36    
   \              0x30 0x5F    
   \   00000038   0x63 0x61          DC8 63H, 61H, 72H, 64H, 2EH, 68H, 29H, 0DH
   \              0x72 0x64    
   \              0x2E 0x68    
   \              0x29 0x0D    
   \   00000040   0x0A 0x00          DC8 0AH, 0
   \   00000042   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000008   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000010   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000018   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000020   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000028   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000030   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000038   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000040   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 0DH, 0AH, 0
   \              0x2A 0x2A    
   \              0x0D 0x0A    
   \              0x00         
   \   00000047   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x0D 0x0A          DC8 "\015\012****\304\332\272\313\267\242\311\372\323\262\274\376\264\355\316\363*****\015\012"
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0xC4 0xDA    
   \              0xBA 0xCB    
   \              0xB7 0xA2    
   \              0xC9 0xFA    
   \              0xD3 0xB2    
   \              0xBC 0xFE    
   \              0xB4 0xED    
   \              0xCE 0xF3    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x0D    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x0D 0x0A          DC8 "\015\012****\275\370\310\353\316\264\266\250\322\345\326\320\266\317,Interrupt Number %d*****\015\012"
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0xBD 0xF8    
   \              0xC8 0xEB    
   \              0xCE 0xB4    
   \              0xB6 0xA8    
   \              0xD2 0xE5    
   \              0xD6 0xD0    
   \              0xB6 0xCF    
   \              0x2C 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x72 0x75    
   \              0x70 0x74    
   \              0x20 0x4E    
   \              0x75 0x6D    
   \              0x62 0x65    
   \              0x72 0x20    
   \              0x25 0x64    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x0D    
   \              0x0A 0x00    
    159          
    160          /**
    161           * 初始化操作系统的滴答定时器(OS Tick)
    162           *
    163           * @param  none
    164           * @return none
    165           *
    166           * @brief  该函数仅在uC/OS等系统中调用，切必须在OSStart()和处理器初始化后调用
    167           *         
    168           */
    169          #if UCOS_II > 0u
    170          void SystemTickInit (void)
    171          {
    172            uint32  cpu_clk_freq;
    173            uint32  cnts;
    174          
    175            cpu_clk_freq = g_core_clock;  //获取SysTick时钟
    176          
    177          #if (OS_VERSION >= 30000u)
    178            cnts  = cpu_clk_freq / (uint32)OSCfg_TickRate_Hz;    
    179          #else
    180            cnts  = cpu_clk_freq / (uint32)OS_TICKS_PER_SEC;        
    181          #endif
    182          
    183            OS_CPU_SysTickInit(cnts);     //初始化uCOS滴答定时器SysTick
    184          }
    185          #endif
    186          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DefaultISR
         8   -> printf
       8   HardFault_Handler
         8   -> printf
       0   SystemCoreClockUpdate
      48   SystemInit
        32   -> LPLD_PLL_Setup
        32   -> LPLD_UART_Init
        32   -> SystemCoreClockUpdate
        48   -> __aeabi_memcpy4
        32   -> common_relocate
        32   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ?_0
      68  ?_1
      48  ?_2
       8  ?_3
      36  ?_4
      36  ?_5
      68  ?_6
      72  ?_7
      32  ?_8
      48  ?_9
      20  DefaultISR
      10  HardFault_Handler
       4  SystemCoreClock
      40  SystemCoreClockUpdate
     244  SystemInit

 
   4 bytes in section .data
 420 bytes in section .rodata
 414 bytes in section .text
 
 414 bytes of CODE  memory
 420 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: none
