###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        16/Aug/2016  11:11:15
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\lib\LPLD\HW\HW_TSI.c
#    Command line =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\lib\LPLD\HW\HW_TSI.c -D LPLD_K60
#        -lCN
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\" -lB
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\" -o
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\Obj\" --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\BSP\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\ITAC\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\CTL\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\MAIN\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\SENSOR\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\CPU\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\common\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\HW\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\DEV\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\FatFs\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\FatFs\option\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\common\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\driver\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\descriptor\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\class\" -On -I D:\IAR\arm\CMSIS\Include\ -D
#        ARM_MATH_CM4
#    List file    =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\HW_TSI.lst
#    Object file  =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\Obj\HW_TSI.o
#
###############################################################################

E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\lib\LPLD\HW\HW_TSI.c
      1          /**
      2           * @file HW_TSI.c
      3           * @version 3.0[By LPLD]
      4           * @date 2013-06-18
      5           * @brief TSI底层模块相关函数
      6           *
      7           * 更改建议:不建议修改
      8           *
      9           * 版权所有:北京拉普兰德电子技术有限公司
     10           * http://www.lpld.cn
     11           * mail:support@lpld.cn
     12           *
     13           * @par
     14           * 本代码由拉普兰德[LPLD]开发并维护，并向所有使用者开放源代码。
     15           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     16           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     17           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     18           * 拉普兰德不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     19           * 拉普兰德无义务解释、说明本代码的具体原理、功能、实现方法。
     20           * 除非拉普兰德[LPLD]授权，开发者不得将本代码用于商业产品。
     21           */
     22          
     23          #include "common.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_DisableIRQ(IRQn_Type)
   \                     NVIC_DisableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0xF010 0x021F      ANDS     R2,R0,#0x1F
   \   00000006   0x4091             LSLS     R1,R1,R2
   \   00000008   0x....             LDR.N    R2,??DataTable4  ;; 0xe000e180
   \   0000000A   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000C   0x0943             LSRS     R3,R0,#+5
   \   0000000E   0xF842 0x1023      STR      R1,[R2, R3, LSL #+2]
   \   00000012   0x4770             BX       LR               ;; return
     24          #include "HW_TSI.h"
     25          
     26          
     27          //用户自定义中断服务函数数组

   \                                 In section .bss, align 4
     28          TSI_ISR_CALLBACK TSI_ISR[2];
   \                     TSI_ISR:
   \   00000000                      DS8 8
     29          
     30          //通道基准值

   \                                 In section .bss, align 4
     31          uint16 TSI_ChxBaseVal[16];
   \                     TSI_ChxBaseVal:
   \   00000000                      DS8 32
     32          

   \                                 In section .data, align 4
     33          const uint16* TSI_CNTR[16]={(uint16*)&TSI0->CNTR1, (uint16*)(&TSI0->CNTR1)+1,
   \                     TSI_CNTR:
   \   00000000   0x40045100         DC32 40045100H, 40045102H, 40045104H, 40045106H, 40045108H, 4004510AH
   \              0x40045102   
   \              0x40045104   
   \              0x40045106   
   \              0x40045108   
   \              0x4004510A   
   \   00000018   0x4004510C         DC32 4004510CH, 4004510EH, 40045110H, 40045112H, 40045114H, 40045116H
   \              0x4004510E   
   \              0x40045110   
   \              0x40045112   
   \              0x40045114   
   \              0x40045116   
   \   00000030   0x40045118         DC32 40045118H, 4004511AH, 4004511CH, 4004511EH
   \              0x4004511A   
   \              0x4004511C   
   \              0x4004511E   
     34                                      (uint16*)&TSI0->CNTR3, (uint16*)(&TSI0->CNTR3)+1,
     35                                      (uint16*)&TSI0->CNTR5, (uint16*)(&TSI0->CNTR5)+1,
     36                                      (uint16*)&TSI0->CNTR7, (uint16*)(&TSI0->CNTR7)+1,
     37                                      (uint16*)&TSI0->CNTR9, (uint16*)(&TSI0->CNTR9)+1,
     38                                      (uint16*)&TSI0->CNTR11, (uint16*)(&TSI0->CNTR11)+1,
     39                                      (uint16*)&TSI0->CNTR13, (uint16*)(&TSI0->CNTR13)+1,
     40                                      (uint16*)&TSI0->CNTR15, (uint16*)(&TSI0->CNTR15)+1}; 
     41           

   \                                 In section .data, align 4
     42          const uint32* TSI_PORT[32]={(uint32*)&PORTB->PCR[0], (uint32*)&PORTA->PCR[0], (uint32*)&PORTA->PCR[1], (uint32*)&PORTA->PCR[2],
   \                     TSI_PORT:
   \   00000000   0x4004A000         DC32 4004A000H, 40049000H, 40049004H, 40049008H, 4004900CH, 40049010H
   \              0x40049000   
   \              0x40049004   
   \              0x40049008   
   \              0x4004900C   
   \              0x40049010   
   \   00000018   0x4004A004         DC32 4004A004H, 4004A008H, 4004A00CH, 4004A040H, 4004A044H, 4004A048H
   \              0x4004A008   
   \              0x4004A00C   
   \              0x4004A040   
   \              0x4004A044   
   \              0x4004A048   
   \   00000030   0x4004A04C         DC32 4004A04CH, 4004B000H, 4004B004H, 4004B008H
   \              0x4004B000   
   \              0x4004B004   
   \              0x4004B008   
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000050   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000060   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000070   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     43                                      (uint32*)&PORTA->PCR[3], (uint32*)&PORTA->PCR[4], (uint32*)&PORTB->PCR[1], (uint32*)&PORTB->PCR[2], 
     44                                      (uint32*)&PORTB->PCR[3], (uint32*)&PORTB->PCR[16], (uint32*)&PORTB->PCR[17], (uint32*)&PORTB->PCR[18], 
     45                                      (uint32*)&PORTB->PCR[19], (uint32*)&PORTC->PCR[0], (uint32*)&PORTC->PCR[1], (uint32*)&PORTC->PCR[2]};
     46          
     47          /*
     48           * LPLD_TSI_Init
     49           * TSI通用初始化函数
     50           * 
     51           * 参数:
     52           *    tsi_init_struct--TSI初始化结构体，
     53           *                        具体定义见TSI_InitTypeDef
     54           *
     55           * 输出:
     56           *    0--配置错误
     57           *    1--配置成功
     58           */

   \                                 In section .text, align 4, keep-with-next
     59          uint8 LPLD_TSI_Init(TSI_InitTypeDef tsi_init_struct)
     60          {
   \                     LPLD_TSI_Init: (+1)
   \   00000000   0xB40F             PUSH     {R0-R3}
   \   00000002   0xB5F8             PUSH     {R3-R7,LR}
     61            uint16 chs = tsi_init_struct.TSI_Chs;
   \   00000004   0xF8BD 0x4018      LDRH     R4,[SP, #+24]
     62            uint8 mode = tsi_init_struct.TSI_ScanTriggerMode;
   \   00000008   0xF89D 0x501A      LDRB     R5,[SP, #+26]
     63            uint8 esor = tsi_init_struct.TSI_EndScanOrOutRangeInt;
   \   0000000C   0xF89D 0x601B      LDRB     R6,[SP, #+27]
     64            boolean err = tsi_init_struct.TIS_ErrIntEnable;
   \   00000010   0xF89D 0x701C      LDRB     R7,[SP, #+28]
     65             
     66            //参数检查
     67            ASSERT( chs != 0);                  //判断通道
   \   00000014   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000016   0x2C00             CMP      R4,#+0
   \   00000018   0xD103             BNE.N    ??LPLD_TSI_Init_0
   \   0000001A   0x2143             MOVS     R1,#+67
   \   0000001C   0x....             LDR.N    R0,??DataTable4_1
   \   0000001E   0x.... 0x....      BL       assert_failed
     68            ASSERT( mode <= TSI_SCAN_PERIOD);   //判断中断模式
   \                     ??LPLD_TSI_Init_0: (+1)
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0x2D02             CMP      R5,#+2
   \   00000026   0xDB03             BLT.N    ??LPLD_TSI_Init_1
   \   00000028   0x2144             MOVS     R1,#+68
   \   0000002A   0x....             LDR.N    R0,??DataTable4_1
   \   0000002C   0x.... 0x....      BL       assert_failed
     69            ASSERT( esor <= TSI_ENDOFDCAN_INT);//判断中断模式
   \                     ??LPLD_TSI_Init_1: (+1)
   \   00000030   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000032   0x2E02             CMP      R6,#+2
   \   00000034   0xDB03             BLT.N    ??LPLD_TSI_Init_2
   \   00000036   0x2145             MOVS     R1,#+69
   \   00000038   0x....             LDR.N    R0,??DataTable4_1
   \   0000003A   0x.... 0x....      BL       assert_failed
     70            
     71            //开启TSI模块时钟
     72            SIM->SCGC5 |= (SIM_SCGC5_TSI_MASK); 
   \                     ??LPLD_TSI_Init_2: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable4_2  ;; 0x40048038
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000046   0x....             LDR.N    R1,??DataTable4_2  ;; 0x40048038
   \   00000048   0x6008             STR      R0,[R1, #+0]
     73            
     74            //这里使能相关通道的引脚复用功能
     75            for(uint8 i=0; i<16; i++)
   \   0000004A   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_Init_3: (+1)
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x2810             CMP      R0,#+16
   \   00000050   0xDA09             BGE.N    ??LPLD_TSI_Init_4
     76            {
     77              if((chs>>i)&0x1L)
   \   00000052   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000054   0x0021             MOVS     R1,R4
   \   00000056   0x4101             ASRS     R1,R1,R0
   \   00000058   0x07C9             LSLS     R1,R1,#+31
   \   0000005A   0xD502             BPL.N    ??LPLD_TSI_Init_5
     78              {
     79                *((uint32 *)TSI_PORT) = PORT_PCR_MUX(0); 
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x....             LDR.N    R2,??DataTable4_3
   \   00000060   0x6011             STR      R1,[R2, #+0]
     80              }
     81            }
   \                     ??LPLD_TSI_Init_5: (+1)
   \   00000062   0x1C40             ADDS     R0,R0,#+1
   \   00000064   0xE7F2             B.N      ??LPLD_TSI_Init_3
     82            
     83            //配置通用控制寄存器
     84            TSI0->GENCS = ((TSI_GENCS_NSCN(10))  //每个电极每次扫描(10)次、
     85                            |(TSI_GENCS_PS(3)));  //电极晶振(2^3)分频
   \                     ??LPLD_TSI_Init_4: (+1)
   \   00000066   0xF45F 0x00A6      MOVS     R0,#+5439488
   \   0000006A   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   0000006C   0x6008             STR      R0,[R1, #+0]
     86            //配置扫描寄存器
     87            TSI0->SCANC = ((TSI_SCANC_EXTCHRG(3))        //0.8pF内部参考电容
     88                            |(TSI_SCANC_REFCHRG(31))      //32uA充电电流
     89                            |(TSI_SCANC_DELVOL(7))        //600mV间隔电压
     90                            |(TSI_SCANC_SMOD(0))          //扫描周期mod
     91                            |(TSI_SCANC_AMPSC(0)));       //输入时钟(2^0)分频
   \   0000006E   0x....             LDR.N    R0,??DataTable4_5  ;; 0xf81f0000
   \   00000070   0x....             LDR.N    R1,??DataTable4_6  ;; 0x40045004
   \   00000072   0x6008             STR      R0,[R1, #+0]
     92            //使能通道
     93            TSI0->PEN = chs;
   \   00000074   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000076   0x....             LDR.N    R0,??DataTable4_7  ;; 0x40045008
   \   00000078   0x6004             STR      R4,[R0, #+0]
     94            
     95            //使能相关中断
     96            //TSI_ENDOFDCAN_INT和TSI_OUTOFRANGE_INT只能选择其一
     97            if(tsi_init_struct.TSI_EndScanIsr!=NULL && esor==TSI_ENDOFDCAN_INT)
   \   0000007A   0x9808             LDR      R0,[SP, #+32]
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD012             BEQ.N    ??LPLD_TSI_Init_6
   \   00000080   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000082   0x2E01             CMP      R6,#+1
   \   00000084   0xD10F             BNE.N    ??LPLD_TSI_Init_6
     98            {
     99              TSI0->GENCS |= TSI_GENCS_ESOR_MASK;
   \   00000086   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000008E   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   00000090   0x6008             STR      R0,[R1, #+0]
    100              TSI_ISR[0] = tsi_init_struct.TSI_EndScanIsr;
   \   00000092   0x9808             LDR      R0,[SP, #+32]
   \   00000094   0x....             LDR.N    R1,??DataTable4_8
   \   00000096   0x6008             STR      R0,[R1, #+0]
    101              TSI0->GENCS |= TSI_GENCS_TSIIE_MASK;   
   \   00000098   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000000A0   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   000000A2   0x6008             STR      R0,[R1, #+0]
   \   000000A4   0xE014             B.N      ??LPLD_TSI_Init_7
    102            }
    103            else if(tsi_init_struct.TSI_OutRangeIsr!=NULL && esor==TSI_OUTOFRANGE_INT)
   \                     ??LPLD_TSI_Init_6: (+1)
   \   000000A6   0x9809             LDR      R0,[SP, #+36]
   \   000000A8   0x2800             CMP      R0,#+0
   \   000000AA   0xD011             BEQ.N    ??LPLD_TSI_Init_7
   \   000000AC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000AE   0x2E00             CMP      R6,#+0
   \   000000B0   0xD10E             BNE.N    ??LPLD_TSI_Init_7
    104            {
    105              TSI0->GENCS &= ~(TSI_GENCS_ESOR_MASK);
   \   000000B2   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0xF030 0x0010      BICS     R0,R0,#0x10
   \   000000BA   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   000000BC   0x6008             STR      R0,[R1, #+0]
    106              TSI_ISR[0] = tsi_init_struct.TSI_OutRangeIsr;
   \   000000BE   0x9809             LDR      R0,[SP, #+36]
   \   000000C0   0x....             LDR.N    R1,??DataTable4_8
   \   000000C2   0x6008             STR      R0,[R1, #+0]
    107              TSI0->GENCS |= TSI_GENCS_TSIIE_MASK;  
   \   000000C4   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000000CC   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   000000CE   0x6008             STR      R0,[R1, #+0]
    108            }
    109            if(tsi_init_struct.TSI_ErrIsr!=NULL && err==TRUE)
   \                     ??LPLD_TSI_Init_7: (+1)
   \   000000D0   0x980A             LDR      R0,[SP, #+40]
   \   000000D2   0x2800             CMP      R0,#+0
   \   000000D4   0xD011             BEQ.N    ??LPLD_TSI_Init_8
   \   000000D6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000D8   0x2F01             CMP      R7,#+1
   \   000000DA   0xD10E             BNE.N    ??LPLD_TSI_Init_8
    110            {
    111              TSI0->GENCS |= TSI_GENCS_ERIE_MASK;
   \   000000DC   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   000000DE   0x6800             LDR      R0,[R0, #+0]
   \   000000E0   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000000E4   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   000000E6   0x6008             STR      R0,[R1, #+0]
    112              TSI_ISR[1] = tsi_init_struct.TSI_EndScanIsr;
   \   000000E8   0x9808             LDR      R0,[SP, #+32]
   \   000000EA   0x....             LDR.N    R1,??DataTable4_8
   \   000000EC   0x6048             STR      R0,[R1, #+4]
    113              TSI0->GENCS |= TSI_GENCS_TSIIE_MASK;  
   \   000000EE   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   000000F6   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   000000F8   0x6008             STR      R0,[R1, #+0]
    114            }
    115              
    116            //使能TSI模块  
    117            TSI0->GENCS |= (TSI_GENCS_TSIEN_MASK); 
   \                     ??LPLD_TSI_Init_8: (+1)
   \   000000FA   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000102   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   00000104   0x6008             STR      R0,[R1, #+0]
    118           
    119            //是否进行基准值校验
    120            if(tsi_init_struct.TSI_IsInitSelfCal == TRUE)
   \   00000106   0xF89D 0x002C      LDRB     R0,[SP, #+44]
   \   0000010A   0x2801             CMP      R0,#+1
   \   0000010C   0xD136             BNE.N    ??LPLD_TSI_Init_9
    121            {
    122              //使能软件触发
    123              TSI0->GENCS |= TSI_GENCS_SWTS_MASK;
   \   0000010E   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000116   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   00000118   0x6008             STR      R0,[R1, #+0]
    124              //等待扫描结束
    125              while(!(TSI0->GENCS&TSI_GENCS_EOSF_MASK)){};
   \                     ??LPLD_TSI_Init_10: (+1)
   \   0000011A   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0x0400             LSLS     R0,R0,#+16
   \   00000120   0xD5FB             BPL.N    ??LPLD_TSI_Init_10
    126              for(uint16 i=0; i<5000; i++)
   \   00000122   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_Init_11: (+1)
   \   00000124   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000126   0xF241 0x3188      MOVW     R1,#+5000
   \   0000012A   0x4288             CMP      R0,R1
   \   0000012C   0xDA08             BGE.N    ??LPLD_TSI_Init_12
    127              {
    128                for(uint8 j=0; j<200; j++)
   \   0000012E   0x2100             MOVS     R1,#+0
   \                     ??LPLD_TSI_Init_13: (+1)
   \   00000130   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000132   0x29C8             CMP      R1,#+200
   \   00000134   0xDA02             BGE.N    ??LPLD_TSI_Init_14
    129                {
    130                  asm("NOP");
   \   00000136   0xBF00             NOP
    131                }
   \   00000138   0x1C49             ADDS     R1,R1,#+1
   \   0000013A   0xE7F9             B.N      ??LPLD_TSI_Init_13
    132              }
   \                     ??LPLD_TSI_Init_14: (+1)
   \   0000013C   0x1C40             ADDS     R0,R0,#+1
   \   0000013E   0xE7F1             B.N      ??LPLD_TSI_Init_11
    133              //填充基准值数组、阈值寄存器
    134              for(uint8 i=0; i<16; i++)
   \                     ??LPLD_TSI_Init_12: (+1)
   \   00000140   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_Init_15: (+1)
   \   00000142   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000144   0x2810             CMP      R0,#+16
   \   00000146   0xDA25             BGE.N    ??LPLD_TSI_Init_16
    135              {
    136                if((chs>>i)&0x1L)
   \   00000148   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000014A   0x0021             MOVS     R1,R4
   \   0000014C   0x4101             ASRS     R1,R1,R0
   \   0000014E   0x07C9             LSLS     R1,R1,#+31
   \   00000150   0xD512             BPL.N    ??LPLD_TSI_Init_17
    137                {
    138                  TSI_ChxBaseVal[i] = *((uint16 *)TSI_CNTR[i]);
   \   00000152   0x....             LDR.N    R1,??DataTable4_9
   \   00000154   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000156   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   0000015A   0x8809             LDRH     R1,[R1, #+0]
   \   0000015C   0x....             LDR.N    R2,??DataTable4_10
   \   0000015E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000160   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
    139                  TSI0->THRESHLD[i] = TSI_ChxBaseVal[i] + TSI_OVERRUN_VAL;
   \   00000164   0x....             LDR.N    R1,??DataTable4_10
   \   00000166   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000168   0xF831 0x1010      LDRH     R1,[R1, R0, LSL #+1]
   \   0000016C   0xF511 0x3140      ADDS     R1,R1,#+196608
   \   00000170   0x....             LDR.N    R2,??DataTable4_11  ;; 0x40045120
   \   00000172   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000174   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
    140                }
    141              }
   \                     ??LPLD_TSI_Init_17: (+1)
   \   00000178   0x1C40             ADDS     R0,R0,#+1
   \   0000017A   0xE7E2             B.N      ??LPLD_TSI_Init_15
    142            }
    143            else
    144            {
    145              for(uint8 i=0; i<16; i++)
   \                     ??LPLD_TSI_Init_9: (+1)
   \   0000017C   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_Init_18: (+1)
   \   0000017E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000180   0x2810             CMP      R0,#+16
   \   00000182   0xDA07             BGE.N    ??LPLD_TSI_Init_16
    146              {
    147                TSI_ChxBaseVal[i] = TSI_BASE_VAL;
   \   00000184   0xF44F 0x6100      MOV      R1,#+2048
   \   00000188   0x....             LDR.N    R2,??DataTable4_10
   \   0000018A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000018C   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
    148              }
   \   00000190   0x1C40             ADDS     R0,R0,#+1
   \   00000192   0xE7F4             B.N      ??LPLD_TSI_Init_18
    149            }
    150            
    151            //周期扫描模式or软件触发模式
    152            if(mode == TSI_SCAN_PERIOD)
   \                     ??LPLD_TSI_Init_16: (+1)
   \   00000194   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000196   0x2D01             CMP      R5,#+1
   \   00000198   0xD106             BNE.N    ??LPLD_TSI_Init_19
    153            {
    154              TSI0->GENCS |= TSI_GENCS_STM_MASK;
   \   0000019A   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   0000019C   0x6800             LDR      R0,[R0, #+0]
   \   0000019E   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000001A2   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   000001A4   0x6008             STR      R0,[R1, #+0]
   \   000001A6   0xE005             B.N      ??LPLD_TSI_Init_20
    155            }
    156            else
    157            {
    158              TSI0->GENCS &= ~(TSI_GENCS_STM_MASK);
   \                     ??LPLD_TSI_Init_19: (+1)
   \   000001A8   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   000001AA   0x6800             LDR      R0,[R0, #+0]
   \   000001AC   0xF030 0x0002      BICS     R0,R0,#0x2
   \   000001B0   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   000001B2   0x6008             STR      R0,[R1, #+0]
    159            }
    160            
    161            return 1;
   \                     ??LPLD_TSI_Init_20: (+1)
   \   000001B4   0x2001             MOVS     R0,#+1
   \   000001B6   0xBCF2             POP      {R1,R4-R7}
   \   000001B8   0xF85D 0xFB14      LDR      PC,[SP], #+20    ;; return
    162          }
    163          
    164          /*
    165           * LPLD_TSI_Deinit
    166           * TSI反初始化函数
    167           * 
    168           * 参数:
    169           *    无
    170           *
    171           * 输出:
    172           *    无
    173           */

   \                                 In section .text, align 2, keep-with-next
    174          void LPLD_TSI_Deinit(void)
    175          {
   \                     LPLD_TSI_Deinit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    176            LPLD_TSI_DisableIrq();
   \   00000002   0x2053             MOVS     R0,#+83
   \   00000004   0x.... 0x....      BL       NVIC_DisableIRQ
    177            TSI0->STATUS = 0xFFFFFFFF;
   \   00000008   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000000C   0x....             LDR.N    R1,??DataTable4_12  ;; 0x4004500c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    178            TSI0->PEN = 0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable4_7  ;; 0x40045008
   \   00000014   0x6008             STR      R0,[R1, #+0]
    179            TSI0->SCANC = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable4_6  ;; 0x40045004
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    180            TSI0->GENCS = 0;
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   00000020   0x6008             STR      R0,[R1, #+0]
    181            //关闭TSI模块时钟
    182            SIM->SCGC5 &= ~(SIM_SCGC5_TSI_MASK); 
   \   00000022   0x....             LDR.N    R0,??DataTable4_2  ;; 0x40048038
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF030 0x0020      BICS     R0,R0,#0x20
   \   0000002A   0x....             LDR.N    R1,??DataTable4_2  ;; 0x40048038
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    183          }
   \   0000002E   0xBD01             POP      {R0,PC}          ;; return
    184          
    185          /*
    186           * LPLD_TSI_IsChxTouched
    187           * 通道x的电极是否被触摸
    188           * 
    189           * 参数:
    190           *    ch_num--通道x的数字
    191           *      |_0~15
    192           *
    193           * 输出:
    194           *    TRUE-有触摸
    195           *    FALSE-未触摸
    196           */

   \                                 In section .text, align 2, keep-with-next
    197          boolean LPLD_TSI_IsChxTouched(uint8 ch_num)
    198          { 
   \                     LPLD_TSI_IsChxTouched: (+1)
   \   00000000   0x0001             MOVS     R1,R0
    199            if(TSI_ChxBaseVal[ch_num]<*((uint16 *)TSI_CNTR[ch_num]))
   \   00000002   0x....             LDR.N    R0,??DataTable4_10
   \   00000004   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000006   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \   0000000A   0x....             LDR.N    R2,??DataTable4_9
   \   0000000C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000E   0xF852 0x2021      LDR      R2,[R2, R1, LSL #+2]
   \   00000012   0x8812             LDRH     R2,[R2, #+0]
   \   00000014   0x4290             CMP      R0,R2
   \   00000016   0xD201             BCS.N    ??LPLD_TSI_IsChxTouched_0
    200              return TRUE;
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0xE000             B.N      ??LPLD_TSI_IsChxTouched_1
    201            return FALSE;
   \                     ??LPLD_TSI_IsChxTouched_0: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
   \                     ??LPLD_TSI_IsChxTouched_1: (+1)
   \   0000001E   0x4770             BX       LR               ;; return
    202          }
    203          
    204          /*
    205           * TSI中断处理函数
    206           * 与启动文件startup_K60.s中的中断向量表关联
    207           * 用户无需修改，程序自动进入对应通道中断函数
    208           */

   \                                 In section .text, align 2, keep-with-next
    209          void TSI_IRQHandler(void)
    210          {
   \                     TSI_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    211          #if (UCOS_II > 0u)
    212            OS_CPU_SR  cpu_sr = 0u;
    213            OS_ENTER_CRITICAL(); //告知系统此时已经进入了中断服务子函数
    214            OSIntEnter();
    215            OS_EXIT_CRITICAL();
    216          #endif
    217            
    218            if(TSI0->GENCS&(TSI_GENCS_ESOR_MASK|TSI_GENCS_EOSF_MASK) &&
    219               TSI_ISR[0] != NULL)
   \   00000002   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF248 0x0110      MOVW     R1,#+32784
   \   0000000A   0x4208             TST      R0,R1
   \   0000000C   0xD017             BEQ.N    ??TSI_IRQHandler_0
   \   0000000E   0x....             LDR.N    R0,??DataTable4_8
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD013             BEQ.N    ??TSI_IRQHandler_0
    220            {
    221              TSI_ISR[0]();
   \   00000016   0x....             LDR.N    R0,??DataTable4_8
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x4780             BLX      R0
    222              TSI0->GENCS |= TSI_GENCS_OUTRGF_MASK;
   \   0000001C   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   00000024   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   00000026   0x6008             STR      R0,[R1, #+0]
    223              TSI0->GENCS |= TSI_GENCS_EOSF_MASK;
   \   00000028   0x....             LDR.N    R0,??DataTable4_4  ;; 0x40045000
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   00000030   0x....             LDR.N    R1,??DataTable4_4  ;; 0x40045000
   \   00000032   0x6008             STR      R0,[R1, #+0]
    224              TSI0->STATUS = 0x0000FFFF;
   \   00000034   0xF64F 0x70FF      MOVW     R0,#+65535
   \   00000038   0x....             LDR.N    R1,??DataTable4_12  ;; 0x4004500c
   \   0000003A   0x6008             STR      R0,[R1, #+0]
   \   0000003C   0xE00D             B.N      ??TSI_IRQHandler_1
    225            }
    226            else if(TSI0->STATUS != 0 && TSI_ISR[1] != NULL)
   \                     ??TSI_IRQHandler_0: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable4_12  ;; 0x4004500c
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD009             BEQ.N    ??TSI_IRQHandler_1
   \   00000046   0x....             LDR.N    R0,??DataTable4_8
   \   00000048   0x6840             LDR      R0,[R0, #+4]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD005             BEQ.N    ??TSI_IRQHandler_1
    227            {
    228              TSI_ISR[1]();
   \   0000004E   0x....             LDR.N    R0,??DataTable4_8
   \   00000050   0x6840             LDR      R0,[R0, #+4]
   \   00000052   0x4780             BLX      R0
    229              TSI0->STATUS = 0xFFFF0000;
   \   00000054   0x....             LDR.N    R0,??DataTable4_13  ;; 0xffff0000
   \   00000056   0x....             LDR.N    R1,??DataTable4_12  ;; 0x4004500c
   \   00000058   0x6008             STR      R0,[R1, #+0]
    230            }
    231              
    232          #if (UCOS_II > 0u)
    233            OSIntExit();          //告知系统此时即将离开中断服务子函数
    234          #endif
    235          }
   \                     ??TSI_IRQHandler_1: (+1)
   \   0000005A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0xE000E180         DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     TSI_PORT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x40045000         DC32     0x40045000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0xF81F0000         DC32     0xf81f0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x40045004         DC32     0x40045004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x40045008         DC32     0x40045008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     TSI_ISR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     TSI_CNTR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     TSI_ChxBaseVal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x40045120         DC32     0x40045120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x4004500C         DC32     0x4004500c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0xFFFF0000         DC32     0xffff0000

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x45 0x3A          DC8 45H, 3AH, 5CH, 0B7H, 0C9H, 0CBH, 0BCH, 0BFH
   \              0x5C 0xB7    
   \              0xC9 0xCB    
   \              0xBC 0xBF    
   \   00000008   0xA8 0xB6          DC8 0A8H, 0B6H, 0FBH, 5CH, 0D0H, 0C2H, 0B9H, 0A4H
   \              0xFB 0x5C    
   \              0xD0 0xC2    
   \              0xB9 0xA4    
   \   00000010   0xB3 0xCC          DC8 0B3H, 0CCH, 5CH, 4CH, 50H, 4CH, 44H, 5FH
   \              0x5C 0x4C    
   \              0x50 0x4C    
   \              0x44 0x5F    
   \   00000018   0x4F 0x53          DC8 4FH, 53H, 4BH, 69H, 6EH, 65H, 74H, 69H
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \   00000020   0x73 0x5F          DC8 73H, 5FH, 56H, 33H, 5CH, 6CH, 69H, 62H
   \              0x56 0x33    
   \              0x5C 0x6C    
   \              0x69 0x62    
   \   00000028   0x5C 0x4C          DC8 5CH, 4CH, 50H, 4CH, 44H, 5CH, 48H, 57H
   \              0x50 0x4C    
   \              0x44 0x5C    
   \              0x48 0x57    
   \   00000030   0x5C 0x48          DC8 5CH, 48H, 57H, 5FH, 54H, 53H, 49H, 2EH
   \              0x57 0x5F    
   \              0x54 0x53    
   \              0x49 0x2E    
   \   00000038   0x63 0x00          DC8 63H, 0
   \   0000003A   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   LPLD_TSI_Deinit
         8   -> NVIC_DisableIRQ
      40   LPLD_TSI_Init
        40   -> assert_failed
       0   LPLD_TSI_IsChxTouched
       0   NVIC_DisableIRQ
       8   TSI_IRQHandler
         8   -- Indirect call


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
      60  ?_0
      48  LPLD_TSI_Deinit
     444  LPLD_TSI_Init
      32  LPLD_TSI_IsChxTouched
      20  NVIC_DisableIRQ
      64  TSI_CNTR
      32  TSI_ChxBaseVal
      92  TSI_IRQHandler
       8  TSI_ISR
     128  TSI_PORT

 
  40 bytes in section .bss
 192 bytes in section .data
  60 bytes in section .rodata
 692 bytes in section .text
 
 692 bytes of CODE  memory
  60 bytes of CONST memory
 232 bytes of DATA  memory

Errors: none
Warnings: none
