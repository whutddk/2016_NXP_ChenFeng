###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        16/Aug/2016  11:11:18
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\app\ITAC\OLED.c
#    Command line =  
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\app\ITAC\OLED.c" -D LPLD_K60 -lCN
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\" -lB
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\" -o
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\Obj\" --no_cse --no_unroll --no_inline --no_code_motion
#        --no_tbaa --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\BSP\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\ITAC\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\CTL\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\MAIN\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\app\SENSOR\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\CPU\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\common\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\HW\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\LPLD\DEV\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\FatFs\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\FatFs\option\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\common\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\driver\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\descriptor\" -I
#        "E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\..\..\..\lib\USB\class\" -On -I D:\IAR\arm\CMSIS\Include\ -D
#        ARM_MATH_CM4
#    List file    =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\List\OLED.lst
#    Object file  =  
#        E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid)
#        1.9\iar\FLASH\Obj\OLED.o
#
###############################################################################

E:\飞思卡尔\新工程\LPLD_OSKinetis_V3\project\NXP_(golden_cyprinoid) 1.9\app\ITAC\OLED.c
      1          #include "common.h"
      2          #include "include.h"
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void OLEDIO_init()
      5          {
   \                     OLEDIO_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
      6            GPIO_InitTypeDef OLEDIO_inittype;
      7            
      8            OLEDIO_inittype.GPIO_PTx = PTE;
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   00000008   0x9001             STR      R0,[SP, #+4]
      9            OLEDIO_inittype.GPIO_Pins = GPIO_Pin24 | GPIO_Pin25 | GPIO_Pin26| GPIO_Pin27 | GPIO_Pin28;
   \   0000000A   0xF05F 0x50F8      MOVS     R0,#+520093696
   \   0000000E   0x9002             STR      R0,[SP, #+8]
     10            OLEDIO_inittype.GPIO_PinControl = INPUT_PULL_DIS;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x9003             STR      R0,[SP, #+12]
     11            OLEDIO_inittype.GPIO_Dir = DIR_OUTPUT;
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0xF88D 0x0010      STRB     R0,[SP, #+16]
     12            OLEDIO_inittype.GPIO_Output = OUTPUT_H;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0xF88D 0x0011      STRB     R0,[SP, #+17]
     13            OLEDIO_inittype.GPIO_Isr = NULL;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x9005             STR      R0,[SP, #+20]
     14            
     15            LPLD_GPIO_Init(OLEDIO_inittype);
   \   00000024   0xA901             ADD      R1,SP,#+4
   \   00000026   0xB084             SUB      SP,SP,#+16
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0x2214             MOVS     R2,#+20
   \   0000002C   0x.... 0x....      BL       __aeabi_memcpy4
   \   00000030   0xBC0F             POP      {R0-R3}
   \   00000032   0x.... 0x....      BL       LPLD_GPIO_Init
     16           
     17          }
   \   00000036   0xB007             ADD      SP,SP,#+28
   \   00000038   0xBD00             POP      {PC}             ;; return
     18          
     19          
     20          /*4线SPI使用说明：
     21          VBT 供内部DC-DC电压，3.3~4.3V，如果使用5V电压，为保险起见串一个100~500欧的电阻
     22          VCC 供内部逻辑电压 1.8~6V
     23          GND 地
     24          
     25          BS0 低电平
     26          BS1 低电平
     27          BS2 低电平
     28          
     29          CS  片选管脚
     30          DC  命令数据选择管脚
     31          RES 模块复位管脚
     32          D0（SCLK） ，时钟脚，由MCU控制
     33          D1（MOSI） ，主输出从输入数据脚，由MCU控制
     34          
     35          D2 悬空
     36          D3-D7 ， 低电平 ， 也可悬空，但最好设为低电平
     37          RD  低电平 ，也可悬空，但最好设为低电平
     38          RW  低电平 ，也可悬空，但最好设为低电平
     39          RD  低电平 ，也可悬空，但最好设为低电平
     40          */
     41          
     42          

   \                                 In section .data, align 4
     43          uint8 mushroom[] = 
   \                     mushroom:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 224, 96, 112
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xC0 0xE0    
   \              0x60 0x70    
   \   00000014   0x30 0x38          DC8 48, 56, 56, 24, 28, 12, 12, 12, 12, 4, 4, 4, 4, 12, 12, 12, 8, 24
   \              0x38 0x18    
   \              0x1C 0x0C    
   \              0x0C 0x0C    
   \              0x0C 0x04    
   \              0x04 0x04    
   \              0x04 0x0C    
   \              0x0C 0x0C    
   \              0x08 0x18    
   \   00000026   0x38 0x30          DC8 56, 48, 112, 96, 192, 192, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x70 0x60    
   \              0xC0 0xC0    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000039   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 112
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x70         
   \   0000004E   0x1C 0x06          DC8 28, 6, 7, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x07 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 7, 15, 14, 24, 48, 112, 224, 192
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x03 0x07    
   \              0x0F 0x0E    
   \              0x18 0x30    
   \              0x70 0xE0    
   \              0xC0         
   \   00000077   0x80 0x80          DC8 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 224
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0xC0    
   \              0xE0         
   \   0000008A   0x30 0x18          DC8 48, 24, 14, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0E 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000B7   0x00 0x00          DC8 0, 0, 1, 1, 3, 3, 3, 2, 6, 4, 12, 24, 240, 192, 240, 252, 254, 15
   \              0x01 0x01    
   \              0x03 0x03    
   \              0x03 0x02    
   \              0x06 0x04    
   \              0x0C 0x18    
   \              0xF0 0xC0    
   \              0xF0 0xFC    
   \              0xFE 0x0F    
   \   000000C9   0x03 0x01          DC8 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000E0   0x00 0x00          DC8 0, 0, 0, 0, 128, 128, 192, 192, 224, 224, 224, 224, 240, 240, 112
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xC0 0xC0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xF0 0xF0    
   \              0x70         
   \   000000EF   0x70 0x78          DC8 112, 120, 60, 60, 60, 28, 30, 14, 30, 56, 248, 248, 248, 126, 126
   \              0x3C 0x3C    
   \              0x3C 0x1C    
   \              0x1E 0x0E    
   \              0x1E 0x38    
   \              0xF8 0xF8    
   \              0xF8 0x7E    
   \              0x7E         
   \   000000FE   0x9E 0x16          DC8 158, 22, 38, 238, 254, 254, 254, 255, 127, 255, 29, 113, 192, 128
   \              0x26 0xEE    
   \              0xFE 0xFE    
   \              0xFE 0xFF    
   \              0x7F 0xFF    
   \              0x1D 0x71    
   \              0xC0 0x80    
   \   0000010C   0x00 0x00          DC8 0, 0, 0, 0, 0, 224, 248, 252, 14, 15, 14, 14, 14, 12, 12, 12, 12
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0xF8 0xFC    
   \              0x0E 0x0F    
   \              0x0E 0x0E    
   \              0x0E 0x0C    
   \              0x0C 0x0C    
   \              0x0C         
   \   0000011D   0x0E 0x0E          DC8 14, 14, 14, 6, 6, 118, 255, 255, 255, 115, 3, 3, 3, 1, 1, 1, 64
   \              0x0E 0x06    
   \              0x06 0x76    
   \              0xFF 0xFF    
   \              0xFF 0x73    
   \              0x03 0x03    
   \              0x03 0x01    
   \              0x01 0x01    
   \              0x40         
   \   0000012E   0xC0 0x80          DC8 192, 128, 128, 128, 192, 128, 96, 0, 0, 30, 31, 31, 31, 14, 3, 7
   \              0x80 0x80    
   \              0xC0 0x80    
   \              0x60 0x00    
   \              0x00 0x1E    
   \              0x1F 0x1F    
   \              0x1F 0x0E    
   \              0x03 0x07    
   \   0000013E   0x0E 0x1E          DC8 14, 30, 62, 127, 207, 143, 7, 7, 3, 1, 0, 63, 0, 0, 0, 1, 1, 3, 3
   \              0x3E 0x7F    
   \              0xCF 0x8F    
   \              0x07 0x07    
   \              0x03 0x01    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x03    
   \              0x03         
   \   00000151   0x02 0x06          DC8 2, 6, 255, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0x83    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000166   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000017D   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 3, 254, 248, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0xFE    
   \              0xF8 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000192   0x00 0x00          DC8 0, 0, 0, 7, 31, 120, 224, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x07    
   \              0x1F 0x78    
   \              0xE0 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001A6   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 128, 192, 96, 56, 31, 7, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xC0 0x60    
   \              0x38 0x1F    
   \              0x07 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001D1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 6, 12, 24, 24, 48, 32, 96, 96
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x03    
   \              0x06 0x0C    
   \              0x18 0x18    
   \              0x30 0x20    
   \              0x60 0x60    
   \   000001E5   0x40 0xC0          DC8 64, 192, 192, 192, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128
   \              0xC0 0xC0    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \   000001F3   0x80 0x80          DC8 128, 128, 192, 192, 192, 64, 64, 96, 96, 32, 32, 48, 16, 24, 8, 12
   \              0xC0 0xC0    
   \              0xC0 0x40    
   \              0x40 0x60    
   \              0x60 0x20    
   \              0x20 0x30    
   \              0x10 0x18    
   \              0x08 0x0C    
   \   00000203   0x04 0x06          DC8 4, 6, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x03 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
     44          {
     45            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,
     46            0xC0,0xE0,0x60,0x70,0x30,0x38,0x38,0x18,0x1C,0x0C,0x0C,0x0C,0x0C,0x04,0x04,0x04,
     47            0x04,0x0C,0x0C,0x0C,0x08,0x18,0x38,0x30,0x70,0x60,0xC0,0xC0,0x80,0x00,0x00,0x00,
     48            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     49            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x70,0x1C,0x06,
     50            0x07,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     51            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x07,
     52            0x0F,0x0E,0x18,0x30,0x70,0xE0,0xC0,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
     53            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xE0,0x30,0x18,0x0E,0x03,0x01,0x00,
     54            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     55            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     56            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x03,0x03,0x03,0x02,0x06,
     57            0x04,0x0C,0x18,0xF0,0xC0,0xF0,0xFC,0xFE,0x0F,0x03,0x01,0x00,0x00,0x00,0x00,0x00,
     58            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     59            0x00,0x00,0x00,0x00,0x80,0x80,0xC0,0xC0,0xE0,0xE0,0xE0,0xE0,0xF0,0xF0,0x70,0x70,
     60            0x78,0x3C,0x3C,0x3C,0x1C,0x1E,0x0E,0x1E,0x38,0xF8,0xF8,0xF8,0x7E,0x7E,0x9E,0x16,
     61            0x26,0xEE,0xFE,0xFE,0xFE,0xFF,0x7F,0xFF,0x1D,0x71,0xC0,0x80,0x00,0x00,0x00,0x00,
     62            0x00,0xE0,0xF8,0xFC,0x0E,0x0F,0x0E,0x0E,0x0E,0x0C,0x0C,0x0C,0x0C,0x0E,0x0E,0x0E,
     63            0x06,0x06,0x76,0xFF,0xFF,0xFF,0x73,0x03,0x03,0x03,0x01,0x01,0x01,0x40,0xC0,0x80,
     64            0x80,0x80,0xC0,0x80,0x60,0x00,0x00,0x1E,0x1F,0x1F,0x1F,0x0E,0x03,0x07,0x0E,0x1E,
     65            0x3E,0x7F,0xCF,0x8F,0x07,0x07,0x03,0x01,0x00,0x3F,0x00,0x00,0x00,0x01,0x01,0x03,
     66            0x03,0x02,0x06,0xFF,0x83,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     67            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     68            0x00,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     69            0x00,0x00,0x00,0x00,0x00,0x03,0xFE,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     70            0x00,0x00,0x00,0x00,0x00,0x07,0x1F,0x78,0xE0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
     71            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     72            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     73            0x00,0x00,0x00,0x00,0x80,0xC0,0x60,0x38,0x1F,0x07,0x00,0x00,0x00,0x00,0x00,0x00,
     74            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x06,0x0C,0x18,
     75            0x18,0x30,0x20,0x60,0x60,0x40,0xC0,0xC0,0xC0,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
     76            0x80,0x80,0x80,0x80,0x80,0xC0,0xC0,0xC0,0x40,0x40,0x60,0x60,0x20,0x20,0x30,0x10,
     77            0x18,0x08,0x0C,0x04,0x06,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
     78          };
     79          

   \                                 In section .data, align 4
     80          uint8 sky1[] =
   \                     sky1:
   \   00000000   0x40 0x40          DC8 64, 64, 66, 66, 66, 66, 66, 254, 66, 66, 66, 66, 66, 64, 64, 0, 128
   \              0x42 0x42    
   \              0x42 0x42    
   \              0x42 0xFE    
   \              0x42 0x42    
   \              0x42 0x42    
   \              0x42 0x40    
   \              0x40 0x00    
   \              0x80         
   \   00000011   0x80 0x40          DC8 128, 64, 32, 16, 12, 3, 0, 3, 12, 16, 32, 64, 128, 128, 0
   \              0x20 0x10    
   \              0x0C 0x03    
   \              0x00 0x03    
   \              0x0C 0x10    
   \              0x20 0x40    
   \              0x80 0x80    
   \              0x00         
     81          {
     82            0x40,0x40,0x42,0x42,0x42,0x42,0x42,0xFE,0x42,0x42,0x42,0x42,0x42,0x40,0x40,0x00,
     83            0x80,0x80,0x40,0x20,0x10,0x0C,0x03,0x00,0x03,0x0C,0x10,0x20,0x40,0x80,0x80,0x00/*"?",0*/
     84          };

   \                                 In section .data, align 4
     85          uint8 sky2[] =
   \                     sky2:
   \   00000000   0x00 0xFE          DC8 0, 254, 34, 90, 134, 0, 32, 34, 34, 34, 226, 34, 34, 34, 32, 0, 0
   \              0x22 0x5A    
   \              0x86 0x00    
   \              0x20 0x22    
   \              0x22 0x22    
   \              0xE2 0x22    
   \              0x22 0x22    
   \              0x20 0x00    
   \              0x00         
   \   00000011   0xFF 0x04          DC8 255, 4, 8, 7, 16, 12, 3, 64, 128, 127, 0, 1, 6, 24, 0
   \              0x08 0x07    
   \              0x10 0x0C    
   \              0x03 0x40    
   \              0x80 0x7F    
   \              0x00 0x01    
   \              0x06 0x18    
   \              0x00         
     86          {
     87            0x00,0xFE,0x22,0x5A,0x86,0x00,0x20,0x22,0x22,0x22,0xE2,0x22,0x22,0x22,0x20,0x00,
     88            0x00,0xFF,0x04,0x08,0x07,0x10,0x0C,0x03,0x40,0x80,0x7F,0x00,0x01,0x06,0x18,0x00/*"?",1*/
     89          };

   \                                 In section .data, align 4
     90          uint8 sky3[] =
   \                     sky3:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0, 0
   \              0x00 0xFE    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     91          {
     92            0x00,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     93            0x00,0x00,0x00,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00/*"!",2*/
     94          };
     95          
     96          //======================================

   \                                 In section .rodata, align 4
     97          const uint8 F6x8[][6] =
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
     98          {
     99            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
    100            { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
    101            { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
    102            { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
    103            { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
    104            { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
    105            { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
    106            { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
    107            { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
    108            { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
    109            { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
    110            { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
    111            { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
    112            { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
    113            { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
    114            { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
    115            { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
    116            { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
    117            { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
    118            { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
    119            { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
    120            { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
    121            { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
    122            { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
    123            { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
    124            { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
    125            { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
    126            { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
    127            { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
    128            { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
    129            { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
    130            { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
    131            { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
    132            { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
    133            { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
    134            { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
    135            { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
    136            { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
    137            { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
    138            { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
    139            { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
    140            { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
    141            { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
    142            { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
    143            { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
    144            { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
    145            { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
    146            { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
    147            { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
    148            { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
    149            { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
    150            { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
    151            { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
    152            { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
    153            { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
    154            { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
    155            { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
    156            { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
    157            { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
    158            { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
    159            { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
    160            { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
    161            { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
    162            { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
    163            { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
    164            { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
    165            { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
    166            { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
    167            { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
    168            { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    169            { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    170            { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    171            { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    172            { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    173            { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    174            { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    175            { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    176            { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    177            { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    178            { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    179            { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    180            { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    181            { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    182            { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    183            { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    184            { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    185            { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    186            { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    187            { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    188            { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    189            { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    190            { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    191          };

   \                                 In section .rodata, align 4
    192          const uint8 F14x16_Idx[] =
   \                     F14x16_Idx:
   \   00000000   0xBF 0xAA          DC8 "\277\252\273\267\261\325\273\267\263\277\267\347\266\323\316\344\272\272\300\355\271\244\264\363\321\247"
   \              0xBB 0xB7    
   \              0xB1 0xD5    
   \              0xBB 0xB7    
   \              0xB3 0xBF    
   \              0xB7 0xE7    
   \              0xB6 0xD3    
   \              0xCE 0xE4    
   \              0xBA 0xBA    
   \              0xC0 0xED    
   \              0xB9 0xA4    
   \              0xB4 0xF3    
   \              0xD1 0xA7    
   \              0x00         
   \   0000001B   0x00               DC8 0
    193          {
    194            "开环闭环晨风队武汉理工大学"
    195          };

   \                                 In section .rodata, align 4
    196          const uint8 F14x16[] = {
   \                     F14x16:
   \   00000000   0x40 0x41          DC8 64, 65, 65, 255, 65, 65, 65, 65, 65, 255, 65, 65, 64, 0, 32, 16, 12
   \              0x41 0xFF    
   \              0x41 0x41    
   \              0x41 0x41    
   \              0x41 0xFF    
   \              0x41 0x41    
   \              0x40 0x00    
   \              0x20 0x10    
   \              0x0C         
   \   00000011   0x03 0x00          DC8 3, 0, 0, 0, 0, 0, 63, 0, 0, 0, 0, 68, 68, 252, 68, 68, 2, 130, 66
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x44    
   \              0x44 0xFC    
   \              0x44 0x44    
   \              0x02 0x82    
   \              0x42         
   \   00000024   0xF2 0x0E          DC8 242, 14, 66, 130, 2, 0, 8, 8, 15, 4, 4, 1, 0, 0, 63, 0, 0, 0, 3, 0
   \              0x42 0x82    
   \              0x02 0x00    
   \              0x08 0x08    
   \              0x0F 0x04    
   \              0x04 0x01    
   \              0x00 0x00    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x03 0x00    
   \   00000038   0x00 0xF9          DC8 0, 249, 2, 32, 34, 34, 162, 98, 250, 34, 34, 2, 254, 0, 0, 63, 0, 4
   \              0x02 0x20    
   \              0x22 0x22    
   \              0xA2 0x62    
   \              0xFA 0x22    
   \              0x22 0x02    
   \              0xFE 0x00    
   \              0x00 0x3F    
   \              0x00 0x04    
   \   0000004A   0x02 0x01          DC8 2, 1, 8, 8, 15, 0, 32, 32, 63, 0, 68, 68, 252, 68, 68, 2, 130, 66
   \              0x08 0x08    
   \              0x0F 0x00    
   \              0x20 0x20    
   \              0x3F 0x00    
   \              0x44 0x44    
   \              0xFC 0x44    
   \              0x44 0x02    
   \              0x82 0x42    
   \   0000005C   0xF2 0x0E          DC8 242, 14, 66, 130, 2, 0, 8, 8, 15, 4, 4, 1, 0, 0, 63, 0, 0, 0, 3, 0
   \              0x42 0x82    
   \              0x02 0x00    
   \              0x08 0x08    
   \              0x0F 0x04    
   \              0x04 0x01    
   \              0x00 0x00    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x03 0x00    
   \   00000070   0x00 0xC0          DC8 0, 192, 95, 85, 85, 85, 85, 85, 85, 85, 95, 64, 0, 0, 32, 31, 4, 61
   \              0x5F 0x55    
   \              0x55 0x55    
   \              0x55 0x55    
   \              0x55 0x55    
   \              0x5F 0x40    
   \              0x00 0x00    
   \              0x20 0x1F    
   \              0x04 0x3D    
   \   00000082   0x25 0x25          DC8 37, 37, 5, 13, 21, 21, 45, 36, 36, 0, 0, 255, 1, 9, 17, 33, 193, 49
   \              0x05 0x0D    
   \              0x15 0x15    
   \              0x2D 0x24    
   \              0x24 0x00    
   \              0x00 0xFF    
   \              0x01 0x09    
   \              0x11 0x21    
   \              0xC1 0x31    
   \   00000094   0x0D 0x01          DC8 13, 1, 255, 0, 0, 0, 32, 31, 0, 8, 4, 3, 0, 3, 12, 0, 15, 16, 60, 0
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x04 0x03    
   \              0x00 0x03    
   \              0x0C 0x00    
   \              0x0F 0x10    
   \              0x3C 0x00    
   \   000000A8   0x00 0xFE          DC8 0, 254, 2, 50, 206, 0, 0, 128, 127, 128, 0, 0, 0, 0, 0, 63, 4, 4
   \              0x02 0x32    
   \              0xCE 0x00    
   \              0x00 0x80    
   \              0x7F 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x04 0x04    
   \   000000BA   0x23 0x10          DC8 35, 16, 12, 3, 0, 3, 12, 16, 32, 0, 16, 146, 18, 18, 242, 146, 146
   \              0x0C 0x03    
   \              0x00 0x03    
   \              0x0C 0x10    
   \              0x20 0x00    
   \              0x10 0x92    
   \              0x12 0x12    
   \              0xF2 0x92    
   \              0x92         
   \   000000CB   0x10 0xFF          DC8 16, 255, 16, 17, 22, 16, 0, 16, 31, 16, 16, 15, 8, 8, 8, 1, 6, 8
   \              0x10 0x11    
   \              0x16 0x10    
   \              0x00 0x10    
   \              0x1F 0x10    
   \              0x10 0x0F    
   \              0x08 0x08    
   \              0x08 0x01    
   \              0x06 0x08    
   \   000000DD   0x10 0x3C          DC8 16, 60, 0, 32, 66, 4, 136, 0, 2, 126, 130, 2, 2, 194, 62, 0, 0, 0
   \              0x00 0x20    
   \              0x42 0x04    
   \              0x88 0x00    
   \              0x02 0x7E    
   \              0x82 0x02    
   \              0x02 0xC2    
   \              0x3E 0x00    
   \              0x00 0x00    
   \   000000EF   0x18 0x06          DC8 24, 6, 1, 32, 16, 8, 5, 2, 5, 8, 16, 32, 0, 68, 68, 252, 68, 0, 254
   \              0x01 0x20    
   \              0x10 0x08    
   \              0x05 0x02    
   \              0x05 0x08    
   \              0x10 0x20    
   \              0x00 0x44    
   \              0x44 0xFC    
   \              0x44 0x00    
   \              0xFE         
   \   00000102   0x92 0x92          DC8 146, 146, 254, 146, 146, 254, 0, 0, 8, 8, 7, 4, 32, 36, 36, 36, 63
   \              0xFE 0x92    
   \              0x92 0xFE    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0x07 0x04    
   \              0x20 0x24    
   \              0x24 0x24    
   \              0x3F         
   \   00000113   0x24 0x24          DC8 36, 36, 36, 32, 0, 0, 2, 2, 2, 2, 2, 254, 2, 2, 2, 2, 2, 0, 0, 16
   \              0x24 0x20    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0xFE    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x00    
   \              0x00 0x10    
   \   00000127   0x10 0x10          DC8 16, 16, 16, 16, 16, 31, 16, 16, 16, 16, 16, 16, 0, 16, 16, 16, 16
   \              0x10 0x10    
   \              0x10 0x1F    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x00 0x10    
   \              0x10 0x10    
   \              0x10         
   \   00000138   0x10 0xD0          DC8 16, 208, 63, 208, 16, 16, 16, 16, 16, 0, 32, 32, 16, 8, 6, 1, 0, 1
   \              0x3F 0xD0    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x00    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x06 0x01    
   \              0x00 0x01    
   \   0000014A   0x06 0x08          DC8 6, 8, 16, 32, 32, 0, 56, 8, 73, 74, 72, 73, 74, 72, 204, 74, 9, 8
   \              0x10 0x20    
   \              0x20 0x00    
   \              0x38 0x08    
   \              0x49 0x4A    
   \              0x48 0x49    
   \              0x4A 0x48    
   \              0xCC 0x4A    
   \              0x09 0x08    
   \   0000015C   0x38 0x00          DC8 56, 0, 2, 2, 2, 2, 34, 34, 63, 3, 2, 2, 2, 2, 2, 0
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x22 0x22    
   \              0x3F 0x03    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x00    
    197            64,65,65,255,65,65,65,65,65,255,65,65,64,0,32,16,
    198            12,3,0,0,0,0,0,63,0,0,0,0,/*"开",0*/
    199            
    200            68,68,252,68,68,2,130,66,242,14,66,130,2,0,8,8,
    201            15,4,4,1,0,0,63,0,0,0,3,0,/*"环",1*/
    202            
    203            0,249,2,32,34,34,162,98,250,34,34,2,254,0,0,63,
    204            0,4,2,1,8,8,15,0,32,32,63,0,/*"闭",0*/
    205            
    206            68,68,252,68,68,2,130,66,242,14,66,130,2,0,8,8,
    207            15,4,4,1,0,0,63,0,0,0,3,0,/*"环",1*/
    208            
    209          0,192,95,85,85,85,85,85,85,85,95,64,0,0,32,31,
    210          4,61,37,37,5,13,21,21,45,36,36,0,/*"晨",0*/
    211          
    212          0,255,1,9,17,33,193,49,13,1,255,0,0,0,32,31,
    213          0,8,4,3,0,3,12,0,15,16,60,0,/*"风",1*/
    214          
    215          0,254,2,50,206,0,0,128,127,128,0,0,0,0,0,63,
    216          4,4,35,16,12,3,0,3,12,16,32,0,/*"队",2*/
    217          
    218          
    219          16,146,18,18,242,146,146,16,255,16,17,22,16,0,16,31,
    220          16,16,15,8,8,8,1,6,8,16,60,0,/*"武",0*/
    221          
    222          32,66,4,136,0,2,126,130,2,2,194,62,0,0,0,24,
    223          6,1,32,16,8,5,2,5,8,16,32,0,/*"汉",1*/
    224          
    225          68,68,252,68,0,254,146,146,254,146,146,254,0,0,8,8,
    226          7,4,32,36,36,36,63,36,36,36,32,0,/*"理",2*/
    227          
    228          0,2,2,2,2,2,254,2,2,2,2,2,0,0,16,16,
    229          16,16,16,16,31,16,16,16,16,16,16,0,/*"工",3*/
    230          
    231          16,16,16,16,16,208,63,208,16,16,16,16,16,0,32,32,
    232          16,8,6,1,0,1,6,8,16,32,32,0,/*"大",4*/
    233          
    234          56,8,73,74,72,73,74,72,204,74,9,8,56,0,2,2,
    235          2,2,34,34,63,3,2,2,2,2,2,0,/*"学",5*/
    236          
    237            
    238          };
    239          
    240          //======================================================
    241          // 128X64I液晶底层驱动[8X16]字体库
    242          // 设计者: powerint
    243          // 描  述: [8X16]西文字符的字模数据 (纵向取模,字节倒序)
    244          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
    245          //======================================================

   \                                 In section .rodata, align 4
    246          const uint8 F8X16[]=
   \                     F8X16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \   0000003D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \   0000004F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \   00000061   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \   00000072   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \   0000009B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \   000000AE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \   00000103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \   00000115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \   00000128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \   0000013A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \   0000014C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \   0000015E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \   00000184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \   00000196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \   000001D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \   000001E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \   000001F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \   0000020B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \   0000021D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \   0000022D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \   00000240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \   00000252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   00000263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \   00000276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \   00000289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \   0000029C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \   000002AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \   000002C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \   000002D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \   000002E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \   000002F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \   00000307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \   0000031A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \   0000032A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \   0000033C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \   0000034F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \   00000362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \   00000375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \   00000387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \   0000039A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \   000003AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000003C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \   000003D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \   000003EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000003FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \   00000423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \   00000435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \   00000446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \   00000467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \   0000049A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \   000004AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \   000004BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \   000004CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \   000004DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \   000004F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \   00000501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \   00000512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \   00000521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \   00000542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \   00000576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \   00000586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \   00000597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000005A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \   000005B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \   000005CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    247          {
    248            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
    249            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
    250            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
    251            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
    252            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
    253            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
    254            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
    255            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
    256            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
    257            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
    258            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
    259            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
    260            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
    261            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
    262            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
    263            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
    264            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
    265            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
    266            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
    267            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
    268            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
    269            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
    270            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
    271            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
    272            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
    273            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
    274            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
    275            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
    276            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
    277            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
    278            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
    279            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
    280            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
    281            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
    282            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
    283            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
    284            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
    285            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
    286            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
    287            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
    288            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
    289            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
    290            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
    291            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
    292            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
    293            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
    294            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
    295            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
    296            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
    297            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
    298            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
    299            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
    300            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
    301            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
    302            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
    303            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    304            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    305            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    306            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    307            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    308            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    309            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    310            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    311            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    312            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    313            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    314            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    315            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    316            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    317            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    318            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    319            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    320            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    321            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    322            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    323            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    324            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    325            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    326            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    327            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    328            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    329            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    330            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    331            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    332            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    333            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//uint85
    334            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    335            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    336            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    337            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    338            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    339            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    340            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    341            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    342            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    343            
    344          };
    345          //数据水平，字节垂直

   \                                 In section .data, align 4
    346          uint8 lanzhou96x64[768] = {
   \                     lanzhou96x64:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 192, 96, 96, 32, 32, 32
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0xC0    
   \              0xC0 0x60    
   \              0x60 0x20    
   \              0x20 0x20    
   \   0000006E   0xA0 0xA0          DC8 160, 160, 160, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xA0 0x80    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000080   0x00 0x00          DC8 0, 0, 96, 96, 96, 96, 224, 112, 112, 96, 96, 240, 112, 96, 96, 96
   \              0x60 0x60    
   \              0x60 0x60    
   \              0xE0 0x70    
   \              0x70 0x60    
   \              0x60 0xF0    
   \              0x70 0x60    
   \              0x60 0x60    
   \   00000090   0x60 0x60          DC8 96, 96, 96, 0, 224, 224, 96, 96, 96, 96, 96, 112, 112, 112, 96, 96
   \              0x60 0x00    
   \              0xE0 0xE0    
   \              0x60 0x60    
   \              0x60 0x60    
   \              0x60 0x70    
   \              0x70 0x70    
   \              0x60 0x60    
   \   000000A0   0x60 0x60          DC8 96, 96, 96, 96, 224, 224, 224, 128, 128, 128, 128, 240, 240, 128
   \              0x60 0x60    
   \              0xE0 0xE0    
   \              0xE0 0x80    
   \              0x80 0x80    
   \              0x80 0xF0    
   \              0xF0 0x80    
   \   000000AE   0x80 0x80          DC8 128, 128, 128, 128, 128, 128, 0, 0, 48, 48, 48, 48, 48, 48, 176
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0xB0         
   \   000000BD   0xF0 0x70          DC8 240, 112, 48, 224, 248, 124, 30, 7, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1
   \              0x30 0xE0    
   \              0xF8 0x7C    
   \              0x1E 0x07    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01         
   \   000000D0   0x01 0x03          DC8 1, 3, 135, 143, 207, 255, 254, 254, 252, 252, 240, 224, 128, 0, 0
   \              0x87 0x8F    
   \              0xCF 0xFF    
   \              0xFE 0xFE    
   \              0xFC 0xFC    
   \              0xF0 0xE0    
   \              0x80 0x00    
   \              0x00         
   \   000000DF   0x00 0x00          DC8 0, 0, 0, 0, 0, 63, 0, 255, 0, 0, 8, 14, 31, 58, 98, 194, 2, 2, 2, 0
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x08 0x0E    
   \              0x1F 0x3A    
   \              0x62 0xC2    
   \              0x02 0x02    
   \              0x02 0x00    
   \   000000F3   0x00 0x03          DC8 0, 3, 3, 248, 248, 248, 24, 24, 24, 252, 252, 24, 24, 24, 248, 248
   \              0x03 0xF8    
   \              0xF8 0xF8    
   \              0x18 0x18    
   \              0x18 0xFC    
   \              0xFC 0x18    
   \              0x18 0x18    
   \              0xF8 0xF8    
   \   00000103   0xF8 0x03          DC8 248, 3, 3, 255, 255, 49, 49, 49, 255, 255, 49, 49, 49, 49, 49, 255
   \              0x03 0xFF    
   \              0xFF 0x31    
   \              0x31 0x31    
   \              0xFF 0xFF    
   \              0x31 0x31    
   \              0x31 0x31    
   \              0x31 0xFF    
   \   00000113   0xFF 0x00          DC8 255, 0, 24, 24, 24, 24, 24, 30, 63, 255, 248, 24, 24, 255, 255, 0
   \              0x18 0x18    
   \              0x18 0x18    
   \              0x18 0x1E    
   \              0x3F 0xFF    
   \              0xF8 0x18    
   \              0x18 0xFF    
   \              0xFF 0x00    
   \   00000123   0xC0 0x80          DC8 192, 128, 128, 128, 128, 224, 224, 224, 240, 248, 248, 252, 126
   \              0x80 0x80    
   \              0x80 0xE0    
   \              0xE0 0xE0    
   \              0xF0 0xF8    
   \              0xF8 0xFC    
   \              0x7E         
   \   00000130   0x7F 0x3F          DC8 127, 63, 63, 31, 15, 7, 7, 7, 15, 15, 15, 31, 31, 0, 0, 128, 176
   \              0x3F 0x1F    
   \              0x0F 0x07    
   \              0x07 0x07    
   \              0x0F 0x0F    
   \              0x0F 0x1F    
   \              0x1F 0x00    
   \              0x00 0x80    
   \              0xB0         
   \   00000141   0xB0 0xBF          DC8 176, 191, 183, 179, 179, 179, 191, 191, 179, 179, 191, 191, 179
   \              0xB7 0xB3    
   \              0xB3 0xB3    
   \              0xBF 0xBF    
   \              0xB3 0xB3    
   \              0xBF 0xBF    
   \              0xB3         
   \   0000014E   0xB3 0xB3          DC8 179, 179, 183, 191, 176, 176, 128, 128, 191, 191, 191, 177, 177
   \              0xB7 0xBF    
   \              0xB0 0xB0    
   \              0x80 0x80    
   \              0xBF 0xBF    
   \              0xBF 0xB1    
   \              0xB1         
   \   0000015B   0xB1 0xBF          DC8 177, 191, 191, 177, 177, 177, 191, 191, 191, 128, 128, 135, 135
   \              0xBF 0xB1    
   \              0xB1 0xB1    
   \              0xBF 0xBF    
   \              0xBF 0x80    
   \              0x80 0x87    
   \              0x87         
   \   00000168   0x86 0x86          DC8 134, 134, 134, 191, 191, 182, 182, 182, 182, 182, 183, 183, 176
   \              0x86 0xBF    
   \              0xBF 0xB6    
   \              0xB6 0xB6    
   \              0xB6 0xB6    
   \              0xB7 0xB7    
   \              0xB0         
   \   00000175   0xB0 0xB8          DC8 176, 184, 184, 128, 136, 152, 184, 191, 191, 128, 128, 31, 63, 112
   \              0xB8 0x80    
   \              0x88 0x98    
   \              0xB8 0xBF    
   \              0xBF 0x80    
   \              0x80 0x1F    
   \              0x3F 0x70    
   \   00000183   0xEF 0xDF          DC8 239, 223, 159, 127, 255, 255, 255, 255, 255, 239, 227, 192, 128, 0
   \              0x9F 0x7F    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xEF    
   \              0xE3 0xC0    
   \              0x80 0x00    
   \   00000191   0x80 0x00          DC8 128, 0, 128, 192, 192, 64, 0, 224, 248, 30, 0, 0, 0, 0, 241, 241, 1
   \              0x80 0xC0    
   \              0xC0 0x40    
   \              0x00 0xE0    
   \              0xF8 0x1E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xF1 0xF1    
   \              0x01         
   \   000001A2   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 129, 65, 33, 17, 17, 17, 33, 65, 129, 1, 1
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x81    
   \              0x41 0x21    
   \              0x11 0x11    
   \              0x11 0x21    
   \              0x41 0x81    
   \              0x01 0x01    
   \   000001B4   0xF1 0xF1          DC8 241, 241, 97, 225, 129, 1, 1, 1, 1, 1, 241, 241, 1, 241, 241, 49
   \              0x61 0xE1    
   \              0x81 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0xF1 0xF1    
   \              0x01 0xF1    
   \              0xF1 0x31    
   \   000001C4   0x31 0x31          DC8 49, 49, 97, 193, 129, 1, 1, 49, 49, 49, 49, 49, 49, 49, 49, 241
   \              0x61 0xC1    
   \              0x81 0x01    
   \              0x01 0x31    
   \              0x31 0x31    
   \              0x31 0x31    
   \              0x31 0x31    
   \              0x31 0xF1    
   \   000001D4   0xF1 0x71          DC8 241, 113, 1, 241, 241, 49, 49, 49, 49, 241, 241, 241, 0, 0, 0, 0, 3
   \              0x01 0xF1    
   \              0xF1 0x31    
   \              0x31 0x31    
   \              0x31 0xF1    
   \              0xF1 0xF1    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03         
   \   000001E5   0x03 0x07          DC8 3, 7, 14, 28, 28, 25, 27, 27, 27, 27, 27, 27, 27, 9, 13, 4, 6, 3, 3
   \              0x0E 0x1C    
   \              0x1C 0x19    
   \              0x1B 0x1B    
   \              0x1B 0x1B    
   \              0x1B 0x1B    
   \              0x1B 0x09    
   \              0x0D 0x04    
   \              0x06 0x03    
   \              0x03         
   \   000001F8   0x01 0x00          DC8 1, 0, 0, 0, 0, 0, 0, 255, 255, 0, 0, 0, 0, 0, 0, 0, 255, 255, 8, 8
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFF 0xFF    
   \              0x08 0x08    
   \   0000020C   0x08 0x08          DC8 8, 8, 8, 8, 8, 255, 255, 0, 255, 255, 0, 1, 7, 30, 120, 224, 128, 0
   \              0x08 0x08    
   \              0x08 0xFF    
   \              0xFF 0x00    
   \              0xFF 0xFF    
   \              0x00 0x01    
   \              0x07 0x1E    
   \              0x78 0xE0    
   \              0x80 0x00    
   \   0000021E   0xFF 0xFF          DC8 255, 255, 0, 255, 255, 0, 0, 0, 0, 0, 129, 255, 126, 0, 128, 192
   \              0x00 0xFF    
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x81 0xFF    
   \              0x7E 0x00    
   \              0x80 0xC0    
   \   0000022E   0xE0 0xF0          DC8 224, 240, 56, 30, 7, 3, 1, 0, 0, 255, 255, 0, 0, 0, 0, 255, 255
   \              0x38 0x1E    
   \              0x07 0x03    
   \              0x01 0x00    
   \              0x00 0xFF    
   \              0xFF 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0xFF         
   \   0000023F   0xFF 0x00          DC8 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000255   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 12, 12, 12, 12, 12, 12, 0, 15
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x0F 0x0F    
   \              0x0C 0x0C    
   \              0x0C 0x0C    
   \              0x0C 0x0C    
   \              0x00 0x0F    
   \   00000269   0x0F 0x00          DC8 15, 0, 0, 0, 0, 0, 0, 0, 15, 15, 0, 15, 15, 0, 0, 0, 0, 0, 1, 7, 6
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x0F 0x0F    
   \              0x00 0x0F    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x07    
   \              0x06         
   \   0000027E   0x0F 0x0F          DC8 15, 15, 0, 15, 15, 12, 12, 12, 6, 3, 1, 0, 0, 14, 15, 15, 13, 12
   \              0x00 0x0F    
   \              0x0F 0x0C    
   \              0x0C 0x0C    
   \              0x06 0x03    
   \              0x01 0x00    
   \              0x00 0x0E    
   \              0x0F 0x0F    
   \              0x0D 0x0C    
   \   00000290   0x0C 0x0C          DC8 12, 12, 12, 12, 12, 12, 0, 15, 15, 12, 12, 12, 12, 15, 15, 15, 0, 0
   \              0x0C 0x0C    
   \              0x0C 0x0C    
   \              0x00 0x0F    
   \              0x0F 0x0C    
   \              0x0C 0x0C    
   \              0x0C 0x0F    
   \              0x0F 0x0F    
   \              0x00 0x00    
   \   000002A2   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002B9   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002D0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002E7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002FE   0x00 0x00          DC8 0, 0
    347            /*
    348            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    349            0X00,0X00,0X80,0X80,0XC0,0XC0,0XC0,0X60,0X60,0X60,0X30,0X30,0X30,0X38,0X18,0X18,
    350            0X18,0X18,0X0C,0X0C,0X0C,0X0C,0X0C,0X0E,0X0E,0X0E,0X06,0X06,0X06,0X06,0X06,0X06,
    351            0X06,0X06,0X06,0X06,0X06,0X06,0X06,0X0E,0X0E,0X0C,0X0C,0X0C,0X0C,0X0C,0X1C,0X18,
    352            0X18,0X18,0X18,0X30,0X30,0X30,0X70,0X60,0X60,0XE0,0XC0,0XC0,0X80,0X80,0X00,0X00,
    353            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    354            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XC0,0XE0,0X70,0X30,0X38,0X1C,0X0C,0X06,
    355            0X07,0X03,0X03,0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    356            0X00,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X80,0X80,
    357            0XF0,0XF8,0XF8,0XF0,0X80,0X00,0X00,0X80,0XE0,0XF0,0XF8,0XFC,0X3C,0X1C,0X0C,0X0C,
    358            0X1C,0XFC,0XF8,0XF0,0XE0,0X80,0X00,0X00,0X00,0XC0,0XC0,0XC1,0X01,0X03,0X03,0X07,
    359            0X06,0X0E,0X0C,0X18,0X38,0X70,0X60,0XC0,0X80,0X80,0X00,0X00,0X00,0X00,0X00,0X00,
    360            0X00,0X00,0XC0,0XF0,0X78,0X1E,0X07,0X33,0X31,0X38,0X78,0XFC,0XFE,0XF6,0XC0,0X80,
    361            0X00,0X00,0X00,0X00,0XC0,0XC0,0X80,0X00,0XF8,0XFC,0XDE,0X0E,0X0F,0X1E,0XBE,0XFC,
    362            0XF0,0X06,0XFF,0XFF,0XFF,0XFF,0X03,0X07,0XFF,0XFF,0XFE,0X80,0X1E,0X3F,0XFF,0XFF,
    363            0XF9,0XF9,0XFF,0XFF,0X7F,0X1F,0X0E,0X7F,0XFF,0XFF,0XFF,0XC1,0X80,0XCE,0XCE,0XC6,
    364            0XC0,0XFF,0XFF,0XFF,0XFF,0X3F,0X80,0XFC,0XFC,0XFD,0X7D,0X01,0XC0,0XF8,0XF8,0XF0,
    365            0X70,0X00,0XC0,0X80,0X80,0X80,0X00,0X00,0X01,0X07,0X0E,0X3C,0XF8,0XE0,0X80,0X00,
    366            0X00,0XFE,0XFF,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X0F,0X1F,0X7F,
    367            0XFE,0XFC,0XF0,0XF0,0XF0,0X7F,0X7F,0X3E,0X10,0X03,0X03,0X0F,0X1F,0X1F,0X0F,0X0F,
    368            0X03,0X04,0X07,0X07,0X07,0X07,0X06,0X00,0X07,0X07,0X07,0X0F,0X1E,0X3F,0X7F,0X7F,
    369            0X7F,0X79,0X73,0X3F,0X3F,0X1F,0X0E,0X00,0X01,0X03,0X03,0X07,0X07,0X06,0X0E,0X0F,
    370            0X0F,0X1F,0X3F,0X3D,0X08,0X0C,0X1F,0X1F,0X1F,0X19,0X3C,0X7F,0X7F,0X7F,0XF3,0XF0,
    371            0XFC,0XFE,0X3F,0X1F,0X07,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XCF,0XFF,0X70,
    372            0X00,0X03,0X1F,0X7E,0XF0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    373            0X03,0X03,0X01,0X01,0X00,0X00,0X00,0X00,0XC0,0XC0,0X40,0X40,0X40,0X40,0XF8,0X78,
    374            0X40,0XC0,0X40,0X58,0X58,0X40,0X40,0X40,0X00,0X00,0X00,0X00,0X00,0X80,0X80,0X80,
    375            0X00,0X00,0X00,0X00,0X00,0X00,0X60,0XF0,0XE0,0X20,0X20,0X20,0X20,0X30,0X30,0X38,
    376            0X18,0X10,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,
    377            0X01,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X80,0XE0,0XF8,0X3F,0X0F,0X00,
    378            0X00,0X00,0X00,0X00,0X00,0X03,0X07,0X0E,0X1C,0X38,0X30,0X60,0XE0,0XC0,0X80,0X00,
    379            0X00,0X00,0X00,0X00,0X00,0X00,0X40,0X60,0X60,0X70,0X30,0X18,0X0C,0X07,0X11,0X08,
    380            0X3F,0X7D,0X66,0XE7,0XE3,0XC0,0XC0,0XC0,0XE0,0X60,0X00,0X00,0X00,0X03,0X03,0X03,
    381            0X00,0X00,0X60,0X60,0X60,0X60,0X60,0X7F,0X7F,0X61,0X61,0X61,0X61,0X7F,0X7F,0X61,
    382            0X61,0XE1,0XE0,0XE0,0XC0,0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    383            0X00,0X80,0XC0,0XC0,0XE0,0X70,0X38,0X18,0X0C,0X07,0X03,0X01,0X00,0X00,0X00,0X00,
    384            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X01,0X03,
    385            0X03,0X06,0X06,0X0C,0X0C,0X18,0X18,0X38,0X30,0X30,0X70,0X60,0X60,0XE0,0XC0,0XC0,
    386            0XC0,0XC0,0XC0,0X80,0X80,0X80,0X81,0X80,0X80,0X80,0X80,0X80,0X00,0X00,0X00,0X00,
    387            0X00,0X00,0X00,0X00,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0X80,0XC0,0XC0,
    388            0XC0,0XC0,0XC0,0X60,0X60,0X60,0X30,0X30,0X30,0X18,0X18,0X1C,0X0C,0X0E,0X06,0X07,
    389            0X03,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    390            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    391            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    392            0X00,0X00,0X01,0X01,0X01,0X01,0X01,0X01,0X01,0X03,0X03,0X03,0X03,0X03,0X03,0X03,
    393            0X03,0X03,0X03,0X03,0X03,0X03,0X03,0X01,0X01,0X01,0X01,0X01,0X01,0X01,0X00,0X00,
    394            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    395            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00, */
    396            
    397            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    398            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    399            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    400            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    401            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    402            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    403            0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xC0,0x60,0x60,0x20,0x20,0x20,0xA0,0xA0,
    404            0xA0,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    405            0x00,0x00,0x60,0x60,0x60,0x60,0xE0,0x70,0x70,0x60,0x60,0xF0,0x70,0x60,0x60,0x60,
    406            0x60,0x60,0x60,0x00,0xE0,0xE0,0x60,0x60,0x60,0x60,0x60,0x70,0x70,0x70,0x60,0x60,
    407            0x60,0x60,0x60,0x60,0xE0,0xE0,0xE0,0x80,0x80,0x80,0x80,0xF0,0xF0,0x80,0x80,0x80,
    408            0x80,0x80,0x80,0x80,0x00,0x00,0x30,0x30,0x30,0x30,0x30,0x30,0xB0,0xF0,0x70,0x30,
    409            0xE0,0xF8,0x7C,0x1E,0x07,0x01,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
    410            0x01,0x03,0x87,0x8F,0xCF,0xFF,0xFE,0xFE,0xFC,0xFC,0xF0,0xE0,0x80,0x00,0x00,0x00,
    411            0x00,0x00,0x00,0x00,0x3F,0x00,0xFF,0x00,0x00,0x08,0x0E,0x1F,0x3A,0x62,0xC2,0x02,
    412            0x02,0x02,0x00,0x00,0x03,0x03,0xF8,0xF8,0xF8,0x18,0x18,0x18,0xFC,0xFC,0x18,0x18,
    413            0x18,0xF8,0xF8,0xF8,0x03,0x03,0xFF,0xFF,0x31,0x31,0x31,0xFF,0xFF,0x31,0x31,0x31,
    414            0x31,0x31,0xFF,0xFF,0x00,0x18,0x18,0x18,0x18,0x18,0x1E,0x3F,0xFF,0xF8,0x18,0x18,
    415            0xFF,0xFF,0x00,0xC0,0x80,0x80,0x80,0x80,0xE0,0xE0,0xE0,0xF0,0xF8,0xF8,0xFC,0x7E,
    416            0x7F,0x3F,0x3F,0x1F,0x0F,0x07,0x07,0x07,0x0F,0x0F,0x0F,0x1F,0x1F,0x00,0x00,0x80,
    417            0xB0,0xB0,0xBF,0xB7,0xB3,0xB3,0xB3,0xBF,0xBF,0xB3,0xB3,0xBF,0xBF,0xB3,0xB3,0xB3,
    418            0xB7,0xBF,0xB0,0xB0,0x80,0x80,0xBF,0xBF,0xBF,0xB1,0xB1,0xB1,0xBF,0xBF,0xB1,0xB1,
    419            0xB1,0xBF,0xBF,0xBF,0x80,0x80,0x87,0x87,0x86,0x86,0x86,0xBF,0xBF,0xB6,0xB6,0xB6,
    420            0xB6,0xB6,0xB7,0xB7,0xB0,0xB0,0xB8,0xB8,0x80,0x88,0x98,0xB8,0xBF,0xBF,0x80,0x80,
    421            0x1F,0x3F,0x70,0xEF,0xDF,0x9F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xEF,0xE3,0xC0,0x80,
    422            0x00,0x80,0x00,0x80,0xC0,0xC0,0x40,0x00,0xE0,0xF8,0x1E,0x00,0x00,0x00,0x00,0xF1,
    423            0xF1,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x81,0x41,0x21,0x11,0x11,0x11,0x21,
    424            0x41,0x81,0x01,0x01,0xF1,0xF1,0x61,0xE1,0x81,0x01,0x01,0x01,0x01,0x01,0xF1,0xF1,
    425            0x01,0xF1,0xF1,0x31,0x31,0x31,0x61,0xC1,0x81,0x01,0x01,0x31,0x31,0x31,0x31,0x31,
    426            0x31,0x31,0x31,0xF1,0xF1,0x71,0x01,0xF1,0xF1,0x31,0x31,0x31,0x31,0xF1,0xF1,0xF1,
    427            0x00,0x00,0x00,0x00,0x03,0x03,0x07,0x0E,0x1C,0x1C,0x19,0x1B,0x1B,0x1B,0x1B,0x1B,
    428            0x1B,0x1B,0x09,0x0D,0x04,0x06,0x03,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
    429            0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x08,0x08,0x08,0x08,0x08,0x08,
    430            0x08,0xFF,0xFF,0x00,0xFF,0xFF,0x00,0x01,0x07,0x1E,0x78,0xE0,0x80,0x00,0xFF,0xFF,
    431            0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x81,0xFF,0x7E,0x00,0x80,0xC0,0xE0,0xF0,
    432            0x38,0x1E,0x07,0x03,0x01,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,
    433            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    434            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,
    435            0x0F,0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,
    436            0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x01,0x07,0x06,0x0F,0x0F,
    437            0x00,0x0F,0x0F,0x0C,0x0C,0x0C,0x06,0x03,0x01,0x00,0x00,0x0E,0x0F,0x0F,0x0D,0x0C,
    438            0x0C,0x0C,0x0C,0x0C,0x0C,0x0C,0x00,0x0F,0x0F,0x0C,0x0C,0x0C,0x0C,0x0F,0x0F,0x0F,
    439            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    440            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    441            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    442            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    443            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    444            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    445            
    446          };

   \                                 In section .rodata, align 4
    447          const uint8 LIBLOGO60x58[480] = {
   \                     LIBLOGO60x58:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000017   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xC0         
   \   00000043   0xE0 0xF8          DC8 224, 248, 252, 254, 127, 63, 15, 15, 7, 7, 7, 135, 199, 199, 199
   \              0xFC 0xFE    
   \              0x7F 0x3F    
   \              0x0F 0x0F    
   \              0x07 0x07    
   \              0x07 0x87    
   \              0xC7 0xC7    
   \              0xC7         
   \   00000052   0xE7 0xEF          DC8 231, 239, 255, 255, 255, 239, 231, 231, 231, 231, 231, 239, 255
   \              0xFF 0xFF    
   \              0xFF 0xEF    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xEF    
   \              0xFF         
   \   0000005F   0xFF 0xFF          DC8 255, 255, 239, 231, 231, 231, 231, 231, 247, 7, 15, 63, 127, 255
   \              0xEF 0xE7    
   \              0xE7 0xE7    
   \              0xE7 0xE7    
   \              0xF7 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \   0000006D   0xFE 0xFC          DC8 254, 252, 240, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 220, 223
   \              0xF0 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xD8 0xDC    
   \              0xDF         
   \   0000007E   0xDF 0xDF          DC8 223, 223, 223, 215, 1, 0, 0, 0, 0, 0, 0, 62, 127, 255, 255, 227
   \              0xDF 0xD7    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3E    
   \              0x7F 0xFF    
   \              0xFF 0xE3    
   \   0000008E   0xE1 0xE1          DC8 225, 225, 255, 255, 255, 224, 224, 224, 224, 224, 224, 224, 255
   \              0xFF 0xFF    
   \              0xFF 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xFF         
   \   0000009B   0xFF 0xFF          DC8 255, 255, 224, 224, 224, 224, 193, 131, 7, 0, 0, 0, 0, 1, 215, 223
   \              0xE0 0xE0    
   \              0xE0 0xE0    
   \              0xC1 0x83    
   \              0x07 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0xD7 0xDF    
   \   000000AB   0xDF 0xDF          DC8 223, 223, 223, 220, 216, 0, 0, 0, 0, 0, 0, 0, 1, 3, 15, 31, 63, 255
   \              0xDF 0xDC    
   \              0xD8 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x03    
   \              0x0F 0x1F    
   \              0x3F 0xFF    
   \   000000BD   0xFF 0xFE          DC8 255, 254, 248, 240, 224, 192, 128, 0, 0, 248, 240, 224, 192, 192
   \              0xF8 0xF0    
   \              0xE0 0xC0    
   \              0x80 0x00    
   \              0x00 0xF8    
   \              0xF0 0xE0    
   \              0xC0 0xC0    
   \   000000CB   0xC0 0xFF          DC8 192, 255, 255, 255, 192, 192, 192, 192, 192, 192, 192, 255, 255
   \              0xFF 0xFF    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xFF    
   \              0xFF         
   \   000000D8   0xFF 0xC0          DC8 255, 192, 224, 225, 243, 255, 127, 63, 0, 192, 224, 248, 254, 255
   \              0xE0 0xE1    
   \              0xF3 0xFF    
   \              0x7F 0x3F    
   \              0x00 0xC0    
   \              0xE0 0xF8    
   \              0xFE 0xFF    
   \   000000E6   0xFF 0xFF          DC8 255, 255, 63, 31, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
   \              0x3F 0x1F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01         
   \   000000FB   0x07 0x0F          DC8 7, 15, 63, 127, 255, 254, 252, 249, 243, 193, 129, 1, 1, 255, 255
   \              0x3F 0x7F    
   \              0xFF 0xFE    
   \              0xFC 0xF9    
   \              0xF3 0xC1    
   \              0x81 0x01    
   \              0x01 0xFF    
   \              0xFF         
   \   0000010A   0xFF 0x01          DC8 255, 1, 1, 1, 1, 1, 1, 1, 255, 255, 255, 3, 1, 129, 192, 240, 252
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0xFF 0xFF    
   \              0xFF 0x03    
   \              0x01 0x81    
   \              0xC0 0xF0    
   \              0xFC         
   \   0000011B   0xFE 0xFF          DC8 254, 255, 255, 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0x7F    
   \              0x3F 0x0F    
   \              0x07 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000012E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 63, 127, 255
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x3F    
   \              0x7F 0xFF    
   \   00000142   0xFF 0xFF          DC8 255, 255, 251, 243, 227, 195, 3, 3, 3, 3, 3, 131, 195, 243, 243
   \              0xFB 0xF3    
   \              0xE3 0xC3    
   \              0x03 0x03    
   \              0x03 0x03    
   \              0x03 0x83    
   \              0xC3 0xF3    
   \              0xF3         
   \   00000151   0xFB 0xFF          DC8 251, 255, 255, 255, 127, 63, 15, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xFF 0xFF    
   \              0x7F 0x3F    
   \              0x0F 0x03    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000017B   0x00 0x00          DC8 0, 0, 0, 3, 7, 7, 31, 63, 127, 255, 254, 252, 252, 254, 255, 255
   \              0x00 0x03    
   \              0x07 0x07    
   \              0x1F 0x3F    
   \              0x7F 0xFF    
   \              0xFE 0xFC    
   \              0xFC 0xFE    
   \              0xFF 0xFF    
   \   0000018B   0x7F 0x3F          DC8 127, 63, 15, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x0F 0x07    
   \              0x03 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001B7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 7, 15, 15, 7, 1, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0F 0x0F    
   \              0x07 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000001CD   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    448            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    449            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    450            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    451            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    452            0X00,0X00,0XC0,0XE0,0XF8,0XFC,0XFE,0X7F,0X3F,0X0F,0X0F,0X07,0X07,0X07,0X87,0XC7,
    453            0XC7,0XC7,0XE7,0XEF,0XFF,0XFF,0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XEF,0XFF,0XFF,
    454            0XFF,0XEF,0XE7,0XE7,0XE7,0XE7,0XE7,0XF7,0X07,0X0F,0X3F,0X7F,0XFF,0XFE,0XFC,0XF0,
    455            0XC0,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0XD8,0XDC,0XDF,0XDF,0XDF,
    456            0XDF,0XD7,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X3E,0X7F,0XFF,0XFF,0XE3,0XE1,0XE1,
    457            0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XE0,0XFF,0XFF,0XFF,0XE0,0XE0,0XE0,
    458            0XE0,0XC1,0X83,0X07,0X00,0X00,0X00,0X00,0X01,0XD7,0XDF,0XDF,0XDF,0XDF,0XDC,0XD8,
    459            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X03,0X0F,0X1F,0X3F,0XFF,0XFF,0XFE,0XF8,
    460            0XF0,0XE0,0XC0,0X80,0X00,0X00,0XF8,0XF0,0XE0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,
    461            0XC0,0XC0,0XC0,0XC0,0XC0,0XC0,0XFF,0XFF,0XFF,0XC0,0XE0,0XE1,0XF3,0XFF,0X7F,0X3F,
    462            0X00,0XC0,0XE0,0XF8,0XFE,0XFF,0XFF,0XFF,0X3F,0X1F,0X07,0X01,0X00,0X00,0X00,0X00,
    463            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X01,0X07,0X0F,0X3F,0X7F,0XFF,
    464            0XFE,0XFC,0XF9,0XF3,0XC1,0X81,0X01,0X01,0XFF,0XFF,0XFF,0X01,0X01,0X01,0X01,0X01,
    465            0X01,0X01,0XFF,0XFF,0XFF,0X03,0X01,0X81,0XC0,0XF0,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,
    466            0X0F,0X07,0X03,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    467            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,0X0F,0X3F,
    468            0X7F,0XFF,0XFF,0XFF,0XFB,0XF3,0XE3,0XC3,0X03,0X03,0X03,0X03,0X03,0X83,0XC3,0XF3,
    469            0XF3,0XFB,0XFF,0XFF,0XFF,0X7F,0X3F,0X0F,0X03,0X01,0X00,0X00,0X00,0X00,0X00,0X00,
    470            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    471            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X03,0X07,
    472            0X07,0X1F,0X3F,0X7F,0XFF,0XFE,0XFC,0XFC,0XFE,0XFF,0XFF,0X7F,0X3F,0X0F,0X07,0X03,
    473            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    474            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    475            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    476            0X00,0X03,0X07,0X0F,0X0F,0X07,0X01,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    477            0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,0X00,
    478          };

   \                                 In section .data, align 4
    479          uint8 LANDZO_LOGO[300] ={
   \                     LANDZO_LOGO:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 128, 192, 192, 96, 48, 16, 24, 8, 4, 20, 16
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0xC0    
   \              0xC0 0x60    
   \              0x30 0x10    
   \              0x18 0x08    
   \              0x04 0x14    
   \              0x10         
   \   00000013   0x1A 0x18          DC8 26, 24, 24, 28, 28, 28, 28, 60, 60, 60, 60, 124, 124, 252, 252, 248
   \              0x18 0x1C    
   \              0x1C 0x1C    
   \              0x1C 0x3C    
   \              0x3C 0x3C    
   \              0x3C 0x7C    
   \              0x7C 0xFC    
   \              0xFC 0xF8    
   \   00000023   0xF8 0xF0          DC8 248, 240, 240, 224, 224, 192, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xF0 0xE0    
   \              0xE0 0xC0    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000035   0xC0 0xF0          DC8 192, 240, 248, 126, 31, 7, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xF8 0x7E    
   \              0x1F 0x07    
   \              0x03 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000049   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 143, 255, 255, 255, 255, 255
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x03 0x8F    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF         
   \   0000005C   0xFF 0xFE          DC8 255, 254, 252, 248, 224, 128, 0, 0, 0, 240, 255, 255, 255, 7, 0
   \              0xFC 0xF8    
   \              0xE0 0x80    
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0xFF 0xFF    
   \              0xFF 0x07    
   \              0x00         
   \   0000006B   0xF8 0xF8          DC8 248, 248, 240, 240, 224, 224, 224, 192, 192, 192, 192, 192, 192
   \              0xF0 0xF0    
   \              0xE0 0xE0    
   \              0xE0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0         
   \   00000078   0xC0 0xC0          DC8 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 240, 240, 248
   \              0xC0 0xC0    
   \              0xC0 0xC0    
   \              0xC0 0xE0    
   \              0xE0 0xE0    
   \              0xF0 0xF0    
   \              0xF8         
   \   00000085   0xF8 0xFC          DC8 248, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
   \              0xFE 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF         
   \   00000092   0xFF 0xFF          DC8 255, 255, 248, 0, 0, 15, 255, 255, 255, 248, 192, 15, 127, 255, 255
   \              0xF8 0x00    
   \              0x00 0x0F    
   \              0xFF 0xFF    
   \              0xFF 0xF8    
   \              0xC0 0x0F    
   \              0x7F 0xFF    
   \              0xFF         
   \   000000A1   0xFF 0xFF          DC8 255, 255, 255, 255, 255, 255, 255, 255, 63, 31, 15, 7, 3, 3, 1, 1
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0x3F 0x1F    
   \              0x0F 0x07    
   \              0x03 0x03    
   \              0x01 0x01    
   \   000000B1   0x01 0x00          DC8 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 3, 3, 7, 3, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x01 0x01    
   \              0x03 0x03    
   \              0x07 0x03    
   \              0x00         
   \   000000C8   0x00 0x00          DC8 0, 0, 0, 3, 15, 31, 127, 254, 252, 241, 231, 207, 159, 63, 127, 255
   \              0x00 0x03    
   \              0x0F 0x1F    
   \              0x7F 0xFE    
   \              0xFC 0xF1    
   \              0xE7 0xCF    
   \              0x9F 0x3F    
   \              0x7F 0xFF    
   \   000000D8   0xFF 0xFF          DC8 255, 255, 255, 252, 240, 224, 224, 192, 128, 128, 128, 0, 0, 0, 0
   \              0xFF 0xFC    
   \              0xF0 0xE0    
   \              0xE0 0xC0    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000E7   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000FD   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 3, 3, 7, 15, 15, 30, 30, 28, 57, 57, 59, 115, 115
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x03 0x03    
   \              0x07 0x0F    
   \              0x0F 0x1E    
   \              0x1E 0x1C    
   \              0x39 0x39    
   \              0x3B 0x73    
   \              0x73         
   \   00000110   0x77 0x67          DC8 119, 103, 103, 103, 103, 103, 103, 39, 39, 54, 54, 22, 18, 10, 10
   \              0x67 0x67    
   \              0x67 0x67    
   \              0x67 0x27    
   \              0x27 0x36    
   \              0x36 0x16    
   \              0x12 0x0A    
   \              0x0A         
   \   0000011F   0x04 0x04          DC8 4, 4, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    480            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0xC0,0x60,0x30,0x10,0x18,0x08,
    481            0x04,0x14,0x10,0x1A,0x18,0x18,0x1C,0x1C,0x1C,0x1C,0x3C,0x3C,0x3C,0x3C,0x7C,0x7C,
    482            0xFC,0xFC,0xF8,0xF8,0xF0,0xF0,0xE0,0xE0,0xC0,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
    483            0x00,0x00,0x00,0x00,0x00,0xC0,0xF0,0xF8,0x7E,0x1F,0x07,0x03,0x00,0x00,0x00,0x00,
    484            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    485            0x00,0x00,0x00,0x01,0x01,0x03,0x8F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFC,0xF8,
    486            0xE0,0x80,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0xF8,0xF8,0xF0,0xF0,0xE0,
    487            0xE0,0xE0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xC0,0xE0,
    488            0xE0,0xE0,0xF0,0xF0,0xF8,0xF8,0xFC,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
    489            0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xF8,0xC0,0x0F,0x7F,0xFF,
    490            0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x1F,0x0F,0x07,0x03,0x03,0x01,
    491            0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    492            0x01,0x01,0x01,0x03,0x03,0x07,0x03,0x00,0x00,0x00,0x00,0x03,0x0F,0x1F,0x7F,0xFE,
    493            0xFC,0xF1,0xE7,0xCF,0x9F,0x3F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFC,0xF0,0xE0,0xE0,0xC0,
    494            0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    495            0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    496            0x00,0x00,0x01,0x03,0x03,0x07,0x0F,0x0F,0x1E,0x1E,0x1C,0x39,0x39,0x3B,0x73,0x73,
    497            0x77,0x67,0x67,0x67,0x67,0x67,0x67,0x27,0x27,0x36,0x36,0x16,0x12,0x0A,0x0A,0x04,
    498            0x04,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
    499          };
    500          

   \                                 In section .text, align 2, keep-with-next
    501          void Dly_ms(uint16 ms)
    502          {
    503            uint16 ii,jj;
    504            if (ms<1) ms=1;
   \                     Dly_ms: (+1)
   \   00000000   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD101             BNE.N    ??Dly_ms_0
   \   00000006   0x2301             MOVS     R3,#+1
   \   00000008   0x0018             MOVS     R0,R3
    505            ms = ms*12 ;
   \                     ??Dly_ms_0: (+1)
   \   0000000A   0x230C             MOVS     R3,#+12
   \   0000000C   0xFB10 0xF003      SMULBB   R0,R0,R3
    506            for(ii=0;ii<ms;ii++)
   \   00000010   0x2300             MOVS     R3,#+0
   \   00000012   0x0019             MOVS     R1,R3
   \                     ??Dly_ms_1: (+1)
   \   00000014   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000016   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000018   0x4281             CMP      R1,R0
   \   0000001A   0xD20A             BCS.N    ??Dly_ms_2
    507              for(jj=0;jj<1335;jj++);  //16MHz--1ms
   \   0000001C   0x2300             MOVS     R3,#+0
   \   0000001E   0x001A             MOVS     R2,R3
   \                     ??Dly_ms_3: (+1)
   \   00000020   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000022   0xF240 0x5337      MOVW     R3,#+1335
   \   00000026   0x429A             CMP      R2,R3
   \   00000028   0xDA01             BGE.N    ??Dly_ms_4
   \   0000002A   0x1C52             ADDS     R2,R2,#+1
   \   0000002C   0xE7F8             B.N      ??Dly_ms_3
   \                     ??Dly_ms_4: (+1)
   \   0000002E   0x1C49             ADDS     R1,R1,#+1
   \   00000030   0xE7F0             B.N      ??Dly_ms_1
    508            //   for(jj=0;jj<4006;jj++);  //48MHz--1ms
    509            //for(jj=0;jj<5341;jj++);    //64MHz--1ms
    510          }
   \                     ??Dly_ms_2: (+1)
   \   00000032   0x4770             BX       LR               ;; return
    511          

   \                                 In section .text, align 4, keep-with-next
    512          void OLED_WrDat(uint8 data)
    513          {
   \                     OLED_WrDat: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    514            uint8 i=8;
   \   00000004   0x2508             MOVS     R5,#+8
    515            //LCD_CS=0;;
    516            OLED_DC_SET;
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x211B             MOVS     R1,#+27
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    517            OLED_DO_RESET;
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x2118             MOVS     R1,#+24
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
    518            //asm("nop");
    519            while(i--)
   \                     ??OLED_WrDat_0: (+1)
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0x1E45             SUBS     R5,R0,#+1
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD01D             BEQ.N    ??OLED_WrDat_1
    520            {
    521              if(data&0x80)
   \   00000028   0x0620             LSLS     R0,R4,#+24
   \   0000002A   0xD506             BPL.N    ??OLED_WrDat_2
    522              {
    523                OLED_DI_SET;
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x2119             MOVS     R1,#+25
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000038   0xE005             B.N      ??OLED_WrDat_3
    524              }
    525              else
    526              {
    527                OLED_DI_RESET;
   \                     ??OLED_WrDat_2: (+1)
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x2119             MOVS     R1,#+25
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Output_b
    528              }
    529              OLED_DO_SET;
   \                     ??OLED_WrDat_3: (+1)
   \   00000046   0x2201             MOVS     R2,#+1
   \   00000048   0x2118             MOVS     R1,#+24
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    530              asm("nop");;
   \   00000052   0xBF00             nop
    531              //asm("nop");
    532              OLED_DO_RESET;;
   \   00000054   0x2200             MOVS     R2,#+0
   \   00000056   0x2118             MOVS     R1,#+24
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000005C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    533              data<<=1;
   \   00000060   0x0064             LSLS     R4,R4,#+1
   \   00000062   0xE7DC             B.N      ??OLED_WrDat_0
    534            }
    535            //LCD_CS=1;
    536          }
   \                     ??OLED_WrDat_1: (+1)
   \   00000064   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
    537          void OLED_WrCmd(uint8 cmd)
    538          {
   \                     OLED_WrCmd: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    539            uint8 i=8;
   \   00000004   0x2508             MOVS     R5,#+8
    540            
    541            //LCD_CS=0;;
    542           OLED_DC_RESET;
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x211B             MOVS     R1,#+27
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    543            OLED_DO_RESET;
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x2118             MOVS     R1,#+24
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
    544            //asm("nop");
    545            while(i--)
   \                     ??OLED_WrCmd_0: (+1)
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0x1E45             SUBS     R5,R0,#+1
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD01D             BEQ.N    ??OLED_WrCmd_1
    546            {
    547              if(cmd&0x80)
   \   00000028   0x0620             LSLS     R0,R4,#+24
   \   0000002A   0xD506             BPL.N    ??OLED_WrCmd_2
    548              {
    549                OLED_DI_SET;
   \   0000002C   0x2201             MOVS     R2,#+1
   \   0000002E   0x2119             MOVS     R1,#+25
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   00000034   0x.... 0x....      BL       LPLD_GPIO_Output_b
   \   00000038   0xE005             B.N      ??OLED_WrCmd_3
    550              }
    551              else
    552              {
    553                OLED_DI_RESET;
   \                     ??OLED_WrCmd_2: (+1)
   \   0000003A   0x2200             MOVS     R2,#+0
   \   0000003C   0x2119             MOVS     R1,#+25
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   00000042   0x.... 0x....      BL       LPLD_GPIO_Output_b
    554              }
    555              OLED_DO_SET;
   \                     ??OLED_WrCmd_3: (+1)
   \   00000046   0x2201             MOVS     R2,#+1
   \   00000048   0x2118             MOVS     R1,#+24
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000004E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    556              asm("nop");
   \   00000052   0xBF00             nop
    557              //asm("nop");
    558              OLED_DO_RESET;
   \   00000054   0x2200             MOVS     R2,#+0
   \   00000056   0x2118             MOVS     R1,#+24
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000005C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    559              cmd<<=1;
   \   00000060   0x0064             LSLS     R4,R4,#+1
   \   00000062   0xE7DC             B.N      ??OLED_WrCmd_0
    560            }
    561            
    562          }
   \                     ??OLED_WrCmd_1: (+1)
   \   00000064   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    563          void OLED_Set_Pos(uint8 x, uint8 y)
    564          {
   \                     OLED_Set_Pos: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    565            OLED_WrCmd(0xb0+y);
   \   00000006   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       OLED_WrCmd
    566            OLED_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x0920             LSRS     R0,R4,#+4
   \   00000014   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       OLED_WrCmd
    567            OLED_WrCmd((x&0x0f)|0x01);
   \   0000001E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000022   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x.... 0x....      BL       OLED_WrCmd
    568          }
   \   0000002C   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    569          void OLED_Fill(uint8 bmp_data)
    570          {
   \                     OLED_Fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    571            uint8 y,x;
    572            
    573            for(y=0;y<8;y++)
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x0005             MOVS     R5,R0
   \                     ??OLED_Fill_0: (+1)
   \   00000008   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000A   0x2D08             CMP      R5,#+8
   \   0000000C   0xDA17             BGE.N    ??OLED_Fill_1
    574            {
    575              OLED_WrCmd(0xb0+y);
   \   0000000E   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       OLED_WrCmd
    576              OLED_WrCmd(0x01);
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       OLED_WrCmd
    577              OLED_WrCmd(0x10);
   \   0000001E   0x2010             MOVS     R0,#+16
   \   00000020   0x.... 0x....      BL       OLED_WrCmd
    578              for(x=0;x<X_WIDTH;x++)
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x0006             MOVS     R6,R0
   \                     ??OLED_Fill_2: (+1)
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0x2E80             CMP      R6,#+128
   \   0000002C   0xDA05             BGE.N    ??OLED_Fill_3
    579                OLED_WrDat(bmp_data);
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x.... 0x....      BL       OLED_WrDat
   \   00000036   0x1C76             ADDS     R6,R6,#+1
   \   00000038   0xE7F6             B.N      ??OLED_Fill_2
    580            }
   \                     ??OLED_Fill_3: (+1)
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \   0000003C   0xE7E4             B.N      ??OLED_Fill_0
    581          }
   \                     ??OLED_Fill_1: (+1)
   \   0000003E   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    582          void OLED_CLS(void)
    583          {
   \                     OLED_CLS: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    584            uint8 y,x;
    585            for(y=0;y<8;y++)
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x0004             MOVS     R4,R0
   \                     ??OLED_CLS_0: (+1)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C08             CMP      R4,#+8
   \   0000000A   0xDA16             BGE.N    ??OLED_CLS_1
    586            {
    587              OLED_WrCmd(0xb0+y);
   \   0000000C   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       OLED_WrCmd
    588              OLED_WrCmd(0x01);
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x.... 0x....      BL       OLED_WrCmd
    589              OLED_WrCmd(0x10);
   \   0000001C   0x2010             MOVS     R0,#+16
   \   0000001E   0x.... 0x....      BL       OLED_WrCmd
    590              for(x=0;x<X_WIDTH;x++)
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x0005             MOVS     R5,R0
   \                     ??OLED_CLS_2: (+1)
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0x2D80             CMP      R5,#+128
   \   0000002A   0xDA04             BGE.N    ??OLED_CLS_3
    591                OLED_WrDat(0);
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       OLED_WrDat
   \   00000032   0x1C6D             ADDS     R5,R5,#+1
   \   00000034   0xE7F7             B.N      ??OLED_CLS_2
    592            }
   \                     ??OLED_CLS_3: (+1)
   \   00000036   0x1C64             ADDS     R4,R4,#+1
   \   00000038   0xE7E5             B.N      ??OLED_CLS_0
    593          }
   \                     ??OLED_CLS_1: (+1)
   \   0000003A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    594          void OLED_DLY_ms(uint16 ms)
    595          {
    596            uint16 a;
    597            while(ms)
   \                     OLED_DLY_ms: (+1)
   \                     ??OLED_DLY_ms_0: (+1)
   \   00000000   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD009             BEQ.N    ??OLED_DLY_ms_1
    598            {
    599              a=16000;
   \   00000006   0xF44F 0x527A      MOV      R2,#+16000
   \   0000000A   0x0011             MOVS     R1,R2
    600              while(a--);
   \                     ??OLED_DLY_ms_2: (+1)
   \   0000000C   0x000A             MOVS     R2,R1
   \   0000000E   0x1E51             SUBS     R1,R2,#+1
   \   00000010   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000012   0x2A00             CMP      R2,#+0
   \   00000014   0xD1FA             BNE.N    ??OLED_DLY_ms_2
    601              ms--;
   \   00000016   0x1E40             SUBS     R0,R0,#+1
   \   00000018   0xE7F2             B.N      ??OLED_DLY_ms_0
    602            }
    603            return;
   \                     ??OLED_DLY_ms_1: (+1)
   \   0000001A   0x4770             BX       LR               ;; return
    604          }
    605          

   \                                 In section .text, align 2, keep-with-next
    606          void OLED_Init(void)
    607          {
   \                     OLED_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    608            OLEDIO_init();
   \   00000002   0x.... 0x....      BL       OLEDIO_init
    609            
    610            OLED_DO_SET;
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0x2118             MOVS     R1,#+24
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000000E   0x.... 0x....      BL       LPLD_GPIO_Output_b
    611            //LCD_CS=1;	//预制SLK和SS为高电平
    612            OLED_CS_RESET; ///使能信号端，拉低时正常使用
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x211C             MOVS     R1,#+28
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   0000001A   0x.... 0x....      BL       LPLD_GPIO_Output_b
    613            OLED_RST_RESET;
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x211A             MOVS     R1,#+26
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   00000026   0x.... 0x....      BL       LPLD_GPIO_Output_b
    614            OLED_DLY_ms(50);
   \   0000002A   0x2032             MOVS     R0,#+50
   \   0000002C   0x.... 0x....      BL       OLED_DLY_ms
    615            OLED_RST_SET;
   \   00000030   0x2201             MOVS     R2,#+1
   \   00000032   0x211A             MOVS     R1,#+26
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable12_1  ;; 0x400ff100
   \   00000038   0x.... 0x....      BL       LPLD_GPIO_Output_b
    616            
    617            OLED_WrCmd(0xae);//--turn off oled panel
   \   0000003C   0x20AE             MOVS     R0,#+174
   \   0000003E   0x.... 0x....      BL       OLED_WrCmd
    618            OLED_WrCmd(0x00);//---set low column address
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       OLED_WrCmd
    619            OLED_WrCmd(0x10);//---set high column address
   \   00000048   0x2010             MOVS     R0,#+16
   \   0000004A   0x.... 0x....      BL       OLED_WrCmd
    620            OLED_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
   \   0000004E   0x2040             MOVS     R0,#+64
   \   00000050   0x.... 0x....      BL       OLED_WrCmd
    621            OLED_WrCmd(0x81);//--set contrast control register
   \   00000054   0x2081             MOVS     R0,#+129
   \   00000056   0x.... 0x....      BL       OLED_WrCmd
    622            OLED_WrCmd(0xcf); // Set SEG Output Current Brightness
   \   0000005A   0x20CF             MOVS     R0,#+207
   \   0000005C   0x.... 0x....      BL       OLED_WrCmd
    623            OLED_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
   \   00000060   0x20A1             MOVS     R0,#+161
   \   00000062   0x.... 0x....      BL       OLED_WrCmd
    624            OLED_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
   \   00000066   0x20C8             MOVS     R0,#+200
   \   00000068   0x.... 0x....      BL       OLED_WrCmd
    625            OLED_WrCmd(0xa6);//--set normal display
   \   0000006C   0x20A6             MOVS     R0,#+166
   \   0000006E   0x.... 0x....      BL       OLED_WrCmd
    626            OLED_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
   \   00000072   0x20A8             MOVS     R0,#+168
   \   00000074   0x.... 0x....      BL       OLED_WrCmd
    627            OLED_WrCmd(0x3f);//--1/64 duty
   \   00000078   0x203F             MOVS     R0,#+63
   \   0000007A   0x.... 0x....      BL       OLED_WrCmd
    628            OLED_WrCmd(0xd3);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
   \   0000007E   0x20D3             MOVS     R0,#+211
   \   00000080   0x.... 0x....      BL       OLED_WrCmd
    629            OLED_WrCmd(0x00);//-not offset
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x.... 0x....      BL       OLED_WrCmd
    630            OLED_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
   \   0000008A   0x20D5             MOVS     R0,#+213
   \   0000008C   0x.... 0x....      BL       OLED_WrCmd
    631            OLED_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
   \   00000090   0x2080             MOVS     R0,#+128
   \   00000092   0x.... 0x....      BL       OLED_WrCmd
    632            OLED_WrCmd(0xd9);//--set pre-charge period
   \   00000096   0x20D9             MOVS     R0,#+217
   \   00000098   0x.... 0x....      BL       OLED_WrCmd
    633            OLED_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   0000009C   0x20F1             MOVS     R0,#+241
   \   0000009E   0x.... 0x....      BL       OLED_WrCmd
    634            OLED_WrCmd(0xda);//--set com pins hardware configuration
   \   000000A2   0x20DA             MOVS     R0,#+218
   \   000000A4   0x.... 0x....      BL       OLED_WrCmd
    635            OLED_WrCmd(0x12);
   \   000000A8   0x2012             MOVS     R0,#+18
   \   000000AA   0x.... 0x....      BL       OLED_WrCmd
    636            OLED_WrCmd(0xdb);//--set vcomh
   \   000000AE   0x20DB             MOVS     R0,#+219
   \   000000B0   0x.... 0x....      BL       OLED_WrCmd
    637            OLED_WrCmd(0x40);//Set VCOM Deselect Level
   \   000000B4   0x2040             MOVS     R0,#+64
   \   000000B6   0x.... 0x....      BL       OLED_WrCmd
    638            OLED_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
   \   000000BA   0x2020             MOVS     R0,#+32
   \   000000BC   0x.... 0x....      BL       OLED_WrCmd
    639            OLED_WrCmd(0x02);//
   \   000000C0   0x2002             MOVS     R0,#+2
   \   000000C2   0x.... 0x....      BL       OLED_WrCmd
    640            OLED_WrCmd(0x8d);//--set Charge Pump enable/disable
   \   000000C6   0x208D             MOVS     R0,#+141
   \   000000C8   0x.... 0x....      BL       OLED_WrCmd
    641            OLED_WrCmd(0x14);//--set(0x10) disable
   \   000000CC   0x2014             MOVS     R0,#+20
   \   000000CE   0x.... 0x....      BL       OLED_WrCmd
    642            OLED_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
   \   000000D2   0x20A4             MOVS     R0,#+164
   \   000000D4   0x.... 0x....      BL       OLED_WrCmd
    643            OLED_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7)
   \   000000D8   0x20A6             MOVS     R0,#+166
   \   000000DA   0x.... 0x....      BL       OLED_WrCmd
    644            OLED_WrCmd(0xaf);//--turn on oled panel
   \   000000DE   0x20AF             MOVS     R0,#+175
   \   000000E0   0x.... 0x....      BL       OLED_WrCmd
    645            OLED_Fill(0x00);  //初始清屏
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x.... 0x....      BL       OLED_Fill
    646            OLED_Set_Pos(0,0);
   \   000000EA   0x2100             MOVS     R1,#+0
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x.... 0x....      BL       OLED_Set_Pos
    647            
    648          }
   \   000000F2   0xBD01             POP      {R0,PC}          ;; return
    649          //==============================================================
    650          //函数名： void LCD_PutPixel(uint8 x,uint8 y)
    651          //功能描述：绘制一个点（x,y）
    652          //参数：真实坐标值(x,y),x的范围0～127，y的范围0～64
    653          //返回：无
    654          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    655          void OLED_PutPixel(uint8 x,uint8 y)
    656          {
   \                     OLED_PutPixel: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    657            uint8 data1;  //data1当前点的数据
    658            
    659            OLED_Set_Pos(x,y);
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       OLED_Set_Pos
    660            data1 = 0x01<<(y%8);
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2108             MOVS     R1,#+8
   \   00000018   0xFB95 0xF2F1      SDIV     R2,R5,R1
   \   0000001C   0xFB02 0x5211      MLS      R2,R2,R1,R5
   \   00000020   0x4090             LSLS     R0,R0,R2
   \   00000022   0x0006             MOVS     R6,R0
    661            OLED_WrCmd(0xb0+(y>>3));
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x08E8             LSRS     R0,R5,#+3
   \   00000028   0x3850             SUBS     R0,R0,#+80
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       OLED_WrCmd
    662            OLED_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x0920             LSRS     R0,R4,#+4
   \   00000034   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       OLED_WrCmd
    663            OLED_WrCmd((x&0x0f)|0x00);
   \   0000003E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000042   0x.... 0x....      BL       OLED_WrCmd
    664            OLED_WrDat(data1);
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x.... 0x....      BL       OLED_WrDat
    665          }
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    666          //==============================================================
    667          //函数名： void LCD_Rectangle(uint8 x1,uint8 y1,
    668          //                   uint8 x2,uint8 y2,uint8 color,uint8 gif)
    669          //功能描述：绘制一个实心矩形
    670          //参数：左上角坐标（x1,y1）,右下角坐标（x2，y2）
    671          //      其中x1、x2的范围0～127，y1，y2的范围0～63，即真实坐标值
    672          //返回：无
    673          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    674          void OLED_Rectangle(uint8 x1,uint8 y1,uint8 x2,uint8 y2,uint8 gif)
    675          {
   \                     OLED_Rectangle: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
   \   0000000C   0x9C08             LDR      R4,[SP, #+32]
    676            uint8 n;
    677            
    678            OLED_Set_Pos(x1,y1>>3);
   \   0000000E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000010   0x08F1             LSRS     R1,R6,#+3
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       OLED_Set_Pos
    679            for(n=x1;n<=x2;n++)
   \   0000001A   0x46A9             MOV      R9,R5
   \                     ??OLED_Rectangle_0: (+1)
   \   0000001C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000022   0x454F             CMP      R7,R9
   \   00000024   0xD313             BCC.N    ??OLED_Rectangle_1
    680            {
    681              OLED_WrDat(0x01<<(y1%8));
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0x2108             MOVS     R1,#+8
   \   0000002C   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000030   0xFB02 0x6211      MLS      R2,R2,R1,R6
   \   00000034   0x4090             LSLS     R0,R0,R2
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x.... 0x....      BL       OLED_WrDat
    682              if(gif == 1) 	OLED_DLY_ms(50);
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x2C01             CMP      R4,#+1
   \   00000040   0xD102             BNE.N    ??OLED_Rectangle_2
   \   00000042   0x2032             MOVS     R0,#+50
   \   00000044   0x.... 0x....      BL       OLED_DLY_ms
    683            }
   \                     ??OLED_Rectangle_2: (+1)
   \   00000048   0xF119 0x0901      ADDS     R9,R9,#+1
   \   0000004C   0xE7E6             B.N      ??OLED_Rectangle_0
    684            OLED_Set_Pos(x1,y2>>3);
   \                     ??OLED_Rectangle_1: (+1)
   \   0000004E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000052   0xEA5F 0x01D8      LSRS     R1,R8,#+3
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       OLED_Set_Pos
    685            for(n=x1;n<=x2;n++)
   \   0000005E   0x46A9             MOV      R9,R5
   \                     ??OLED_Rectangle_3: (+1)
   \   00000060   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000062   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000066   0x454F             CMP      R7,R9
   \   00000068   0xD314             BCC.N    ??OLED_Rectangle_4
    686            {
    687              OLED_WrDat(0x01<<(y2%8));
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000070   0x2108             MOVS     R1,#+8
   \   00000072   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   00000076   0xFB02 0x8211      MLS      R2,R2,R1,R8
   \   0000007A   0x4090             LSLS     R0,R0,R2
   \   0000007C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007E   0x.... 0x....      BL       OLED_WrDat
    688              if(gif == 1) 	OLED_DLY_ms(5);
   \   00000082   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000084   0x2C01             CMP      R4,#+1
   \   00000086   0xD102             BNE.N    ??OLED_Rectangle_5
   \   00000088   0x2005             MOVS     R0,#+5
   \   0000008A   0x.... 0x....      BL       OLED_DLY_ms
    689            }
   \                     ??OLED_Rectangle_5: (+1)
   \   0000008E   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000092   0xE7E5             B.N      ??OLED_Rectangle_3
    690            
    691          }
   \                     ??OLED_Rectangle_4: (+1)
   \   00000094   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    692          /**==============================================================
    693          函 数 名: LED_P6x8Char
    694          功能描述: 显示一个6x8标志ASCII字符串
    695          输入数据:  uint8 ucIdxX       显示横坐标0~122
    696          uint8 ucIdxY       页范围0~7
    697          uint8 ucData       显示的字符串
    698          输出数据: NONE
    699          返 回 值: NONE
    700          ==============================================================**/

   \                                 In section .text, align 2, keep-with-next
    701          void OLED_P6x8Char(uint8 ucIdxX, uint8 ucIdxY, uint8 ucData)
    702          {
   \                     OLED_P6x8Char: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x4688             MOV      R8,R1
   \   00000008   0x0015             MOVS     R5,R2
    703            uint8 i, ucDataTmp;
    704            
    705            ucDataTmp = ucData-32;
   \   0000000A   0xF1B5 0x0020      SUBS     R0,R5,#+32
   \   0000000E   0x0007             MOVS     R7,R0
    706            if(ucIdxX > 122)
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x2C7B             CMP      R4,#+123
   \   00000014   0xDB03             BLT.N    ??OLED_P6x8Char_0
    707            {
    708              ucIdxX = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x0004             MOVS     R4,R0
    709              ucIdxY++;
   \   0000001A   0xF118 0x0801      ADDS     R8,R8,#+1
    710            }
    711            
    712            OLED_Set_Pos(ucIdxX, ucIdxY);
   \                     ??OLED_P6x8Char_0: (+1)
   \   0000001E   0x4641             MOV      R1,R8
   \   00000020   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       OLED_Set_Pos
    713            
    714            for(i = 0; i < 6; i++)
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x0006             MOVS     R6,R0
   \                     ??OLED_P6x8Char_1: (+1)
   \   0000002E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000030   0x2E06             CMP      R6,#+6
   \   00000032   0xDA0B             BGE.N    ??OLED_P6x8Char_2
    715            {
    716              OLED_WrDat(F6x8[ucDataTmp][i]);
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000038   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000003A   0x2106             MOVS     R1,#+6
   \   0000003C   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   00000040   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000042   0x5C30             LDRB     R0,[R6, R0]
   \   00000044   0x.... 0x....      BL       OLED_WrDat
    717            }
   \   00000048   0x1C76             ADDS     R6,R6,#+1
   \   0000004A   0xE7F0             B.N      ??OLED_P6x8Char_1
    718          }
   \                     ??OLED_P6x8Char_2: (+1)
   \   0000004C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    719          

   \                                 In section .text, align 2, keep-with-next
    720          void OLED_P8x16Char(uint8 x,uint8 y,uint8 ch)
    721          {
   \                     OLED_P8x16Char: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x4689             MOV      R9,R1
   \   00000008   0x0015             MOVS     R5,R2
    722            uint8 c=0,i=0,j=0;
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2700             MOVS     R7,#+0
   \   0000000E   0xF05F 0x0800      MOVS     R8,#+0
    723            
    724            
    725            c =ch-32;
   \   00000012   0xF1B5 0x0020      SUBS     R0,R5,#+32
   \   00000016   0x0006             MOVS     R6,R0
    726            if(x>120){x=0;y++;}
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2C79             CMP      R4,#+121
   \   0000001C   0xDB03             BLT.N    ??OLED_P8x16Char_0
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x0004             MOVS     R4,R0
   \   00000022   0xF119 0x0901      ADDS     R9,R9,#+1
    727            OLED_Set_Pos(x,y);
   \                     ??OLED_P8x16Char_0: (+1)
   \   00000026   0x4649             MOV      R1,R9
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       OLED_Set_Pos
    728            for(i=0;i<8;i++)
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x0007             MOVS     R7,R0
   \                     ??OLED_P8x16Char_1: (+1)
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x2F08             CMP      R7,#+8
   \   0000003A   0xDA0A             BGE.N    ??OLED_P8x16Char_2
    729              OLED_WrDat(F8X16[c*16+i]);
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000040   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000042   0x0131             LSLS     R1,R6,#+4
   \   00000044   0xFA51 0xF187      UXTAB    R1,R1,R7
   \   00000048   0x5C08             LDRB     R0,[R1, R0]
   \   0000004A   0x.... 0x....      BL       OLED_WrDat
   \   0000004E   0x1C7F             ADDS     R7,R7,#+1
   \   00000050   0xE7F1             B.N      ??OLED_P8x16Char_1
    730            OLED_Set_Pos(x,y+1);
   \                     ??OLED_P8x16Char_2: (+1)
   \   00000052   0xF119 0x0101      ADDS     R1,R9,#+1
   \   00000056   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000058   0x0020             MOVS     R0,R4
   \   0000005A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005C   0x.... 0x....      BL       OLED_Set_Pos
    731            for(i=0;i<8;i++)
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x0007             MOVS     R7,R0
   \                     ??OLED_P8x16Char_3: (+1)
   \   00000064   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000066   0x2F08             CMP      R7,#+8
   \   00000068   0xDA0B             BGE.N    ??OLED_P8x16Char_4
    732              OLED_WrDat(F8X16[c*16+i+8]);
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   0000006E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000070   0x0131             LSLS     R1,R6,#+4
   \   00000072   0xFA51 0xF187      UXTAB    R1,R1,R7
   \   00000076   0x1808             ADDS     R0,R1,R0
   \   00000078   0x7A00             LDRB     R0,[R0, #+8]
   \   0000007A   0x.... 0x....      BL       OLED_WrDat
   \   0000007E   0x1C7F             ADDS     R7,R7,#+1
   \   00000080   0xE7F0             B.N      ??OLED_P8x16Char_3
    733            x+=8;
   \                     ??OLED_P8x16Char_4: (+1)
   \   00000082   0x3408             ADDS     R4,R4,#+8
    734            j++;
   \   00000084   0xF118 0x0801      ADDS     R8,R8,#+1
    735            
    736          }
   \   00000088   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    737          
    738          //==============================================================
    739          //函数名：LCD_P6x8Str(uint8 x,uint8 y,uint8 *p)
    740          //功能描述：写入一组标准ASCII字符串
    741          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    742          //返回：无
    743          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    744          void OLED_P6x8Str(uint8 x,uint8 y,uint8 ch[])
    745          {
   \                     OLED_P6x8Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    746            uint8 c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
    747            while (ch[j]!='\0')
   \                     ??OLED_P6x8Str_0: (+1)
   \   00000014   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000018   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD02B             BEQ.N    ??OLED_P6x8Str_1
    748            {
    749              c =ch[j]-32;
   \   00000020   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000024   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000028   0x3820             SUBS     R0,R0,#+32
   \   0000002A   0x0007             MOVS     R7,R0
    750              if(x>126){x=0;y++;}
   \   0000002C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002E   0x2C7F             CMP      R4,#+127
   \   00000030   0xDB02             BLT.N    ??OLED_P6x8Str_2
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x0004             MOVS     R4,R0
   \   00000036   0x1C6D             ADDS     R5,R5,#+1
    751              OLED_Set_Pos(x,y);
   \                     ??OLED_P6x8Str_2: (+1)
   \   00000038   0x0029             MOVS     R1,R5
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0x.... 0x....      BL       OLED_Set_Pos
    752              for(i=0;i<6;i++)
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x4680             MOV      R8,R0
   \                     ??OLED_P6x8Str_3: (+1)
   \   00000048   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000004C   0xF1B8 0x0F06      CMP      R8,#+6
   \   00000050   0xDA0E             BGE.N    ??OLED_P6x8Str_4
    753                OLED_WrDat(F6x8[c][i]);
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000056   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000058   0x2106             MOVS     R1,#+6
   \   0000005A   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   0000005E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000062   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000066   0x.... 0x....      BL       OLED_WrDat
   \   0000006A   0xF118 0x0801      ADDS     R8,R8,#+1
   \   0000006E   0xE7EB             B.N      ??OLED_P6x8Str_3
    754              x+=6;
   \                     ??OLED_P6x8Str_4: (+1)
   \   00000070   0x1DA4             ADDS     R4,R4,#+6
    755              j++;
   \   00000072   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000076   0xE7CD             B.N      ??OLED_P6x8Str_0
    756            }
    757          }
   \                     ??OLED_P6x8Str_1: (+1)
   \   00000078   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    758          //==============================================================
    759          //函数名：LCD_P8x16Str(uint8 x,uint8 y,uint8 *p)
    760          //功能描述：写入一组标准ASCII字符串
    761          //参数：显示的位置（x,y），y为页范围0～7，要显示的字符串
    762          //返回：无
    763          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    764          void OLED_P8x16Str(uint8 x,uint8 y,uint8 ch[])
    765          {
   \                     OLED_P8x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    766            uint8 c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
    767            
    768            while (ch[j]!='\0')
   \                     ??OLED_P8x16Str_0: (+1)
   \   00000014   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000018   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD042             BEQ.N    ??OLED_P8x16Str_1
    769            {
    770              c =ch[j]-32;
   \   00000020   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000024   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000028   0x3820             SUBS     R0,R0,#+32
   \   0000002A   0x0007             MOVS     R7,R0
    771              if(x>120){x=0;y++;}
   \   0000002C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002E   0x2C79             CMP      R4,#+121
   \   00000030   0xDB02             BLT.N    ??OLED_P8x16Str_2
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x0004             MOVS     R4,R0
   \   00000036   0x1C6D             ADDS     R5,R5,#+1
    772              OLED_Set_Pos(x,y);
   \                     ??OLED_P8x16Str_2: (+1)
   \   00000038   0x0029             MOVS     R1,R5
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0x.... 0x....      BL       OLED_Set_Pos
    773              for(i=0;i<8;i++)
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x4680             MOV      R8,R0
   \                     ??OLED_P8x16Str_3: (+1)
   \   00000048   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000004C   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000050   0xDA0B             BGE.N    ??OLED_P8x16Str_4
    774                OLED_WrDat(F8X16[c*16+i]);
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000056   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000058   0x0139             LSLS     R1,R7,#+4
   \   0000005A   0xFA51 0xF188      UXTAB    R1,R1,R8
   \   0000005E   0x5C08             LDRB     R0,[R1, R0]
   \   00000060   0x.... 0x....      BL       OLED_WrDat
   \   00000064   0xF118 0x0801      ADDS     R8,R8,#+1
   \   00000068   0xE7EE             B.N      ??OLED_P8x16Str_3
    775              OLED_Set_Pos(x,y+1);
   \                     ??OLED_P8x16Str_4: (+1)
   \   0000006A   0x1C69             ADDS     R1,R5,#+1
   \   0000006C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006E   0x0020             MOVS     R0,R4
   \   00000070   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000072   0x.... 0x....      BL       OLED_Set_Pos
    776              for(i=0;i<8;i++)
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x4680             MOV      R8,R0
   \                     ??OLED_P8x16Str_5: (+1)
   \   0000007A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000007E   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000082   0xDA0C             BGE.N    ??OLED_P8x16Str_6
    777                OLED_WrDat(F8X16[c*16+i+8]);
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000088   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000008A   0x0139             LSLS     R1,R7,#+4
   \   0000008C   0xFA51 0xF188      UXTAB    R1,R1,R8
   \   00000090   0x1808             ADDS     R0,R1,R0
   \   00000092   0x7A00             LDRB     R0,[R0, #+8]
   \   00000094   0x.... 0x....      BL       OLED_WrDat
   \   00000098   0xF118 0x0801      ADDS     R8,R8,#+1
   \   0000009C   0xE7ED             B.N      ??OLED_P8x16Str_5
    778              x+=8;
   \                     ??OLED_P8x16Str_6: (+1)
   \   0000009E   0x3408             ADDS     R4,R4,#+8
    779              j++;
   \   000000A0   0xF119 0x0901      ADDS     R9,R9,#+1
   \   000000A4   0xE7B6             B.N      ??OLED_P8x16Str_0
    780            }
    781          }
   \                     ??OLED_P8x16Str_1: (+1)
   \   000000A6   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    782          //输出汉字字符串

   \                                 In section .text, align 2, keep-with-next
    783          void OLED_P14x16Str(uint8 x,uint8 y,uint8 ch[])
    784          {
   \                     OLED_P14x16Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    785            uint8 wm=0,ii = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    786            uint16 adder=1;
   \   00000010   0xF05F 0x0901      MOVS     R9,#+1
    787            
    788            while(ch[ii] != '\0')
   \                     ??OLED_P14x16Str_0: (+1)
   \   00000014   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000018   0xF818 0x0006      LDRB     R0,[R8, R6]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xF000 0x808D      BEQ.W    ??OLED_P14x16Str_1
    789            {
    790              wm = 0;
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x0007             MOVS     R7,R0
    791              adder = 1;
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x4681             MOV      R9,R0
    792              while(F14x16_Idx[wm] > 127)
   \                     ??OLED_P14x16Str_2: (+1)
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000002E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000030   0x5C38             LDRB     R0,[R7, R0]
   \   00000032   0x2880             CMP      R0,#+128
   \   00000034   0xDB1D             BLT.N    ??OLED_P14x16Str_3
    793              {
    794                if(F14x16_Idx[wm] == ch[ii])
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000003A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000003C   0x5C38             LDRB     R0,[R7, R0]
   \   0000003E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000042   0xF818 0x1006      LDRB     R1,[R8, R6]
   \   00000046   0x4288             CMP      R0,R1
   \   00000048   0xD111             BNE.N    ??OLED_P14x16Str_4
    795                {
    796                  if(F14x16_Idx[wm + 1] == ch[ii + 1])
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   0000004E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000050   0x1838             ADDS     R0,R7,R0
   \   00000052   0x7840             LDRB     R0,[R0, #+1]
   \   00000054   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000058   0xEB18 0x0106      ADDS     R1,R8,R6
   \   0000005C   0x7849             LDRB     R1,[R1, #+1]
   \   0000005E   0x4288             CMP      R0,R1
   \   00000060   0xD105             BNE.N    ??OLED_P14x16Str_4
    797                  {
    798                    adder = wm * 14;
   \   00000062   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000064   0x200E             MOVS     R0,#+14
   \   00000066   0xFB17 0xF000      SMULBB   R0,R7,R0
   \   0000006A   0x4681             MOV      R9,R0
    799                    break;
   \   0000006C   0xE001             B.N      ??OLED_P14x16Str_3
    800                  }
    801                }
    802                wm += 2;
   \                     ??OLED_P14x16Str_4: (+1)
   \   0000006E   0x1CBF             ADDS     R7,R7,#+2
   \   00000070   0xE7DB             B.N      ??OLED_P14x16Str_2
    803              }
    804              if(x>118){x=0;y++;}
   \                     ??OLED_P14x16Str_3: (+1)
   \   00000072   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000074   0x2C77             CMP      R4,#+119
   \   00000076   0xDB02             BLT.N    ??OLED_P14x16Str_5
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x0004             MOVS     R4,R0
   \   0000007C   0x1C6D             ADDS     R5,R5,#+1
    805              OLED_Set_Pos(x , y);
   \                     ??OLED_P14x16Str_5: (+1)
   \   0000007E   0x0029             MOVS     R1,R5
   \   00000080   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000082   0x0020             MOVS     R0,R4
   \   00000084   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000086   0x.... 0x....      BL       OLED_Set_Pos
    806              if(adder != 1)// 显示汉字
   \   0000008A   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000008E   0xF1B9 0x0F01      CMP      R9,#+1
   \   00000092   0xD02D             BEQ.N    ??OLED_P14x16Str_6
    807              {
    808                OLED_Set_Pos(x , y);
   \   00000094   0x0029             MOVS     R1,R5
   \   00000096   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000098   0x0020             MOVS     R0,R4
   \   0000009A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009C   0x.... 0x....      BL       OLED_Set_Pos
    809                for(wm = 0;wm < 14;wm++)
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x0007             MOVS     R7,R0
   \                     ??OLED_P14x16Str_7: (+1)
   \   000000A4   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000A6   0x2F0E             CMP      R7,#+14
   \   000000A8   0xDA0B             BGE.N    ??OLED_P14x16Str_8
    810                {
    811                  OLED_WrDat(F14x16[adder]);
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   000000AE   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000B2   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   000000B6   0x.... 0x....      BL       OLED_WrDat
    812                  adder += 1;
   \   000000BA   0xF119 0x0901      ADDS     R9,R9,#+1
    813                }
   \   000000BE   0x1C7F             ADDS     R7,R7,#+1
   \   000000C0   0xE7F0             B.N      ??OLED_P14x16Str_7
    814                OLED_Set_Pos(x,y + 1);
   \                     ??OLED_P14x16Str_8: (+1)
   \   000000C2   0x1C69             ADDS     R1,R5,#+1
   \   000000C4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C6   0x0020             MOVS     R0,R4
   \   000000C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CA   0x.... 0x....      BL       OLED_Set_Pos
    815                for(wm = 0;wm < 14;wm++)
   \   000000CE   0x2000             MOVS     R0,#+0
   \   000000D0   0x0007             MOVS     R7,R0
   \                     ??OLED_P14x16Str_9: (+1)
   \   000000D2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000D4   0x2F0E             CMP      R7,#+14
   \   000000D6   0xDA2D             BGE.N    ??OLED_P14x16Str_10
    816                {
    817                  OLED_WrDat(F14x16[adder]);
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   000000DC   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000E0   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   000000E4   0x.... 0x....      BL       OLED_WrDat
    818                  adder += 1;
   \   000000E8   0xF119 0x0901      ADDS     R9,R9,#+1
    819                }
   \   000000EC   0x1C7F             ADDS     R7,R7,#+1
   \   000000EE   0xE7F0             B.N      ??OLED_P14x16Str_9
    820              }
    821              else			  //显示空白字符
    822              {
    823                ii += 1;
   \                     ??OLED_P14x16Str_6: (+1)
   \   000000F0   0xF118 0x0801      ADDS     R8,R8,#+1
    824                OLED_Set_Pos(x,y);
   \   000000F4   0x0029             MOVS     R1,R5
   \   000000F6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F8   0x0020             MOVS     R0,R4
   \   000000FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FC   0x.... 0x....      BL       OLED_Set_Pos
    825                for(wm = 0;wm < 16;wm++)
   \   00000100   0x2000             MOVS     R0,#+0
   \   00000102   0x0007             MOVS     R7,R0
   \                     ??OLED_P14x16Str_11: (+1)
   \   00000104   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000106   0x2F10             CMP      R7,#+16
   \   00000108   0xDA04             BGE.N    ??OLED_P14x16Str_12
    826                {
    827                  OLED_WrDat(0);
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0x.... 0x....      BL       OLED_WrDat
    828                }
   \   00000110   0x1C7F             ADDS     R7,R7,#+1
   \   00000112   0xE7F7             B.N      ??OLED_P14x16Str_11
    829                OLED_Set_Pos(x,y + 1);
   \                     ??OLED_P14x16Str_12: (+1)
   \   00000114   0x1C69             ADDS     R1,R5,#+1
   \   00000116   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000118   0x0020             MOVS     R0,R4
   \   0000011A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011C   0x.... 0x....      BL       OLED_Set_Pos
    830                for(wm = 0;wm < 16;wm++)
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x0007             MOVS     R7,R0
   \                     ??OLED_P14x16Str_13: (+1)
   \   00000124   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000126   0x2F10             CMP      R7,#+16
   \   00000128   0xDA04             BGE.N    ??OLED_P14x16Str_10
    831                {
    832                  OLED_WrDat(0);
   \   0000012A   0x2000             MOVS     R0,#+0
   \   0000012C   0x.... 0x....      BL       OLED_WrDat
    833                }
   \   00000130   0x1C7F             ADDS     R7,R7,#+1
   \   00000132   0xE7F7             B.N      ??OLED_P14x16Str_13
    834              }
    835              x += 14;
   \                     ??OLED_P14x16Str_10: (+1)
   \   00000134   0x340E             ADDS     R4,R4,#+14
    836              ii += 2;
   \   00000136   0xF118 0x0802      ADDS     R8,R8,#+2
   \   0000013A   0xE76B             B.N      ??OLED_P14x16Str_0
    837            }
    838          }
   \                     ??OLED_P14x16Str_1: (+1)
   \   0000013C   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    839          //输出汉字和字符混合字符串

   \                                 In section .text, align 2, keep-with-next
    840          void OLED_Print(uint8 x, uint8 y, uint8 ch[])
    841          {
   \                     OLED_Print: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    842            uint8 ch2[3];
    843            uint8 ii=0;
   \   00000008   0x2700             MOVS     R7,#+0
    844            while(ch[ii] != '\0')
   \                     ??OLED_Print_0: (+1)
   \   0000000A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000000C   0x5DB8             LDRB     R0,[R7, R6]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD02A             BEQ.N    ??OLED_Print_1
    845            {
    846              if(ch[ii] > 127)
   \   00000012   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000014   0x5DB8             LDRB     R0,[R7, R6]
   \   00000016   0x2880             CMP      R0,#+128
   \   00000018   0xDB15             BLT.N    ??OLED_Print_2
    847              {
    848                ch2[0] = ch[ii];
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x5DB8             LDRB     R0,[R7, R6]
   \   0000001E   0xF88D 0x0000      STRB     R0,[SP, #+0]
    849                ch2[1] = ch[ii + 1];
   \   00000022   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000024   0x19B8             ADDS     R0,R7,R6
   \   00000026   0x7840             LDRB     R0,[R0, #+1]
   \   00000028   0xF88D 0x0001      STRB     R0,[SP, #+1]
    850                ch2[2] = '\0';			//汉字为两个字节
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0xF88D 0x0002      STRB     R0,[SP, #+2]
    851                OLED_P14x16Str(x , y, ch2);	//显示汉字
   \   00000032   0xAA00             ADD      R2,SP,#+0
   \   00000034   0x0029             MOVS     R1,R5
   \   00000036   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000038   0x0020             MOVS     R0,R4
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x.... 0x....      BL       OLED_P14x16Str
    852                x += 14;
   \   00000040   0x340E             ADDS     R4,R4,#+14
    853                ii += 2;
   \   00000042   0x1CBF             ADDS     R7,R7,#+2
   \   00000044   0xE7E1             B.N      ??OLED_Print_0
    854              }
    855              else
    856              {
    857                ch2[0] = ch[ii];
   \                     ??OLED_Print_2: (+1)
   \   00000046   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000048   0x5DB8             LDRB     R0,[R7, R6]
   \   0000004A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    858                ch2[1] = '\0';			//字母占一个字节
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0xF88D 0x0001      STRB     R0,[SP, #+1]
    859                OLED_P8x16Str(x , y , ch2);	//显示字母
   \   00000054   0xAA00             ADD      R2,SP,#+0
   \   00000056   0x0029             MOVS     R1,R5
   \   00000058   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x.... 0x....      BL       OLED_P8x16Str
    860                x += 8;
   \   00000062   0x3408             ADDS     R4,R4,#+8
    861                ii+= 1;
   \   00000064   0x1C7F             ADDS     R7,R7,#+1
   \   00000066   0xE7D0             B.N      ??OLED_Print_0
    862              }
    863            }
    864          }
   \                     ??OLED_Print_1: (+1)
   \   00000068   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    865          /*****************************************************************************
    866          函 数 名: LED_PrintFloat
    867          功能描述: 将一个Short型数转换为5位数字显示
    868          输入参数: UCHAR8 ucIdxX ucIdxX的范围为0~120
    869          UCHAR8 ucIdxY ucIdxY为页的范围0~7
    870          SHORT16 sData  sData为需要转换的数
    871          输出参数: none
    872          返 回 值: none
    873          *****************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    874          void OLED_PrintFloat(uint8 ucIdxX, uint8 ucIdxY, float64 sData)
    875          {
   \                     OLED_PrintFloat: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB089             SUB      SP,SP,#+36
   \   00000006   0x0006             MOVS     R6,R0
   \   00000008   0x000F             MOVS     R7,R1
   \   0000000A   0x0014             MOVS     R4,R2
   \   0000000C   0x001D             MOVS     R5,R3
    876            float64  j, k,usData;
    877            float64 f1,f2,f3;
    878          //  if(sData < 0)
    879          //  {
    880          //    OLED_P8x16Str(ucIdxX,ucIdxY,"-");
    881          //    usData = (float64)(-sData);
    882          //  }
    883          //  else
    884          //  {
    885          //    OLED_P8x16Str(ucIdxX,ucIdxY,"+");
    886              usData = (float64)sData;
   \   0000000E   0x46A0             MOV      R8,R4
   \   00000010   0x46A9             MOV      R9,R5
    887          //  }
    888            if(usData < 100000.0 && usData > -100000.0)
   \   00000012   0x4640             MOV      R0,R8
   \   00000014   0x4649             MOV      R1,R9
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x.... 0x....      LDR.W    R3,??DataTable12_8  ;; 0x40f86a00
   \   0000001C   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000020   0xF080 0x8106      BCS.W    ??OLED_PrintFloat_0
   \   00000024   0x4640             MOV      R0,R8
   \   00000026   0x4649             MOV      R1,R9
   \   00000028   0xF05F 0x32FF      MOVS     R2,#-1
   \   0000002C   0x.... 0x....      LDR.W    R3,??DataTable12_9  ;; 0xc0f869ff
   \   00000030   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000034   0xF200 0x80FC      BHI.W    ??OLED_PrintFloat_0
    889            {
    890          //    l  = (uint16)(usData / 10000) % 10;
    891          //    m  = (uint16)(usData / 1000) % 10;
    892          //    i  = (uint16)(usData / 100) % 10;
    893              j  = (uint16)(usData / 10) % 10;
   \   00000038   0x4640             MOV      R0,R8
   \   0000003A   0x4649             MOV      R1,R9
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x.... 0x....      LDR.W    R3,??DataTable12_10  ;; 0x40240000
   \   00000042   0x.... 0x....      BL       __aeabi_ddiv
   \   00000046   0x.... 0x....      BL       __aeabi_d2iz
   \   0000004A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004C   0x210A             MOVS     R1,#+10
   \   0000004E   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000052   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000056   0x.... 0x....      BL       __aeabi_i2d
   \   0000005A   0xE9CD 0x0104      STRD     R0,R1,[SP, #+16]
    894              k  = (uint16) usData % 10;
   \   0000005E   0x4640             MOV      R0,R8
   \   00000060   0x4649             MOV      R1,R9
   \   00000062   0x.... 0x....      BL       __aeabi_d2iz
   \   00000066   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000068   0x210A             MOVS     R1,#+10
   \   0000006A   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000006E   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000072   0x.... 0x....      BL       __aeabi_i2d
   \   00000076   0xE9CD 0x0106      STRD     R0,R1,[SP, #+24]
    895              f1 = (uint16)(usData * 10) % 10;
   \   0000007A   0x2200             MOVS     R2,#+0
   \   0000007C   0x.... 0x....      LDR.W    R3,??DataTable12_10  ;; 0x40240000
   \   00000080   0x4640             MOV      R0,R8
   \   00000082   0x4649             MOV      R1,R9
   \   00000084   0x.... 0x....      BL       __aeabi_dmul
   \   00000088   0x.... 0x....      BL       __aeabi_d2iz
   \   0000008C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000008E   0x210A             MOVS     R1,#+10
   \   00000090   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000094   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000098   0x.... 0x....      BL       __aeabi_i2d
   \   0000009C   0xE9CD 0x0102      STRD     R0,R1,[SP, #+8]
    896              f2 = (uint16)(usData * 100) % 10;
   \   000000A0   0x2200             MOVS     R2,#+0
   \   000000A2   0x.... 0x....      LDR.W    R3,??DataTable12_11  ;; 0x40590000
   \   000000A6   0x4640             MOV      R0,R8
   \   000000A8   0x4649             MOV      R1,R9
   \   000000AA   0x.... 0x....      BL       __aeabi_dmul
   \   000000AE   0x.... 0x....      BL       __aeabi_d2iz
   \   000000B2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000B4   0x210A             MOVS     R1,#+10
   \   000000B6   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000BA   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000000BE   0x.... 0x....      BL       __aeabi_i2d
   \   000000C2   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    897              f3 = (uint16)(usData * 1000) % 10;
   \   000000C6   0x2200             MOVS     R2,#+0
   \   000000C8   0x.... 0x....      LDR.W    R3,??DataTable12_12  ;; 0x408f4000
   \   000000CC   0x4640             MOV      R0,R8
   \   000000CE   0x4649             MOV      R1,R9
   \   000000D0   0x.... 0x....      BL       __aeabi_dmul
   \   000000D4   0x.... 0x....      BL       __aeabi_d2iz
   \   000000D8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000DA   0x210A             MOVS     R1,#+10
   \   000000DC   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000E0   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000000E4   0x.... 0x....      BL       __aeabi_i2d
   \   000000E8   0x4682             MOV      R10,R0
   \   000000EA   0x468B             MOV      R11,R1
    898          //    f4 = (uint32)(usData * 10000) % 10;
    899          //    f5 = (uint32)(usData * 100000) % 10;
    900              //    f6 = (uint32)(usData * 1000000) % 10;
    901              
    902              //万位
    903          //    if ((uint8)l != 0)
    904          //    {
    905          //      OLED_P8x16Char(ucIdxX+8,  ucIdxY, (uint8)l+48);
    906          //    }
    907          //    else
    908          //    {
    909          //      OLED_P8x16Str(ucIdxX+8,  ucIdxY, " ");
    910          //    }
    911          //    
    912          //    //千位
    913          //    if ( (uint8)m != 0 || (uint8)l != 0)
    914          //    {
    915          //      OLED_P8x16Char(ucIdxX+16, ucIdxY, (uint8)m+48);
    916          //    }
    917          //    else
    918          //    {
    919          //      OLED_P6x8Str(ucIdxX+16,  ucIdxY, " ");
    920          //    }
    921          //    
    922          //    
    923          //    //百位
    924          //    if ( (uint8)m != 0 || (uint8)l != 0 || (uint8)i != 0)
    925          //    {
    926          //      OLED_P8x16Char(ucIdxX+24, ucIdxY, (uint8)i+48);
    927          //    }
    928          //    else
    929          //    {
    930          //      OLED_P8x16Str(ucIdxX+24,  ucIdxY, " ");
    931          //    }
    932              
    933              //十位
    934              if (/* (uint8)m != 0 || (uint8)l != 0 || (uint8)i != 0 || */(uint8)j != 0)
   \   000000EC   0xE9DD 0x0104      LDRD     R0,R1,[SP, #+16]
   \   000000F0   0x.... 0x....      BL       __aeabi_d2iz
   \   000000F4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000F6   0x2800             CMP      R0,#+0
   \   000000F8   0xD00D             BEQ.N    ??OLED_PrintFloat_1
    935              {
    936                OLED_P8x16Char(ucIdxX+0, ucIdxY, (uint8)j+48);
   \   000000FA   0xE9DD 0x0104      LDRD     R0,R1,[SP, #+16]
   \   000000FE   0x.... 0x....      BL       __aeabi_d2iz
   \   00000102   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000106   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000108   0x0039             MOVS     R1,R7
   \   0000010A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000010C   0x0030             MOVS     R0,R6
   \   0000010E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000110   0x.... 0x....      BL       OLED_P8x16Char
   \   00000114   0xE006             B.N      ??OLED_PrintFloat_2
    937              }
    938              else
    939              {
    940                OLED_P8x16Str(ucIdxX +0,  ucIdxY, " ");
   \                     ??OLED_PrintFloat_1: (+1)
   \   00000116   0x....             ADR.N    R2,??DataTable11  ;; " "
   \   00000118   0x0039             MOVS     R1,R7
   \   0000011A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000011C   0x0030             MOVS     R0,R6
   \   0000011E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000120   0x.... 0x....      BL       OLED_P8x16Str
    941              }
    942              
    943              //个位
    944              OLED_P8x16Char(ucIdxX+8, ucIdxY, (uint8)k+48);
   \                     ??OLED_PrintFloat_2: (+1)
   \   00000124   0xE9DD 0x0106      LDRD     R0,R1,[SP, #+24]
   \   00000128   0x.... 0x....      BL       __aeabi_d2iz
   \   0000012C   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000130   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000132   0x0039             MOVS     R1,R7
   \   00000134   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000136   0xF116 0x0008      ADDS     R0,R6,#+8
   \   0000013A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000013C   0x.... 0x....      BL       OLED_P8x16Char
    945              
    946              //小数点
    947              OLED_P8x16Char(ucIdxX+16, ucIdxY, (uint8) '.' );
   \   00000140   0x222E             MOVS     R2,#+46
   \   00000142   0x0039             MOVS     R1,R7
   \   00000144   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000146   0xF116 0x0010      ADDS     R0,R6,#+16
   \   0000014A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014C   0x.... 0x....      BL       OLED_P8x16Char
    948              
    949              
    950              if ( /*(uint8)f6 != 0 || (uint8)f5 != 0 || (uint8)f4 != 0 || */(uint8)f3 != 0 || (uint8)f2 != 0 || (uint8)f1 != 0 )
   \   00000150   0x4650             MOV      R0,R10
   \   00000152   0x4659             MOV      R1,R11
   \   00000154   0x.... 0x....      BL       __aeabi_d2iz
   \   00000158   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000015A   0x2800             CMP      R0,#+0
   \   0000015C   0xD10D             BNE.N    ??OLED_PrintFloat_3
   \   0000015E   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000162   0x.... 0x....      BL       __aeabi_d2iz
   \   00000166   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000168   0x2800             CMP      R0,#+0
   \   0000016A   0xD106             BNE.N    ??OLED_PrintFloat_3
   \   0000016C   0xE9DD 0x0102      LDRD     R0,R1,[SP, #+8]
   \   00000170   0x.... 0x....      BL       __aeabi_d2iz
   \   00000174   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000176   0x2800             CMP      R0,#+0
   \   00000178   0xD00E             BEQ.N    ??OLED_PrintFloat_4
    951              {
    952                OLED_P8x16Char(ucIdxX+24, ucIdxY, (uint8)f1+48);
   \                     ??OLED_PrintFloat_3: (+1)
   \   0000017A   0xE9DD 0x0102      LDRD     R0,R1,[SP, #+8]
   \   0000017E   0x.... 0x....      BL       __aeabi_d2iz
   \   00000182   0xF110 0x0230      ADDS     R2,R0,#+48
   \   00000186   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000188   0x0039             MOVS     R1,R7
   \   0000018A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000018C   0xF116 0x0018      ADDS     R0,R6,#+24
   \   00000190   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000192   0x.... 0x....      BL       OLED_P8x16Char
   \   00000196   0xE007             B.N      ??OLED_PrintFloat_5
    953              }
    954              else
    955              {
    956                OLED_P8x16Str(ucIdxX+24,  ucIdxY, " ");
   \                     ??OLED_PrintFloat_4: (+1)
   \   00000198   0x....             ADR.N    R2,??DataTable11  ;; " "
   \   0000019A   0x0039             MOVS     R1,R7
   \   0000019C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000019E   0xF116 0x0018      ADDS     R0,R6,#+24
   \   000001A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001A4   0x.... 0x....      BL       OLED_P8x16Str
    957              }
    958              if (/* (uint8)f6 != 0 || (uint8)f5 != 0 || (uint8)f4 != 0 || */(uint8)f3 != 0 || (uint8)f2 != 0)
   \                     ??OLED_PrintFloat_5: (+1)
   \   000001A8   0x4650             MOV      R0,R10
   \   000001AA   0x4659             MOV      R1,R11
   \   000001AC   0x.... 0x....      BL       __aeabi_d2iz
   \   000001B0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001B2   0x2800             CMP      R0,#+0
   \   000001B4   0xD106             BNE.N    ??OLED_PrintFloat_6
   \   000001B6   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   000001BA   0x.... 0x....      BL       __aeabi_d2iz
   \   000001BE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001C0   0x2800             CMP      R0,#+0
   \   000001C2   0xD00E             BEQ.N    ??OLED_PrintFloat_7
    959              {
    960                OLED_P8x16Char(ucIdxX+32, ucIdxY, (uint8)f2+48);
   \                     ??OLED_PrintFloat_6: (+1)
   \   000001C4   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   000001C8   0x.... 0x....      BL       __aeabi_d2iz
   \   000001CC   0xF110 0x0230      ADDS     R2,R0,#+48
   \   000001D0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001D2   0x0039             MOVS     R1,R7
   \   000001D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001D6   0xF116 0x0020      ADDS     R0,R6,#+32
   \   000001DA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001DC   0x.... 0x....      BL       OLED_P8x16Char
   \   000001E0   0xE007             B.N      ??OLED_PrintFloat_8
    961              }
    962              else
    963              {
    964                OLED_P8x16Str(ucIdxX+32,  ucIdxY, " ");
   \                     ??OLED_PrintFloat_7: (+1)
   \   000001E2   0x....             ADR.N    R2,??DataTable11  ;; " "
   \   000001E4   0x0039             MOVS     R1,R7
   \   000001E6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001E8   0xF116 0x0020      ADDS     R0,R6,#+32
   \   000001EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001EE   0x.... 0x....      BL       OLED_P8x16Str
    965              }
    966              
    967              if (/* (uint8)f6 != 0 || (uint8)f5 != 0 || (uint8)f4 != 0 || */(uint8)f3 != 0)
   \                     ??OLED_PrintFloat_8: (+1)
   \   000001F2   0x4650             MOV      R0,R10
   \   000001F4   0x4659             MOV      R1,R11
   \   000001F6   0x.... 0x....      BL       __aeabi_d2iz
   \   000001FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001FC   0x2800             CMP      R0,#+0
   \   000001FE   0xD00E             BEQ.N    ??OLED_PrintFloat_9
    968              {
    969                OLED_P8x16Char(ucIdxX+40, ucIdxY, (uint8)f3+48);
   \   00000200   0x4650             MOV      R0,R10
   \   00000202   0x4659             MOV      R1,R11
   \   00000204   0x.... 0x....      BL       __aeabi_d2iz
   \   00000208   0xF110 0x0230      ADDS     R2,R0,#+48
   \   0000020C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000020E   0x0039             MOVS     R1,R7
   \   00000210   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000212   0xF116 0x0028      ADDS     R0,R6,#+40
   \   00000216   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000218   0x.... 0x....      BL       OLED_P8x16Char
   \   0000021C   0xE00F             B.N      ??OLED_PrintFloat_10
    970              }
    971              else
    972              {
    973                OLED_P8x16Str(ucIdxX+40,  ucIdxY, " ");
   \                     ??OLED_PrintFloat_9: (+1)
   \   0000021E   0x....             ADR.N    R2,??DataTable11  ;; " "
   \   00000220   0x0039             MOVS     R1,R7
   \   00000222   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000224   0xF116 0x0028      ADDS     R0,R6,#+40
   \   00000228   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000022A   0x.... 0x....      BL       OLED_P8x16Str
   \   0000022E   0xE006             B.N      ??OLED_PrintFloat_10
    974              }
    975              
    976              
    977          //    
    978          //    if ( (uint8)f6 != 0 || (uint8)f5 != 0 || (uint8)f4 != 0)
    979          //    {
    980          //      OLED_P8x16Char(ucIdxX+80, ucIdxY, (uint8)f4+48);
    981          //    }
    982          //    else
    983          //    {
    984          //      OLED_P8x16Str(ucIdxX+80,  ucIdxY, " ");
    985          //    }
    986          //    if ( (uint8)f6 != 0 || (uint8)f5 != 0 )
    987          //    {
    988          //      OLED_P8x16Char(ucIdxX+88, ucIdxY, (uint8)f5+48);
    989          //    }
    990          //    else
    991          //    {
    992          //      OLED_P8x16Str(ucIdxX+88,  ucIdxY, " ");
    993          //    }
    994              //    if ( (uint8)f6 != 0 )
    995              //    {
    996              //      OLED_P8x16Char(ucIdxX+56, ucIdxY + 2, (uint8)f6+48);
    997              //    }
    998              //    else
    999              //    {
   1000              //      OLED_P8x16Str(ucIdxX+56,  ucIdxY + 2, " ");
   1001              //    }
   1002            }
   1003            else
   1004            {
   1005              OLED_P8x16Str( ucIdxX, ucIdxY,"Error!");
   \                     ??OLED_PrintFloat_0: (+1)
   \   00000230   0x....             LDR.N    R2,??DataTable12_13
   \   00000232   0x0039             MOVS     R1,R7
   \   00000234   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000236   0x0030             MOVS     R0,R6
   \   00000238   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000023A   0x.... 0x....      BL       OLED_P8x16Str
   1006            }
   1007            return;
   \                     ??OLED_PrintFloat_10: (+1)
   \   0000023E   0xB009             ADD      SP,SP,#+36
   \   00000240   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1008          }
   1009          //==============================================================
   1010          //函数名： void Draw_BMP(uint8 x,uint8 y)
   1011          //功能描述：显示BMP图片128×64
   1012          //参数：起始点坐标(x,y),x的范围0～127，y为页的范围0～7
   1013          //返回：无
   1014          //==============================================================

   \                                 In section .text, align 2, keep-with-next
   1015          void Draw_BMP(uint8 x0,uint8 y0,uint8 x1,uint8 y1,uint8 bmp[])
   1016          {
   \                     Draw_BMP: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
   \   0000000C   0xF8DD 0x8028      LDR      R8,[SP, #+40]
   1017            uint16 ii=0;
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   1018            uint8 x,y;
   1019            
   1020            if(y1%8==0) y=y1/8;
   \   00000014   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000016   0x2008             MOVS     R0,#+8
   \   00000018   0xFB97 0xF1F0      SDIV     R1,R7,R0
   \   0000001C   0xFB01 0x7110      MLS      R1,R1,R0,R7
   \   00000020   0x2900             CMP      R1,#+0
   \   00000022   0xD105             BNE.N    ??Draw_BMP_0
   \   00000024   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000026   0x2008             MOVS     R0,#+8
   \   00000028   0xFB97 0xF0F0      SDIV     R0,R7,R0
   \   0000002C   0x4683             MOV      R11,R0
   \   0000002E   0xE005             B.N      ??Draw_BMP_1
   1021            else y=y1/8+1;
   \                     ??Draw_BMP_0: (+1)
   \   00000030   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000032   0x2008             MOVS     R0,#+8
   \   00000034   0xFB97 0xF0F0      SDIV     R0,R7,R0
   \   00000038   0x1C40             ADDS     R0,R0,#+1
   \   0000003A   0x4683             MOV      R11,R0
   1022            for(y=y0;y<=y1;y++)
   \                     ??Draw_BMP_1: (+1)
   \   0000003C   0x46AB             MOV      R11,R5
   \                     ??Draw_BMP_2: (+1)
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000044   0x455F             CMP      R7,R11
   \   00000046   0xD319             BCC.N    ??Draw_BMP_3
   1023            {
   1024              OLED_Set_Pos(x0,y);
   \   00000048   0x4659             MOV      R1,R11
   \   0000004A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x.... 0x....      BL       OLED_Set_Pos
   1025              for(x=x0;x<x1;x++)
   \   00000054   0x46A2             MOV      R10,R4
   \                     ??Draw_BMP_4: (+1)
   \   00000056   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000005A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005C   0x45B2             CMP      R10,R6
   \   0000005E   0xD20A             BCS.N    ??Draw_BMP_5
   1026              {
   1027                OLED_WrDat(bmp[ii++]);
   \   00000060   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000064   0xF819 0x0008      LDRB     R0,[R9, R8]
   \   00000068   0x.... 0x....      BL       OLED_WrDat
   \   0000006C   0xF119 0x0901      ADDS     R9,R9,#+1
   1028              }
   \   00000070   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   00000074   0xE7EF             B.N      ??Draw_BMP_4
   1029            }
   \                     ??Draw_BMP_5: (+1)
   \   00000076   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   0000007A   0xE7E0             B.N      ??Draw_BMP_2
   1030          }
   \                     ??Draw_BMP_3: (+1)
   \   0000007C   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   1031          

   \                                 In section .text, align 2, keep-with-next
   1032          void Draw_LibLogo(void)
   1033          {
   \                     Draw_LibLogo: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   1034            uint16 ii=0;
   \   00000002   0x2400             MOVS     R4,#+0
   1035            uint8 x,y;
   1036            
   1037            for(y=0;y<8;y++)
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x0006             MOVS     R6,R0
   \                     ??Draw_LibLogo_0: (+1)
   \   00000008   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000A   0x2E08             CMP      R6,#+8
   \   0000000C   0xDA13             BGE.N    ??Draw_LibLogo_1
   1038            {
   1039              OLED_Set_Pos(34,y);
   \   0000000E   0x0031             MOVS     R1,R6
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x2022             MOVS     R0,#+34
   \   00000014   0x.... 0x....      BL       OLED_Set_Pos
   1040              for(x=34;x<94;x++)
   \   00000018   0x2022             MOVS     R0,#+34
   \   0000001A   0x0005             MOVS     R5,R0
   \                     ??Draw_LibLogo_2: (+1)
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0x2D5E             CMP      R5,#+94
   \   00000020   0xDA07             BGE.N    ??Draw_LibLogo_3
   1041              {
   1042                OLED_WrDat(LIBLOGO60x58[ii++]);
   \   00000022   0x....             LDR.N    R0,??DataTable12_14
   \   00000024   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000026   0x5C20             LDRB     R0,[R4, R0]
   \   00000028   0x.... 0x....      BL       OLED_WrDat
   \   0000002C   0x1C64             ADDS     R4,R4,#+1
   1043              }
   \   0000002E   0x1C6D             ADDS     R5,R5,#+1
   \   00000030   0xE7F4             B.N      ??Draw_LibLogo_2
   1044            }
   \                     ??Draw_LibLogo_3: (+1)
   \   00000032   0x1C76             ADDS     R6,R6,#+1
   \   00000034   0xE7E8             B.N      ??Draw_LibLogo_0
   1045          }
   \                     ??Draw_LibLogo_1: (+1)
   \   00000036   0xBD70             POP      {R4-R6,PC}       ;; return
   1046          

   \                                 In section .text, align 2, keep-with-next
   1047          void Draw_Landzo(void)
   1048          {
   \                     Draw_Landzo: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   1049            uint16 ii=0;
   \   00000002   0x2400             MOVS     R4,#+0
   1050            uint8 x,y;
   1051            
   1052            for(y=2;y<8;y++)
   \   00000004   0x2002             MOVS     R0,#+2
   \   00000006   0x0006             MOVS     R6,R0
   \                     ??Draw_Landzo_0: (+1)
   \   00000008   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000A   0x2E08             CMP      R6,#+8
   \   0000000C   0xDA13             BGE.N    ??Draw_Landzo_1
   1053            {
   1054              OLED_Set_Pos(40,y);
   \   0000000E   0x0031             MOVS     R1,R6
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x2028             MOVS     R0,#+40
   \   00000014   0x.... 0x....      BL       OLED_Set_Pos
   1055              for(x=40;x<90;x++)
   \   00000018   0x2028             MOVS     R0,#+40
   \   0000001A   0x0005             MOVS     R5,R0
   \                     ??Draw_Landzo_2: (+1)
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0x2D5A             CMP      R5,#+90
   \   00000020   0xDA07             BGE.N    ??Draw_Landzo_3
   1056              {
   1057                OLED_WrDat(LANDZO_LOGO[ii++]);
   \   00000022   0x....             LDR.N    R0,??DataTable12_15
   \   00000024   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000026   0x5C20             LDRB     R0,[R4, R0]
   \   00000028   0x.... 0x....      BL       OLED_WrDat
   \   0000002C   0x1C64             ADDS     R4,R4,#+1
   1058              }
   \   0000002E   0x1C6D             ADDS     R5,R5,#+1
   \   00000030   0xE7F4             B.N      ??Draw_Landzo_2
   1059            }
   \                     ??Draw_Landzo_3: (+1)
   \   00000032   0x1C76             ADDS     R6,R6,#+1
   \   00000034   0xE7E8             B.N      ??Draw_Landzo_0
   1060          }
   \                     ??Draw_Landzo_1: (+1)
   \   00000036   0xBD70             POP      {R4-R6,PC}       ;; return
   1061          

   \                                 In section .text, align 2, keep-with-next
   1062          void OLED_PrintInt16(uint8 ucIdxX, uint8 ucIdxY, int16 sData)
   1063          {
   \                     OLED_PrintInt16: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   1064            uint8 i, j, k, l, m;
   1065            uint16 usData;
   1066          
   1067            if(sData < 0)
   \   0000000A   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   0000000C   0x2E00             CMP      R6,#+0
   \   0000000E   0xD50A             BPL.N    ??OLED_PrintInt16_0
   1068            {
   1069              OLED_P8x16Str(ucIdxX,ucIdxY,"-");
   \   00000010   0x....             ADR.N    R2,??DataTable12  ;; "-"
   \   00000012   0x0029             MOVS     R1,R5
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       OLED_P8x16Str
   1070              usData = (int16)(-sData);
   \   0000001E   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000020   0x4270             RSBS     R0,R6,#+0
   \   00000022   0x4683             MOV      R11,R0
   \   00000024   0xE007             B.N      ??OLED_PrintInt16_1
   1071            }
   1072            else
   1073            {
   1074              OLED_P8x16Str(ucIdxX,ucIdxY,"+");
   \                     ??OLED_PrintInt16_0: (+1)
   \   00000026   0x....             ADR.N    R2,??DataTable12_2  ;; "+"
   \   00000028   0x0029             MOVS     R1,R5
   \   0000002A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x.... 0x....      BL       OLED_P8x16Str
   1075              usData = (int16)sData;
   \   00000034   0x46B3             MOV      R11,R6
   1076            }
   1077          
   1078              l  = (uint16)(usData / 10000) % 10;
   \                     ??OLED_PrintInt16_1: (+1)
   \   00000036   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000003A   0xF242 0x7010      MOVW     R0,#+10000
   \   0000003E   0xFB9B 0xF0F0      SDIV     R0,R11,R0
   \   00000042   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000044   0x210A             MOVS     R1,#+10
   \   00000046   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000004A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000004E   0x4681             MOV      R9,R0
   1079              m  = (uint16)(usData / 1000) % 10;
   \   00000050   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000054   0xF44F 0x707A      MOV      R0,#+1000
   \   00000058   0xFB9B 0xF0F0      SDIV     R0,R11,R0
   \   0000005C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000005E   0x210A             MOVS     R1,#+10
   \   00000060   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000064   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000068   0x4682             MOV      R10,R0
   1080              i  = (uint16)(usData / 100) % 10;
   \   0000006A   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000006E   0x2064             MOVS     R0,#+100
   \   00000070   0xFB9B 0xF0F0      SDIV     R0,R11,R0
   \   00000074   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000076   0x210A             MOVS     R1,#+10
   \   00000078   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000007C   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000080   0x0007             MOVS     R7,R0
   1081              j  = (uint16)(usData / 10) % 10;
   \   00000082   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   00000086   0x200A             MOVS     R0,#+10
   \   00000088   0xFB9B 0xF0F0      SDIV     R0,R11,R0
   \   0000008C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000008E   0x210A             MOVS     R1,#+10
   \   00000090   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000094   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000098   0x4680             MOV      R8,R0
   1082              k  = (uint16) usData % 10;
   \   0000009A   0xFA1F 0xFB8B      UXTH     R11,R11          ;; ZeroExt  R11,R11,#+16,#+16
   \   0000009E   0x200A             MOVS     R0,#+10
   \   000000A0   0xFB9B 0xF1F0      SDIV     R1,R11,R0
   \   000000A4   0xFB00 0xB011      MLS      R0,R0,R1,R11
   \   000000A8   0xF88D 0x0000      STRB     R0,[SP, #+0]
   1083          
   1084              
   1085              //万位
   1086              if ((uint8)l != 0)
   \   000000AC   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000B0   0xF1B9 0x0F00      CMP      R9,#+0
   \   000000B4   0xD00A             BEQ.N    ??OLED_PrintInt16_2
   1087              {
   1088                OLED_P8x16Char(ucIdxX+8,  ucIdxY, (uint8)l+48);
   \   000000B6   0xF119 0x0230      ADDS     R2,R9,#+48
   \   000000BA   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000BC   0x0029             MOVS     R1,R5
   \   000000BE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C0   0xF114 0x0008      ADDS     R0,R4,#+8
   \   000000C4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C6   0x.... 0x....      BL       OLED_P8x16Char
   \   000000CA   0xE007             B.N      ??OLED_PrintInt16_3
   1089              }
   1090              else
   1091              {
   1092                OLED_P8x16Str(ucIdxX+8,  ucIdxY, " ");
   \                     ??OLED_PrintInt16_2: (+1)
   \   000000CC   0x....             ADR.N    R2,??DataTable12_3  ;; " "
   \   000000CE   0x0029             MOVS     R1,R5
   \   000000D0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D2   0xF114 0x0008      ADDS     R0,R4,#+8
   \   000000D6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D8   0x.... 0x....      BL       OLED_P8x16Str
   1093              }
   1094              
   1095              //千位
   1096              if ( (uint8)m != 0 || (uint8)l != 0)
   \                     ??OLED_PrintInt16_3: (+1)
   \   000000DC   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000000E0   0xF1BA 0x0F00      CMP      R10,#+0
   \   000000E4   0xD104             BNE.N    ??OLED_PrintInt16_4
   \   000000E6   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000EA   0xF1B9 0x0F00      CMP      R9,#+0
   \   000000EE   0xD00A             BEQ.N    ??OLED_PrintInt16_5
   1097              {
   1098                OLED_P8x16Char(ucIdxX+16, ucIdxY, (uint8)m+48);
   \                     ??OLED_PrintInt16_4: (+1)
   \   000000F0   0xF11A 0x0230      ADDS     R2,R10,#+48
   \   000000F4   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000F6   0x0029             MOVS     R1,R5
   \   000000F8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000FA   0xF114 0x0010      ADDS     R0,R4,#+16
   \   000000FE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000100   0x.... 0x....      BL       OLED_P8x16Char
   \   00000104   0xE007             B.N      ??OLED_PrintInt16_6
   1099              }
   1100              else
   1101              {
   1102                OLED_P6x8Str(ucIdxX+16,  ucIdxY, " ");
   \                     ??OLED_PrintInt16_5: (+1)
   \   00000106   0x....             ADR.N    R2,??DataTable12_3  ;; " "
   \   00000108   0x0029             MOVS     R1,R5
   \   0000010A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000010C   0xF114 0x0010      ADDS     R0,R4,#+16
   \   00000110   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000112   0x.... 0x....      BL       OLED_P6x8Str
   1103              }
   1104              
   1105              
   1106              //百位
   1107              if ( (uint8)m != 0 || (uint8)l != 0 || (uint8)i != 0)
   \                     ??OLED_PrintInt16_6: (+1)
   \   00000116   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000011A   0xF1BA 0x0F00      CMP      R10,#+0
   \   0000011E   0xD107             BNE.N    ??OLED_PrintInt16_7
   \   00000120   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000124   0xF1B9 0x0F00      CMP      R9,#+0
   \   00000128   0xD102             BNE.N    ??OLED_PrintInt16_7
   \   0000012A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000012C   0x2F00             CMP      R7,#+0
   \   0000012E   0xD00A             BEQ.N    ??OLED_PrintInt16_8
   1108              {
   1109                OLED_P8x16Char(ucIdxX+24, ucIdxY, (uint8)i+48);
   \                     ??OLED_PrintInt16_7: (+1)
   \   00000130   0xF117 0x0230      ADDS     R2,R7,#+48
   \   00000134   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000136   0x0029             MOVS     R1,R5
   \   00000138   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000013A   0xF114 0x0018      ADDS     R0,R4,#+24
   \   0000013E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000140   0x.... 0x....      BL       OLED_P8x16Char
   \   00000144   0xE007             B.N      ??OLED_PrintInt16_9
   1110              }
   1111              else
   1112              {
   1113                OLED_P8x16Str(ucIdxX+24,  ucIdxY, " ");
   \                     ??OLED_PrintInt16_8: (+1)
   \   00000146   0x....             ADR.N    R2,??DataTable12_3  ;; " "
   \   00000148   0x0029             MOVS     R1,R5
   \   0000014A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000014C   0xF114 0x0018      ADDS     R0,R4,#+24
   \   00000150   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000152   0x.... 0x....      BL       OLED_P8x16Str
   1114              }
   1115              
   1116              //十位
   1117              if ( (uint8)m != 0 || (uint8)l != 0 || (uint8)i != 0 || (uint8)j != 0)
   \                     ??OLED_PrintInt16_9: (+1)
   \   00000156   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000015A   0xF1BA 0x0F00      CMP      R10,#+0
   \   0000015E   0xD10C             BNE.N    ??OLED_PrintInt16_10
   \   00000160   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000164   0xF1B9 0x0F00      CMP      R9,#+0
   \   00000168   0xD107             BNE.N    ??OLED_PrintInt16_10
   \   0000016A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000016C   0x2F00             CMP      R7,#+0
   \   0000016E   0xD104             BNE.N    ??OLED_PrintInt16_10
   \   00000170   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000174   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000178   0xD00A             BEQ.N    ??OLED_PrintInt16_11
   1118              {
   1119                OLED_P8x16Char(ucIdxX+32, ucIdxY, (uint8)j+48);
   \                     ??OLED_PrintInt16_10: (+1)
   \   0000017A   0xF118 0x0230      ADDS     R2,R8,#+48
   \   0000017E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000180   0x0029             MOVS     R1,R5
   \   00000182   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000184   0xF114 0x0020      ADDS     R0,R4,#+32
   \   00000188   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000018A   0x.... 0x....      BL       OLED_P8x16Char
   \   0000018E   0xE007             B.N      ??OLED_PrintInt16_12
   1120              }
   1121              else
   1122              {
   1123                OLED_P8x16Str(ucIdxX +32,  ucIdxY, " ");
   \                     ??OLED_PrintInt16_11: (+1)
   \   00000190   0x....             ADR.N    R2,??DataTable12_3  ;; " "
   \   00000192   0x0029             MOVS     R1,R5
   \   00000194   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000196   0xF114 0x0020      ADDS     R0,R4,#+32
   \   0000019A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019C   0x.... 0x....      BL       OLED_P8x16Str
   1124              }
   1125              
   1126              //个位
   1127              OLED_P8x16Char(ucIdxX+40, ucIdxY, (uint8)k+48);
   \                     ??OLED_PrintInt16_12: (+1)
   \   000001A0   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000001A4   0xF110 0x0230      ADDS     R2,R0,#+48
   \   000001A8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000001AA   0x0029             MOVS     R1,R5
   \   000001AC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001AE   0xF114 0x0028      ADDS     R0,R4,#+40
   \   000001B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001B4   0x.... 0x....      BL       OLED_P8x16Char
   1128          
   1129          
   1130            return;
   \   000001B8   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   1131          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x2D 0x00          DC8      "-",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x2B 0x00          DC8      "+",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     F8X16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     F14x16_Idx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     F14x16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x40F86A00         DC32     0x40f86a00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0xC0F869FF         DC32     0xc0f869ff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x40240000         DC32     0x40240000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x40590000         DC32     0x40590000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x408F4000         DC32     0x408f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     LIBLOGO60x58

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x........         DC32     LANDZO_LOGO

   \                                 In section .rodata, align 2
   \   00000000   0x20 0x00          DC8 " "

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x45 0x72          DC8 "Error!"
   \              0x72 0x6F    
   \              0x72 0x21    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 2
   \   00000000   0x2D 0x00          DC8 "-"

   \                                 In section .rodata, align 2
   \   00000000   0x2B 0x00          DC8 "+"
   1132          
   1133          //拟合曲线示波器
   1134          /*
   1135          void OLED_printosc(int16 data)  //data -160~160    line 0-64  line = 0.39375 * data +64
   1136          {
   1137            //attention it's a queue here!
   1138            static int16 osc_line[128] = {0};
   1139            
   1140            //pointer of fifo
   1141            static uint8 fifo = 0;
   1142            
   1143            uint8 i = 0,j = 0;
   1144            osc_line[fifo] = (int16)(0.2 * data + 31);
   1145            
   1146            if ( osc_line[fifo] > 63 )
   1147            {
   1148              osc_line[fifo] = 63;
   1149            }
   1150            
   1151            if ( osc_line[fifo] < 0 )
   1152            {
   1153              osc_line[fifo] = 0;
   1154            }
   1155            
   1156            fifo++;
   1157            
   1158          
   1159            if ( fifo >= 128 )
   1160            {
   1161              fifo = 0;
   1162            }
   1163            
   1164            OLED_CLS();
   1165            for ( i = 0;i < 8; i++ )
   1166            {
   1167              OLED_Set_Pos( 0, i );
   1168              for ( j = 0 ; j < 128;j++ )
   1169              {
   1170                if ( osc_line[j] > 63 - 8*i || osc_line[j] <= 55 - 8 * (i))
   1171                {
   1172                  OLED_WrDat(0x00);
   1173                }
   1174                else
   1175                {
   1176                  OLED_WrDat(0x80 >>  ( osc_line[j] - ( 55 - 8 * i ) -1));
   1177                }
   1178              }
   1179            }
   1180          
   1181          
   1182          }
   1183          */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Dly_ms
      40   Draw_BMP
        40   -> OLED_Set_Pos
        40   -> OLED_WrDat
      16   Draw_Landzo
        16   -> OLED_Set_Pos
        16   -> OLED_WrDat
      16   Draw_LibLogo
        16   -> OLED_Set_Pos
        16   -> OLED_WrDat
      48   OLEDIO_init
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4
      16   OLED_CLS
        16   -> OLED_WrCmd
        16   -> OLED_WrDat
       0   OLED_DLY_ms
      16   OLED_Fill
        16   -> OLED_WrCmd
        16   -> OLED_WrDat
       8   OLED_Init
         8   -> LPLD_GPIO_Output_b
         8   -> OLEDIO_init
         8   -> OLED_DLY_ms
         8   -> OLED_Fill
         8   -> OLED_Set_Pos
         8   -> OLED_WrCmd
      32   OLED_P14x16Str
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
      24   OLED_P6x8Char
        24   -> OLED_Set_Pos
        24   -> OLED_WrDat
      32   OLED_P6x8Str
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
      32   OLED_P8x16Char
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
      32   OLED_P8x16Str
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
      24   OLED_Print
        24   -> OLED_P14x16Str
        24   -> OLED_P8x16Str
      72   OLED_PrintFloat
        72   -> OLED_P8x16Char
        72   -> OLED_P8x16Str
        72   -> __aeabi_d2iz
        72   -> __aeabi_ddiv
        72   -> __aeabi_dmul
        72   -> __aeabi_i2d
        72 __aeabi_cdcmple
        72 __aeabi_cdrcmple
      40   OLED_PrintInt16
        40   -> OLED_P6x8Str
        40   -> OLED_P8x16Char
        40   -> OLED_P8x16Str
      16   OLED_PutPixel
        16   -> OLED_Set_Pos
        16   -> OLED_WrCmd
        16   -> OLED_WrDat
      32   OLED_Rectangle
        32   -> OLED_DLY_ms
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
      16   OLED_Set_Pos
        16   -> OLED_WrCmd
      16   OLED_WrCmd
        16   -> LPLD_GPIO_Output_b
      16   OLED_WrDat
        16   -> LPLD_GPIO_Output_b


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       2  ?_0
       8  ?_1
       2  ?_2
       2  ?_3
      52  Dly_ms
     128  Draw_BMP
      56  Draw_Landzo
      56  Draw_LibLogo
     364  F14x16
      28  F14x16_Idx
     552  F6x8
    1520  F8X16
     300  LANDZO_LOGO
     480  LIBLOGO60x58
      58  OLEDIO_init
      60  OLED_CLS
      28  OLED_DLY_ms
      64  OLED_Fill
     244  OLED_Init
     320  OLED_P14x16Str
      80  OLED_P6x8Char
     124  OLED_P6x8Str
     140  OLED_P8x16Char
     170  OLED_P8x16Str
     106  OLED_Print
     580  OLED_PrintFloat
     444  OLED_PrintInt16
      80  OLED_PutPixel
     152  OLED_Rectangle
      46  OLED_Set_Pos
     102  OLED_WrCmd
     102  OLED_WrDat
     768  lanzhou96x64
     528  mushroom
      32  sky1
      32  sky2
      32  sky3

 
 1 692 bytes in section .data
 2 958 bytes in section .rodata
 3 260 bytes in section .text
 
 3 260 bytes of CODE  memory
 2 958 bytes of CONST memory
 1 692 bytes of DATA  memory

Errors: none
Warnings: none
