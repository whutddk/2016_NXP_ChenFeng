###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        13/Mar/2016  16:39:14
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\app\ITAC\key.c
#    Command line =  
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\app\ITAC\key.c"
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\"
#        -lB
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\"
#        -o
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\MAIN\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\BSP\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\CTL\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\sensor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\ITAC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\CPU\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\FatFs\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\driver\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\class\"
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\key.lst
#    Object file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\Obj\key.o
#
###############################################################################

D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\app\ITAC\key.c
      1          #include "include.h"
      2          
      3          
      4          #define KEY_A  PTB20_I
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void key_init()
      7          {
   \                     key_init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
      8            GPIO_InitTypeDef key_inittype;
      9            
     10            key_inittype.GPIO_PTx = PTB;
   \   00000004   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff040
   \   00000006   0x9001             STR      R0,[SP, #+4]
     11            key_inittype.GPIO_Pins = GPIO_Pin17 | GPIO_Pin20 | GPIO_Pin21 | GPIO_Pin22 | GPIO_Pin23; 
   \   00000008   0xF45F 0x0072      MOVS     R0,#+15859712
   \   0000000C   0x9002             STR      R0,[SP, #+8]
     12            key_inittype.GPIO_Dir = DIR_INPUT;        //输入
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0xF88D 0x0010      STRB     R0,[SP, #+16]
     13            key_inittype.GPIO_PinControl = INPUT_PULL_UP | IRQC_FA; //上拉 下降沿触发外部中断
   \   00000014   0x....             LDR.N    R0,??DataTable1_1  ;; 0xa0003
   \   00000016   0x9003             STR      R0,[SP, #+12]
     14            key_inittype.GPIO_Isr = key;
   \   00000018   0x.... 0x....      ADR.W    R0,key
   \   0000001C   0x9005             STR      R0,[SP, #+20]
     15            LPLD_GPIO_Init(key_inittype);
   \   0000001E   0xA901             ADD      R1,SP,#+4
   \   00000020   0xB084             SUB      SP,SP,#+16
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x2214             MOVS     R2,#+20
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002A   0xBC0F             POP      {R0-R3}
   \   0000002C   0x.... 0x....      BL       LPLD_GPIO_Init
     16            
     17            //使能中断
     18            LPLD_GPIO_EnableIrq(key_inittype);
   \   00000030   0xA901             ADD      R1,SP,#+4
   \   00000032   0xB084             SUB      SP,SP,#+16
   \   00000034   0x4668             MOV      R0,SP
   \   00000036   0x2214             MOVS     R2,#+20
   \   00000038   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000003C   0xBC0F             POP      {R0-R3}
   \   0000003E   0x.... 0x....      BL       LPLD_GPIO_EnableIrq
     19          }
   \   00000042   0xB007             ADD      SP,SP,#+28
   \   00000044   0xBD00             POP      {PC}             ;; return
     20          

   \                                 In section .text, align 4, keep-with-next
     21          void key()
     22          {
   \                     key: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     23            uint8 i = 0;
   \   00000002   0x2400             MOVS     R4,#+0
     24          
     25            // bz_set(datarec);
     26            if  LPLD_GPIO_IsPinxExt(PORTB, GPIO_Pin23) //上 中断
   \   00000004   0x....             LDR.N    R0,??DataTable1_2  ;; 0x4004a0a0
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x0200             LSLS     R0,R0,#+8
   \   0000000A   0xD504             BPL.N    ??key_0
     27            {
     28              LPLD_GPIO_ClearIntFlag(PORTB);//清中断标志
   \   0000000C   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000010   0x....             LDR.N    R1,??DataTable1_2  ;; 0x4004a0a0
   \   00000012   0x6008             STR      R0,[R1, #+0]
     29              
     30              //操作
     31              
     32              return;
   \   00000014   0xE03F             B.N      ??key_1
     33            }
     34            
     35            if  LPLD_GPIO_IsPinxExt(PORTB, GPIO_Pin20) //中 中断
   \                     ??key_0: (+1)
   \   00000016   0x....             LDR.N    R0,??DataTable1_2  ;; 0x4004a0a0
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x02C0             LSLS     R0,R0,#+11
   \   0000001C   0xD520             BPL.N    ??key_2
     36            {
     37              LPLD_GPIO_ClearIntFlag(PORTB);//清中断标志
   \   0000001E   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000022   0x....             LDR.N    R1,??DataTable1_2  ;; 0x4004a0a0
   \   00000024   0x6008             STR      R0,[R1, #+0]
     38              
     39              //操作
     40              
     41              if(KEY_A == 0)
   \   00000026   0x....             LDR.N    R0,??DataTable1_3  ;; 0x43fe0a50
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD117             BNE.N    ??key_3
     42              {
     43                //去抖
     44                LPLD_LPTMR_DelayMs(5);
   \   0000002E   0x2005             MOVS     R0,#+5
   \   00000030   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     45                
     46                if(KEY_A == 0)
   \   00000034   0x....             LDR.N    R0,??DataTable1_3  ;; 0x43fe0a50
   \   00000036   0x6800             LDR      R0,[R0, #+0]
     47                {
     48                  
     49                }
     50                
     51                  //直到按键松开再运行
     52                  while(KEY_A == 0)
   \                     ??key_4: (+1)
   \   00000038   0x....             LDR.N    R0,??DataTable1_3  ;; 0x43fe0a50
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD10B             BNE.N    ??key_5
     53                  {
     54                    for(i=0;i<250;i++)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x0004             MOVS     R4,R0
   \                     ??key_6: (+1)
   \   00000044   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000046   0x2CFA             CMP      R4,#+250
   \   00000048   0xDAF6             BGE.N    ??key_4
     55                    {
     56                      
     57                     LPLD_LPTMR_DelayMs(10);
   \   0000004A   0x200A             MOVS     R0,#+10
   \   0000004C   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     58                    sensor_isr();
   \   00000050   0x.... 0x....      BL       sensor_isr
     59                   // PIT2_init();
     60                    }
   \   00000054   0x1C64             ADDS     R4,R4,#+1
   \   00000056   0xE7F5             B.N      ??key_6
     61                  
     62                  } 
     63                 
     64                  bz_set(datarec);
   \                     ??key_5: (+1)
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       bz_set
     65                }
     66                
     67              return;
   \                     ??key_3: (+1)
   \   0000005E   0xE01A             B.N      ??key_1
     68            }
     69          
     70            if  LPLD_GPIO_IsPinxExt(PORTB, GPIO_Pin22) //左 中断
   \                     ??key_2: (+1)
   \   00000060   0x....             LDR.N    R0,??DataTable1_2  ;; 0x4004a0a0
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x0240             LSLS     R0,R0,#+9
   \   00000066   0xD504             BPL.N    ??key_7
     71            {
     72              LPLD_GPIO_ClearIntFlag(PORTB);//清中断标志
   \   00000068   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000006C   0x....             LDR.N    R1,??DataTable1_2  ;; 0x4004a0a0
   \   0000006E   0x6008             STR      R0,[R1, #+0]
     73              
     74              //操作
     75              
     76              return;
   \   00000070   0xE011             B.N      ??key_1
     77            }
     78          
     79            if  LPLD_GPIO_IsPinxExt(PORTB, GPIO_Pin17) //右 中断
   \                     ??key_7: (+1)
   \   00000072   0x....             LDR.N    R0,??DataTable1_2  ;; 0x4004a0a0
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x0380             LSLS     R0,R0,#+14
   \   00000078   0xD504             BPL.N    ??key_8
     80            {
     81              LPLD_GPIO_ClearIntFlag(PORTB);//清中断标志
   \   0000007A   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000007E   0x....             LDR.N    R1,??DataTable1_2  ;; 0x4004a0a0
   \   00000080   0x6008             STR      R0,[R1, #+0]
     82              
     83              //操作
     84              
     85              return;
   \   00000082   0xE008             B.N      ??key_1
     86            }
     87          
     88            if  LPLD_GPIO_IsPinxExt(PORTB, GPIO_Pin21) //下 中断
   \                     ??key_8: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable1_2  ;; 0x4004a0a0
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x0280             LSLS     R0,R0,#+10
   \   0000008A   0xD504             BPL.N    ??key_9
     89            {
     90              LPLD_GPIO_ClearIntFlag(PORTB);//清中断标志
   \   0000008C   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000090   0x....             LDR.N    R1,??DataTable1_2  ;; 0x4004a0a0
   \   00000092   0x6008             STR      R0,[R1, #+0]
     91              
     92              //操作
     93              
     94              return;
   \   00000094   0xE7FF             B.N      ??key_1
     95            }
     96            
     97            
     98            
     99          }
   \                     ??key_9: (+1)
   \                     ??key_1: (+1)
   \   00000096   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x000A0003         DC32     0xa0003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x4004A0A0         DC32     0x4004a0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x43FE0A50         DC32     0x43fe0a50

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   key
         8   -> LPLD_LPTMR_DelayMs
         8   -> bz_set
         8   -> sensor_isr
      48   key_init
        32   -> LPLD_GPIO_EnableIrq
        32   -> LPLD_GPIO_Init
        48   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
     152  key
      70  key_init

 
 238 bytes in section .text
 
 238 bytes of CODE memory

Errors: none
Warnings: none
