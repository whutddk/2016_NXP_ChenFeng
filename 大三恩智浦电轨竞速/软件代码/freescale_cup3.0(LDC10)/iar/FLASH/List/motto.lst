###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        13/Mar/2016  16:39:16
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\app\CTL\motto.c
#    Command line =  
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\app\CTL\motto.c"
#        -D LPLD_K60 -D USE_K60DZ10 -lCN
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\"
#        -lB
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\"
#        -o
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\MAIN\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\BSP\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\CTL\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\sensor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\ITAC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\CPU\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\FatFs\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\driver\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\class\"
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\motto.lst
#    Object file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\Obj\motto.o
#
###############################################################################

D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\app\CTL\motto.c
      1          //电机控制
      2          #include "include.h"
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void motto_set()
      5          {
   \                     motto_set: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      6            //限幅
      7            if ( ctl.motto.out > 7000 )
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0x6E00             LDR      R0,[R0, #+96]
   \   00000006   0x....             LDR.N    R1,??DataTable2_1  ;; 0x45dac001
   \   00000008   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000000C   0xD803             BHI.N    ??motto_set_0
      8            {
      9              ctl.motto.out = 7000;
   \   0000000E   0x....             LDR.N    R0,??DataTable2_2  ;; 0x45dac000
   \   00000010   0x....             LDR.N    R1,??DataTable2
   \   00000012   0x6608             STR      R0,[R1, #+96]
   \   00000014   0xE008             B.N      ??motto_set_1
     10            }
     11            else if ( ctl.motto.out < -7000 )
   \                     ??motto_set_0: (+1)
   \   00000016   0x....             LDR.N    R0,??DataTable2
   \   00000018   0x6E00             LDR      R0,[R0, #+96]
   \   0000001A   0x....             LDR.N    R1,??DataTable2_3  ;; 0xc5dac000
   \   0000001C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000020   0xD202             BCS.N    ??motto_set_1
     12            {
     13              ctl.motto.out = -7000;
   \   00000022   0x....             LDR.N    R0,??DataTable2_3  ;; 0xc5dac000
   \   00000024   0x....             LDR.N    R1,??DataTable2
   \   00000026   0x6608             STR      R0,[R1, #+96]
     14            }
     15          
     16            if ( ctl.motto.out >= 0.000000  )
   \                     ??motto_set_1: (+1)
   \   00000028   0x....             LDR.N    R0,??DataTable2
   \   0000002A   0x6E00             LDR      R0,[R0, #+96]
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000032   0xD80E             BHI.N    ??motto_set_2
     17            {
     18              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, (uint32) ( ctl.motto.out ) );
   \   00000034   0x....             LDR.N    R0,??DataTable2
   \   00000036   0x6E00             LDR      R0,[R0, #+96]
   \   00000038   0x.... 0x....      BL       __aeabi_f2uiz
   \   0000003C   0x0002             MOVS     R2,R0
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   00000042   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     19              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, (uint32) 0 );
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   0000004C   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
   \   00000050   0xE015             B.N      ??motto_set_3
     20            }
     21            else if ( ctl.motto.out < 0.000000 )
   \                     ??motto_set_2: (+1)
   \   00000052   0x....             LDR.N    R0,??DataTable2
   \   00000054   0x6E00             LDR      R0,[R0, #+96]
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000005C   0xD20F             BCS.N    ??motto_set_3
     22            {
     23              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0 );
   \   0000005E   0x2200             MOVS     R2,#+0
   \   00000060   0x2101             MOVS     R1,#+1
   \   00000062   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   00000064   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     24              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, (uint32) ( -ctl.motto.out ) );
   \   00000068   0x....             LDR.N    R0,??DataTable2
   \   0000006A   0x6E00             LDR      R0,[R0, #+96]
   \   0000006C   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000070   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000074   0x0002             MOVS     R2,R0
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   0000007A   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     25            }
     26            
     27            push(14,ctl.motto.out);
   \                     ??motto_set_3: (+1)
   \   0000007E   0x....             LDR.N    R0,??DataTable2
   \   00000080   0x6E00             LDR      R0,[R0, #+96]
   \   00000082   0x.... 0x....      BL       __aeabi_f2iz
   \   00000086   0x0001             MOVS     R1,R0
   \   00000088   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000008A   0x200E             MOVS     R0,#+14
   \   0000008C   0x.... 0x....      BL       `push`
     28          }
   \   00000090   0xBD01             POP      {R0,PC}          ;; return
     29          
     30          
     31          
     32          //轮子172mm 5000个脉冲
     33          

   \                                 In section .text, align 2, keep-with-next
     34          void motto_getsped()
     35          {
   \                     motto_getsped: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     36            
     37            ctl.motto.sped_cur =  LPLD_FTM_GetCounter(FTM2)  ;//赋值需要不可以连等
   \   00000002   0x....             LDR.N    R0,??DataTable2_5  ;; 0x400b8000
   \   00000004   0x.... 0x....      BL       LPLD_FTM_GetCounter
   \   00000008   0x....             LDR.N    R1,??DataTable2
   \   0000000A   0x8708             STRH     R0,[R1, #+56]
     38            
     39            LPLD_FTM_ClearCounter(FTM2);
   \   0000000C   0x....             LDR.N    R0,??DataTable2_5  ;; 0x400b8000
   \   0000000E   0x.... 0x....      BL       LPLD_FTM_ClearCounter
     40            
     41          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
     42          
     43          
     44          
     45          

   \                                 In section .bss, align 1
     46          int8 Straight_Flag=0;
   \                     Straight_Flag:
   \   00000000                      DS8 1
     47          

   \                                 In section .text, align 2, keep-with-next
     48          void ctl_sped() //速度控制，增量式PI控制
     49          {
   \                     ctl_sped: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     50          //  if(line.pos > 60 || line.pos < -60)
     51          //  {   
     52          //    ctl.motto.distance += ctl.motto.sped_cur;
     53          //    
     54          //    if(ctl.motto.distance >= 5000)
     55          //    {
     56          //      Straight_Flag = 1;
     57          //    }  
     58          //    else
     59          //    {
     60          //      Straight_Flag =0;  
     61          //    }  
     62          //  }
     63          //  else
     64          //  {
     65          //    Straight_Flag = 0;
     66          //    ctl.motto.distance = 0;
     67          //  }
     68          //  if(Straight_Flag == 1)
     69          //  {
     70          //    ctl.motto.error[1] =   ctl.motto.aim * 1.15 - ctl.motto.sped_cur;
     71          //    
     72          //  }
     73          //  else
     74          //  {
     75              ctl.motto.error[1] =   ctl.motto.aim  - ctl.motto.sped_cur;
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0xF9B0 0x003A      LDRSH    R0,[R0, #+58]
   \   00000008   0x....             LDR.N    R1,??DataTable2
   \   0000000A   0xF9B1 0x1038      LDRSH    R1,[R1, #+56]
   \   0000000E   0x1A40             SUBS     R0,R0,R1
   \   00000010   0x.... 0x....      BL       __aeabi_i2f
   \   00000014   0x....             LDR.N    R1,??DataTable2
   \   00000016   0x6688             STR      R0,[R1, #+104]
     76           // }
     77            ctl.motto.result[1]  = (-ctl.motto.Kp)  * ( ctl.motto.error[1] - ctl.motto.error[0] );
   \   00000018   0x....             LDR.N    R0,??DataTable2
   \   0000001A   0x6E80             LDR      R0,[R0, #+104]
   \   0000001C   0x....             LDR.N    R1,??DataTable2
   \   0000001E   0x6E49             LDR      R1,[R1, #+100]
   \   00000020   0x.... 0x....      BL       __aeabi_fsub
   \   00000024   0x....             LDR.N    R1,??DataTable2
   \   00000026   0x6BC9             LDR      R1,[R1, #+60]
   \   00000028   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000002C   0x.... 0x....      BL       __aeabi_fmul
   \   00000030   0x....             LDR.N    R1,??DataTable2
   \   00000032   0x65C8             STR      R0,[R1, #+92]
     78            ctl.motto.result[1] += (-ctl.motto.Ki)  *   ctl.motto.error[1];
   \   00000034   0x....             LDR.N    R0,??DataTable2
   \   00000036   0x6C01             LDR      R1,[R0, #+64]
   \   00000038   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000003C   0x....             LDR.N    R0,??DataTable2
   \   0000003E   0x6E80             LDR      R0,[R0, #+104]
   \   00000040   0x.... 0x....      BL       __aeabi_fmul
   \   00000044   0x....             LDR.N    R1,??DataTable2
   \   00000046   0x6DC9             LDR      R1,[R1, #+92]
   \   00000048   0x.... 0x....      BL       __aeabi_fadd
   \   0000004C   0x....             LDR.N    R1,??DataTable2
   \   0000004E   0x65C8             STR      R0,[R1, #+92]
     79            
     80            ctl.motto.error[0] = ctl.motto.error[1];  
   \   00000050   0x....             LDR.N    R0,??DataTable2
   \   00000052   0x6E80             LDR      R0,[R0, #+104]
   \   00000054   0x....             LDR.N    R1,??DataTable2
   \   00000056   0x6648             STR      R0,[R1, #+100]
     81            ctl.motto.out += ctl.motto.result[1];
   \   00000058   0x....             LDR.N    R0,??DataTable2
   \   0000005A   0x6E01             LDR      R1,[R0, #+96]
   \   0000005C   0x....             LDR.N    R0,??DataTable2
   \   0000005E   0x6DC0             LDR      R0,[R0, #+92]
   \   00000060   0x.... 0x....      BL       __aeabi_fadd
   \   00000064   0x....             LDR.N    R1,??DataTable2
   \   00000066   0x6608             STR      R0,[R1, #+96]
     82            
     83            
     84            push(4,ctl.motto.aim);
   \   00000068   0x....             LDR.N    R0,??DataTable2
   \   0000006A   0x8F41             LDRH     R1,[R0, #+58]
   \   0000006C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000006E   0x2004             MOVS     R0,#+4
   \   00000070   0x.... 0x....      BL       `push`
     85            push(5,ctl.motto.sped_cur);
   \   00000074   0x....             LDR.N    R0,??DataTable2
   \   00000076   0x8F01             LDRH     R1,[R0, #+56]
   \   00000078   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000007A   0x2005             MOVS     R0,#+5
   \   0000007C   0x.... 0x....      BL       `push`
     86          }
   \   00000080   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ctl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x45DAC001         DC32     0x45dac001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x45DAC000         DC32     0x45dac000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0xC5DAC000         DC32     0xc5dac000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x400B8000         DC32     0x400b8000
     87          
     88          
     89          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ctl_sped
         8   -> __aeabi_fadd
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_i2f
         8   -> push
       8   motto_getsped
         8   -> LPLD_FTM_ClearCounter
         8   -> LPLD_FTM_GetCounter
       8   motto_set
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> __aeabi_f2iz
         8   -> __aeabi_f2uiz
         8   -> push
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       1  Straight_Flag
     130  ctl_sped
      20  motto_getsped
     146  motto_set

 
   1 byte  in section .bss
 320 bytes in section .text
 
 320 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: 1
