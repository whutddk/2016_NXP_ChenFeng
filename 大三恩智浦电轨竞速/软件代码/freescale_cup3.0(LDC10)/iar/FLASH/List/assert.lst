###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        12/Mar/2016  16:28:55
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\LPLDV3.1\LPLD_OSKinetis_V3\lib\common\assert.c
#    Command line =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\lib\common\assert.c -D LPLD_K60 -D
#        USE_K60DZ10 -lCN
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\"
#        -lB
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\"
#        -o
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\MAIN\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\BSP\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\CTL\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\sensor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\ITAC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\CPU\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\FatFs\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\driver\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\class\"
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\assert.lst
#    Object file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\Obj\assert.o
#
###############################################################################

D:\LPLDV3.1\LPLD_OSKinetis_V3\lib\common\assert.c
      1          /**
      2           * @file assert.c
      3           * @version 3.0[By LPLD]
      4           * @date 2013-06-18
      5           * @brief 断言函数定义
      6           *
      7           * 更改建议:不建议修改
      8           *
      9           * 一般不直接调用这里的断言函数，需要调用assert.h中的ASSERT宏定义
     10           *
     11           * 版权所有:北京拉普兰德电子技术有限公司
     12           * http://www.lpld.cn
     13           * mail:support@lpld.cn
     14           *
     15           * @par
     16           * 本代码由拉普兰德[LPLD]开发并维护，并向所有使用者开放源代码。
     17           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     18           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     19           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     20           * 拉普兰德不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     21           * 拉普兰德无义务解释、说明本代码的具体原理、功能、实现方法。
     22           * 除非拉普兰德[LPLD]授权，开发者不得将本代码用于商业产品。
     23           */
     24          
     25          #include "common.h"
     26          

   \                                 In section .rodata, align 4
     27          const int8 ASSERT_FAILED_STR[] = "断言失败发生于 %s 代码的第 %d 行，请检查参数。\n";
   \                     ASSERT_FAILED_STR:
   \   00000000   0xB6 0xCF          DC8 "\266\317\321\324\312\247\260\334\267\242\311\372\323\332 %s \264\372\302\353\265\304\265\332 %d \320\320\243\254\307\353\274\354\262\351\262\316\312\375\241\243\012"
   \              0xD1 0xD4    
   \              0xCA 0xA7    
   \              0xB0 0xDC    
   \              0xB7 0xA2    
   \              0xC9 0xFA    
   \              0xD3 0xDA    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0xB4 0xFA    
   \              0xC2 0xEB    
   \              0xB5 0xC4    
   \              0xB5 0xDA    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0xD0 0xD0    
   \              0xA3 0xAC    
   \              0xC7 0xEB    
   \              0xBC 0xEC    
   \              0xB2 0xE9    
   \              0xB2 0xCE    
   \              0xCA 0xFD    
   \              0xA1 0xA3    
   \              0x0A 0x00    
     28          
     29          /********************************************************************/

   \                                 In section .text, align 4, keep-with-next
     30          void assert_failed(int8 *file, int32 line)
     31          {
   \                     assert_failed: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     32            printf(ASSERT_FAILED_STR, file, line);
   \   00000006   0x002A             MOVS     R2,R5
   \   00000008   0x0021             MOVS     R1,R4
   \   0000000A   0x4802             LDR.N    R0,??assert_failed_0
   \   0000000C   0x.... 0x....      BL       printf
     33          
     34            while (1)
   \                     ??assert_failed_1: (+1)
   \   00000010   0xE7FE             B.N      ??assert_failed_1
   \   00000012   0xBF00             Nop      
   \                     ??assert_failed_0:
   \   00000014   0x........         DC32     ASSERT_FAILED_STR
     35            {}
     36          }
     37          /********************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   assert_failed
        16   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      48  ASSERT_FAILED_STR
      24  assert_failed

 
 48 bytes in section .rodata
 24 bytes in section .text
 
 24 bytes of CODE  memory
 48 bytes of CONST memory

Errors: none
Warnings: none
