###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        12/Mar/2016  16:29:29
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\LPLDV3.1\LPLD_OSKinetis_V3\lib\CPU\system_MK60.c
#    Command line =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\lib\CPU\system_MK60.c -D LPLD_K60 -D
#        USE_K60DZ10 -lCN
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\"
#        -lB
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\"
#        -o
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\MAIN\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\BSP\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\CTL\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\sensor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\app\ITAC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\CPU\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\HW\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\DEV\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\LPLD\FUNC\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\uCOS-II\Ports\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\uCOS-II\Source\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\FatFs\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\FatFs\option\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\common\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\driver\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\descriptor\"
#        -I
#        "D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\..\..\..\lib\USB\class\"
#        -On -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\List\system_MK60.lst
#    Object file  =  
#        D:\LPLDV3.1\LPLD_OSKinetis_V3\project\freescale_cup3.0(LDC10)\iar\FLASH\Obj\system_MK60.o
#
###############################################################################

D:\LPLDV3.1\LPLD_OSKinetis_V3\lib\CPU\system_MK60.c
      1          /**
      2           * @file system_MK60.c
      3           * @version 1.2.1[By LPLD]
      4           * @date 2013-06-18
      5           * @brief MK60系列单片机系统配置文件
      6           *
      7           * 更改建议:禁止修改
      8           *
      9           * 该代码提供系统配置函数以及一个储存系统主频的全局变量。
     10           * 配置函数主要负责建立系统各模块的时钟。
     11           * 代码还实现常见的系统中断函数。
     12           *
     13           * 版权所有:北京拉普兰德电子技术有限公司
     14           * http://www.lpld.cn
     15           * mail:support@lpld.cn
     16           *
     17           * @par
     18           * 本代码由拉普兰德[LPLD]开发并维护，并向所有使用者开放源代码。
     19           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     20           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     21           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     22           * 拉普兰德不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     23           * 拉普兰德无义务解释、说明本代码的具体原理、功能、实现方法。
     24           * 除非拉普兰德[LPLD]授权，开发者不得将本代码用于商业产品。
     25           */
     26          
     27          #include <stdint.h>
     28          #include "common.h"
     29          
     30          #define DISABLE_WDOG    1
     31          
     32          /*----------------------------------------------------------------------------
     33            定义时钟相关值
     34           *----------------------------------------------------------------------------*/
     35          #define CPU_XTAL32k_CLK_HZ              32768u          //外部32k时钟晶振频率，单位Hz    
     36          #define CPU_INT_SLOW_CLK_HZ             32768u          //慢速内部振荡器的值，单位Hz
     37          #define CPU_INT_FAST_CLK_HZ             4000000u        //快速内部振荡器的值，单位Hz
     38          #define DEFAULT_SYSTEM_CLOCK            100000000u      //默认系统主频，单位Hz
     39          
     40          static void flash_identify (void);
     41          static void cpu_identify (void);
     42          static void Diagnostic_Reset_Source(void);
     43          /**
     44           * @brief 系统主频（单位Hz）
     45           */

   \                                 In section .data, align 4
     46          uint32_t SystemCoreClock = DEFAULT_SYSTEM_CLOCK;
   \                     SystemCoreClock:
   \   00000000   0x05F5E100         DC32 100000000
     47          
     48          /**
     49           * 初始化系统
     50           *
     51           * @param  none
     52           * @return none
     53           *
     54           * @brief  初始化MCU硬件系统，包括开放IO时钟、初始化主频、初始化调试串口，
     55           *         打印调试信息。SystemInit由MCU启动文件调用。
     56           *         
     57           */

   \                                 In section .text, align 2, keep-with-next
     58          void SystemInit (void) {
   \                     SystemInit: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
     59            UART_InitTypeDef term_port_structure;
     60            //使能全部IO时钟
     61            SIM->SCGC5 |= (SIM_SCGC5_PORTA_MASK
     62                        | SIM_SCGC5_PORTB_MASK
     63                        | SIM_SCGC5_PORTC_MASK
     64                        | SIM_SCGC5_PORTD_MASK
     65                        | SIM_SCGC5_PORTE_MASK );
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x40048038
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40048038
   \   00000012   0x6008             STR      R0,[R1, #+0]
     66          #if (DISABLE_WDOG)
     67            //禁用看门狗模块
     68            /* WDOG_UNLOCK: WDOGUNLOCK=0xC520 */
     69            WDOG->UNLOCK = (uint16)0xC520u;     /* Key 1 */
   \   00000014   0xF24C 0x5020      MOVW     R0,#+50464
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x4005200e
   \   0000001C   0x8008             STRH     R0,[R1, #+0]
     70            /* WDOG_UNLOCK : WDOGUNLOCK=0xD928 */
     71            WDOG->UNLOCK  = (uint16)0xD928u;    /* Key 2 */
   \   0000001E   0xF64D 0x1028      MOVW     R0,#+55592
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x4005200e
   \   00000026   0x8008             STRH     R0,[R1, #+0]
     72            /* WDOG_STCTRLH: ??=0,DISTESTWDOG=0,BYTESEL=0,TESTSEL=0,TESTWDOG=0,??=0,STNDBYEN=1,WAITEN=1,STOPEN=1,DBGEN=0,ALLOWUPDATE=1,WINEN=0,IRQRSTEN=0,CLKSRC=1,WDOGEN=0 */
     73            WDOG->STCTRLH = (uint16)0x01D2u;
   \   00000028   0xF44F 0x70E9      MOV      R0,#+466
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable6_2  ;; 0x40052000
   \   00000030   0x8008             STRH     R0,[R1, #+0]
     74          #endif /* (DISABLE_WDOG) */
     75            
     76            //将中断向量表、需在RAM中运行的函数等数据拷贝到RAM中
     77            common_relocate();
   \   00000032   0x.... 0x....      BL       common_relocate
     78            
     79            //初始化各部分时钟：系统内核主频、总线时钟、FlexBus时钟、Flash时钟
     80            LPLD_PLL_Setup(CORE_CLK_MHZ);
   \   00000036   0x2060             MOVS     R0,#+96
   \   00000038   0x.... 0x....      BL       LPLD_PLL_Setup
     81            
     82            //更新内核主频
     83            SystemCoreClockUpdate();
   \   0000003C   0x.... 0x....      BL       SystemCoreClockUpdate
     84            
     85            //获取各部分时钟
     86            g_core_clock = SystemCoreClock;
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000004A   0x6008             STR      R0,[R1, #+0]
     87            g_bus_clock = g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV2_MASK) >> SIM_CLKDIV1_OUTDIV2_SHIFT)+ 1u);
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable6_5  ;; 0x40048044
   \   00000056   0x6809             LDR      R1,[R1, #+0]
   \   00000058   0xF3C1 0x6103      UBFX     R1,R1,#+24,#+4
   \   0000005C   0x1C49             ADDS     R1,R1,#+1
   \   0000005E   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000066   0x6008             STR      R0,[R1, #+0]
     88            g_flexbus_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV3_MASK) >> SIM_CLKDIV1_OUTDIV3_SHIFT)+ 1u);
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable6_5  ;; 0x40048044
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0xF3C1 0x5103      UBFX     R1,R1,#+20,#+4
   \   00000078   0x1C49             ADDS     R1,R1,#+1
   \   0000007A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   00000082   0x6008             STR      R0,[R1, #+0]
     89            g_flash_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV4_MASK) >> SIM_CLKDIV1_OUTDIV4_SHIFT)+ 1u);
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable6_5  ;; 0x40048044
   \   0000008E   0x6809             LDR      R1,[R1, #+0]
   \   00000090   0xF3C1 0x4103      UBFX     R1,R1,#+16,#+4
   \   00000094   0x1C49             ADDS     R1,R1,#+1
   \   00000096   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000009E   0x6008             STR      R0,[R1, #+0]
     90            
     91            //初始化用于打印调试信息的串口模块
     92            //TERM_PORT为UART通道，在k60_card.h中定义
     93            //TERMINAL_BAUD为UART波特率，在k60_card.h中定义
     94            term_port_structure.UART_Uartx = TERM_PORT;
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable6_9  ;; 0x400eb000
   \   000000A4   0x9003             STR      R0,[SP, #+12]
     95            term_port_structure.UART_BaudRate = TERMINAL_BAUD;
   \   000000A6   0xF45F 0x30E1      MOVS     R0,#+115200
   \   000000AA   0x9004             STR      R0,[SP, #+16]
     96            LPLD_UART_Init(term_port_structure);
   \   000000AC   0xA903             ADD      R1,SP,#+12
   \   000000AE   0xB084             SUB      SP,SP,#+16
   \   000000B0   0x4668             MOV      R0,SP
   \   000000B2   0x221C             MOVS     R2,#+28
   \   000000B4   0x.... 0x....      BL       __aeabi_memcpy4
   \   000000B8   0xBC0F             POP      {R0-R3}
   \   000000BA   0x.... 0x....      BL       LPLD_UART_Init
     97            
     98            //打印系统调试信息
     99          #ifdef DEBUG_PRINT     
    100            printf("\r\n");   
   \   000000BE   0x....             ADR.N    R0,??DataTable3  ;; 0x0D, 0x0A, 0x00, 0x00
   \   000000C0   0x.... 0x....      BL       printf
    101            printf("*********** 基于拉普兰德K60底层库 http://www.lpld.cn ***********\r\n");
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable6_10
   \   000000C8   0x.... 0x....      BL       printf
    102            printf("OSKinetis固件库版本:%s\tmail:support@lpld.cn\r\n", OSKinetis_Version);
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable6_11
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable6_12
   \   000000D4   0x.... 0x....      BL       printf
    103            printf("系统内核时钟:%dMHz\t总线时钟:%dMHz\r\n", g_core_clock/1000000u, g_bus_clock/1000000u);
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable6_13  ;; 0xf4240
   \   000000E2   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable6_13  ;; 0xf4240
   \   000000F0   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable6_14
   \   000000F8   0x.... 0x....      BL       printf
    104            printf("FlexBus时钟:%dMHz\tFlash时钟:%dMHz\r\n", g_flexbus_clock/1000000u, g_flash_clock/1000000u);
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable6_13  ;; 0xf4240
   \   00000106   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable6_13  ;; 0xf4240
   \   00000114   0xFBB0 0xF1F1      UDIV     R1,R0,R1
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable6_15
   \   0000011C   0x.... 0x....      BL       printf
    105            printf("系统启动完毕，若要禁用调试输出请定义PRINT_ON_OFF为1(k60_card.h)\r\n");
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable6_16
   \   00000124   0x.... 0x....      BL       printf
    106            cpu_identify();
   \   00000128   0x.... 0x....      BL       cpu_identify
    107            Diagnostic_Reset_Source();
   \   0000012C   0x.... 0x....      BL       Diagnostic_Reset_Source
    108            printf("********************************************************************\r\n");
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable6_17
   \   00000134   0x.... 0x....      BL       printf
    109          #endif
    110            
    111          }
   \   00000138   0xB00B             ADD      SP,SP,#+44
   \   0000013A   0xBD00             POP      {PC}             ;; return
    112          
    113          /**
    114           * 更新SystemCoreClock
    115           *
    116           * @param  none
    117           * @return none
    118           *
    119           * @brief  更新全局变量SystemCoreClock的值，以便获取最新的系统内核频率。
    120           *         
    121           */

   \                                 In section .text, align 2, keep-with-next
    122          void SystemCoreClockUpdate (void) {
    123            uint32_t temp;
    124          #if (defined(CPU_MK60DZ10))
    125            #if OSC_CIRCUIT_TPYE == CANNED_OSC_CIRCUIT
    126            temp =  CANNED_OSC_CLK_HZ *((uint32_t)(MCG->C6 & MCG_C6_VDIV_MASK) + 24u );
   \                     SystemCoreClockUpdate: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable6_18  ;; 0x40064005
   \   00000004   0x7809             LDRB     R1,[R1, #+0]
   \   00000006   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0xF011 0x011F      ANDS     R1,R1,#0x1F
   \   0000000C   0x3118             ADDS     R1,R1,#+24
   \   0000000E   0x.... 0x....      LDR.W    R2,??DataTable6_19  ;; 0x2faf080
   \   00000012   0x4351             MULS     R1,R2,R1
   \   00000014   0x0008             MOVS     R0,R1
    127            temp = (uint32_t)(temp/((uint32_t)(MCG->C5 & MCG_C5_PRDIV_MASK) +1u ));
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable6_20  ;; 0x40064004
   \   0000001A   0x7809             LDRB     R1,[R1, #+0]
   \   0000001C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000001E   0xF011 0x011F      ANDS     R1,R1,#0x1F
   \   00000022   0x1C49             ADDS     R1,R1,#+1
   \   00000024   0xFBB0 0xF0F1      UDIV     R0,R0,R1
    128            #elif OSC_CIRCUIT_TPYE == CRYSTAL_OSC_CIRCUIT
    129            temp =  CRYSTAL_OSC_CLK_HZ *((uint32_t)(MCG->C6 & MCG_C6_VDIV_MASK) + 24u );
    130            temp = (uint32_t)(temp/((uint32_t)(MCG->C5 & MCG_C5_PRDIV_MASK) +1u ));
    131            #endif
    132          #elif (defined(CPU_MK60D10))
    133            #if OSC_CIRCUIT_TPYE == CANNED_OSC_CIRCUIT
    134            temp =  CANNED_OSC_CLK_HZ *((uint32_t)(MCG->C6 & MCG_C6_VDIV0_MASK) + 24u );
    135            temp = (uint32_t)(temp/((uint32_t)(MCG->C5 & MCG_C5_PRDIV0_MASK) +1u ));
    136            temp = temp;
    137            #elif OSC_CIRCUIT_TPYE == CRYSTAL_OSC_CIRCUIT
    138            temp =  CRYSTAL_OSC_CLK_HZ *((uint32_t)(MCG->C6 & MCG_C6_VDIV0_MASK) + 24u );
    139            temp = (uint32_t)(temp/((uint32_t)(MCG->C5 & MCG_C5_PRDIV0_MASK) +1u ));
    140            temp = temp;
    141            #endif
    142          #elif (defined(CPU_MK60F12) || defined(CPU_MK60F15))
    143            #if OSC_CIRCUIT_TPYE == CANNED_OSC_CIRCUIT
    144            temp =  CANNED_OSC_CLK_HZ /((uint32_t)(MCG->C5 & MCG_C5_PRDIV0_MASK) + 1u );
    145            temp = (uint32_t)(temp*((uint32_t)(MCG->C6 & MCG_C6_VDIV0_MASK) +16u ));
    146            temp = temp/2;
    147            #elif OSC_CIRCUIT_TPYE == CRYSTAL_OSC_CIRCUIT
    148            temp =  CRYSTAL_OSC_CLK_HZ /((uint32_t)(MCG->C5 & MCG_C5_PRDIV0_MASK) + 1u );
    149            temp = (uint32_t)(temp*((uint32_t)(MCG->C6 & MCG_C6_VDIV0_MASK) +16u ));
    150            temp = temp/2;
    151            #endif
    152          #endif
    153            SystemCoreClock = temp;
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    154          }
   \   0000002E   0x4770             BX       LR               ;; return
    155          
    156          /**
    157           * 硬件错误中断函数
    158           *
    159           * @param  none
    160           * @return none
    161           *
    162           * @brief  触发此中断的原因一般为：模块使用未初始化、错误的寻址空间等。
    163           *         
    164           */

   \                                 In section .text, align 2, keep-with-next
    165          void HardFault_Handler(void)
    166          {
   \                     HardFault_Handler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    167          #ifdef DEBUG_PRINT 
    168             printf("\r\n****内核发生硬件错误*****\r\n");
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6_21
   \   00000006   0x.... 0x....      BL       printf
    169          #endif
    170             return;
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    171          }
    172          
    173          /**
    174           * 默认中断函数
    175           *
    176           * @param  none
    177           * @return none
    178           *
    179           * @brief  未定义中断处理函数的中断源会进入此函数，并打印中断向量号。
    180           *         
    181           */

   \                                 In section .text, align 2, keep-with-next
    182          void DefaultISR(void)
    183          {
   \                     DefaultISR: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    184             #define VECTORNUM                     (*(volatile uint8_t*)(0xE000ED04)) 
    185          #ifdef DEBUG_PRINT 
    186             printf("\r\n****进入未定义中断,Interrupt Number %d*****\r\n",VECTORNUM-16);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6_22  ;; 0xe000ed04
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0xF1B0 0x0110      SUBS     R1,R0,#+16
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000012   0x.... 0x....      BL       printf
    187          #endif
    188             return;
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    189          }
    190          
    191          /**
    192           * 初始化操作系统的滴答定时器(OS Tick)
    193           *
    194           * @param  none
    195           * @return none
    196           *
    197           * @brief  该函数仅在uC/OS等系统中调用，切必须在OSStart()和处理器初始化后调用
    198           *         
    199           */
    200          #if UCOS_II > 0u
    201          void SystemTickInit (void)
    202          {
    203            uint32  cpu_clk_freq;
    204            uint32  cnts;
    205          
    206            cpu_clk_freq = g_core_clock;  //获取SysTick时钟
    207          
    208          #if (OS_VERSION >= 30000u)
    209            cnts  = cpu_clk_freq / (uint32)OSCfg_TickRate_Hz;    
    210          #else
    211            cnts  = cpu_clk_freq / (uint32)OS_TICKS_PER_SEC;        
    212          #endif
    213          
    214            OS_CPU_SysTickInit(cnts);     //初始化uCOS滴答定时器SysTick
    215          }
    216          #endif
    217          
    218          /**
    219           * Kinetis CPU Identify
    220           *
    221           * @param  none
    222           * @return none
    223           *
    224           * @brief 输出Kinetis以下信息
    225           * - Kinetis family
    226           * - package
    227           * - die revision
    228           * - P-flash size
    229           * - Ram size
    230           */

   \                                 In section .text, align 2, keep-with-next
    231          static void cpu_identify (void)
    232          {
   \                     cpu_identify: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    233              /* 判断Kinetis 单片机的型号 */
    234              switch((SIM->SDID & SIM_SDID_FAMID(0x7))>>SIM_SDID_FAMID_SHIFT) 
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6_24  ;; 0x40048024
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x0900             LSRS     R0,R0,#+4
   \   0000000A   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD00B             BEQ.N    ??cpu_identify_0
   \   00000012   0x2802             CMP      R0,#+2
   \   00000014   0xD013             BEQ.N    ??cpu_identify_1
   \   00000016   0xD30D             BCC.N    ??cpu_identify_2
   \   00000018   0x2804             CMP      R0,#+4
   \   0000001A   0xD01A             BEQ.N    ??cpu_identify_3
   \   0000001C   0xD314             BCC.N    ??cpu_identify_4
   \   0000001E   0x2806             CMP      R0,#+6
   \   00000020   0xD021             BEQ.N    ??cpu_identify_5
   \   00000022   0xD31B             BCC.N    ??cpu_identify_6
   \   00000024   0x2807             CMP      R0,#+7
   \   00000026   0xD023             BEQ.N    ??cpu_identify_7
   \   00000028   0xE027             B.N      ??cpu_identify_8
    235              {
    236          #ifdef DEBUG_PRINT 
    237              	case 0x0:printf("\nK10-");break;
   \                     ??cpu_identify_0: (+1)
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable6_25
   \   0000002E   0x.... 0x....      BL       printf
   \   00000032   0xE026             B.N      ??cpu_identify_9
    238              	case 0x1:printf("\nK20-");break;
   \                     ??cpu_identify_2: (+1)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable6_26
   \   00000038   0x.... 0x....      BL       printf
   \   0000003C   0xE021             B.N      ??cpu_identify_9
    239              	case 0x2:printf("\nK30-");break;
   \                     ??cpu_identify_1: (+1)
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable6_27
   \   00000042   0x.... 0x....      BL       printf
   \   00000046   0xE01C             B.N      ??cpu_identify_9
    240              	case 0x3:printf("\nK40-");break;
   \                     ??cpu_identify_4: (+1)
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable6_28
   \   0000004C   0x.... 0x....      BL       printf
   \   00000050   0xE017             B.N      ??cpu_identify_9
    241              	case 0x4:printf("\nK60-");break;
   \                     ??cpu_identify_3: (+1)
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable6_29
   \   00000056   0x.... 0x....      BL       printf
   \   0000005A   0xE012             B.N      ??cpu_identify_9
    242              	case 0x5:printf("\nK70-");break;
   \                     ??cpu_identify_6: (+1)
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable6_30
   \   00000060   0x.... 0x....      BL       printf
   \   00000064   0xE00D             B.N      ??cpu_identify_9
    243              	case 0x6:printf("\nK50-");break;
   \                     ??cpu_identify_5: (+1)
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable6_31
   \   0000006A   0x.... 0x....      BL       printf
   \   0000006E   0xE008             B.N      ??cpu_identify_9
    244              	case 0x7:printf("\nK53-");break;
   \                     ??cpu_identify_7: (+1)
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable6_32
   \   00000074   0x.... 0x....      BL       printf
   \   00000078   0xE003             B.N      ??cpu_identify_9
    245          	default:printf("\n不能识别单片机型号-");break; 
   \                     ??cpu_identify_8: (+1)
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable6_33
   \   0000007E   0x.... 0x....      BL       printf
    246          #else 	
    247                  default:break; 
    248          #endif
    249              }
    250          
    251               /* 判断Kinetis 单片机的封装 */
    252              switch((SIM->SDID & SIM_SDID_PINID(0xF))>>SIM_SDID_PINID_SHIFT) 
   \                     ??cpu_identify_9: (+1)
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable6_24  ;; 0x40048024
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   0000008C   0x2802             CMP      R0,#+2
   \   0000008E   0xD012             BEQ.N    ??cpu_identify_10
   \   00000090   0x2804             CMP      R0,#+4
   \   00000092   0xD014             BEQ.N    ??cpu_identify_11
   \   00000094   0x2805             CMP      R0,#+5
   \   00000096   0xD016             BEQ.N    ??cpu_identify_12
   \   00000098   0x2806             CMP      R0,#+6
   \   0000009A   0xD018             BEQ.N    ??cpu_identify_13
   \   0000009C   0x2807             CMP      R0,#+7
   \   0000009E   0xD01A             BEQ.N    ??cpu_identify_14
   \   000000A0   0x2808             CMP      R0,#+8
   \   000000A2   0xD01C             BEQ.N    ??cpu_identify_15
   \   000000A4   0x2809             CMP      R0,#+9
   \   000000A6   0xD01E             BEQ.N    ??cpu_identify_16
   \   000000A8   0x280A             CMP      R0,#+10
   \   000000AA   0xD020             BEQ.N    ??cpu_identify_17
   \   000000AC   0x280C             CMP      R0,#+12
   \   000000AE   0xD022             BEQ.N    ??cpu_identify_18
   \   000000B0   0x280E             CMP      R0,#+14
   \   000000B2   0xD024             BEQ.N    ??cpu_identify_19
   \   000000B4   0xE027             B.N      ??cpu_identify_20
    253              {
    254          #ifdef DEBUG_PRINT
    255              	case 0x2:printf("32pin-");break;
   \                     ??cpu_identify_10: (+1)
   \   000000B6   0x....             LDR.N    R0,??DataTable6_34
   \   000000B8   0x.... 0x....      BL       printf
   \   000000BC   0xE026             B.N      ??cpu_identify_21
    256              	case 0x4:printf("48pin-");break;
   \                     ??cpu_identify_11: (+1)
   \   000000BE   0x....             LDR.N    R0,??DataTable6_35
   \   000000C0   0x.... 0x....      BL       printf
   \   000000C4   0xE022             B.N      ??cpu_identify_21
    257              	case 0x5:printf("64pin-");break;
   \                     ??cpu_identify_12: (+1)
   \   000000C6   0x....             LDR.N    R0,??DataTable6_36
   \   000000C8   0x.... 0x....      BL       printf
   \   000000CC   0xE01E             B.N      ??cpu_identify_21
    258              	case 0x6:printf("80pin-");break;
   \                     ??cpu_identify_13: (+1)
   \   000000CE   0x....             LDR.N    R0,??DataTable6_37
   \   000000D0   0x.... 0x....      BL       printf
   \   000000D4   0xE01A             B.N      ??cpu_identify_21
    259              	case 0x7:printf("81pin-");break;
   \                     ??cpu_identify_14: (+1)
   \   000000D6   0x....             LDR.N    R0,??DataTable6_38
   \   000000D8   0x.... 0x....      BL       printf
   \   000000DC   0xE016             B.N      ??cpu_identify_21
    260              	case 0x8:printf("100pin-");break;
   \                     ??cpu_identify_15: (+1)
   \   000000DE   0x....             LDR.N    R0,??DataTable6_39
   \   000000E0   0x.... 0x....      BL       printf
   \   000000E4   0xE012             B.N      ??cpu_identify_21
    261              	case 0x9:printf("104pin-");break;
   \                     ??cpu_identify_16: (+1)
   \   000000E6   0x....             LDR.N    R0,??DataTable6_40
   \   000000E8   0x.... 0x....      BL       printf
   \   000000EC   0xE00E             B.N      ??cpu_identify_21
    262              	case 0xA:printf("144pin-");break;
   \                     ??cpu_identify_17: (+1)
   \   000000EE   0x....             LDR.N    R0,??DataTable6_41
   \   000000F0   0x.... 0x....      BL       printf
   \   000000F4   0xE00A             B.N      ??cpu_identify_21
    263              	case 0xC:printf("196pin-");break;
   \                     ??cpu_identify_18: (+1)
   \   000000F6   0x....             LDR.N    R0,??DataTable6_42
   \   000000F8   0x.... 0x....      BL       printf
   \   000000FC   0xE006             B.N      ??cpu_identify_21
    264              	case 0xE:printf("256pin-");break;
   \                     ??cpu_identify_19: (+1)
   \   000000FE   0x....             LDR.N    R0,??DataTable6_43
   \   00000100   0x.... 0x....      BL       printf
   \   00000104   0xE002             B.N      ??cpu_identify_21
    265          	default:printf("不能识别单片机封装-.");break;
   \                     ??cpu_identify_20: (+1)
   \   00000106   0x....             LDR.N    R0,??DataTable6_44
   \   00000108   0x.... 0x....      BL       printf
    266          #else 	
    267                  default:break; 
    268          #endif  	
    269              }                
    270          
    271          #ifdef DEBUG_PRINT
    272              printf("Silicon rev 1.%d\n",(SIM->SDID & SIM_SDID_REVID(0xF))>>SIM_SDID_REVID_SHIFT);
   \                     ??cpu_identify_21: (+1)
   \   0000010C   0x....             LDR.N    R0,??DataTable6_24  ;; 0x40048024
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0xF3C0 0x3103      UBFX     R1,R0,#+12,#+4
   \   00000114   0x....             LDR.N    R0,??DataTable6_45
   \   00000116   0x.... 0x....      BL       printf
    273          #endif  
    274              /* 判断Kinetis 单片机的P-flash size */
    275              switch((SIM->FCFG1 & SIM_FCFG1_PFSIZE(0xF))>>SIM_FCFG1_PFSIZE_SHIFT)
   \   0000011A   0x....             LDR.N    R0,??DataTable6_46  ;; 0x4004804c
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0x0E00             LSRS     R0,R0,#+24
   \   00000120   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   00000124   0x2807             CMP      R0,#+7
   \   00000126   0xD006             BEQ.N    ??cpu_identify_22
   \   00000128   0x2809             CMP      R0,#+9
   \   0000012A   0xD008             BEQ.N    ??cpu_identify_23
   \   0000012C   0x280B             CMP      R0,#+11
   \   0000012E   0xD00A             BEQ.N    ??cpu_identify_24
   \   00000130   0x280F             CMP      R0,#+15
   \   00000132   0xD00C             BEQ.N    ??cpu_identify_25
   \   00000134   0xE00F             B.N      ??cpu_identify_26
    276              {
    277          #ifdef DEBUG_PRINT
    278            #if (defined(CPU_MK60DZ10) || defined(CPU_MK60D10)) 
    279              	case 0x7:printf("128 kBytes of P-flash	");break;
   \                     ??cpu_identify_22: (+1)
   \   00000136   0x....             LDR.N    R0,??DataTable6_47
   \   00000138   0x.... 0x....      BL       printf
   \   0000013C   0xE00E             B.N      ??cpu_identify_27
    280              	case 0x9:printf("256 kBytes of P-flash	");break;
   \                     ??cpu_identify_23: (+1)
   \   0000013E   0x....             LDR.N    R0,??DataTable6_48
   \   00000140   0x.... 0x....      BL       printf
   \   00000144   0xE00A             B.N      ??cpu_identify_27
    281                  case 0xB:printf("512 kBytes of P-flash	");break;
   \                     ??cpu_identify_24: (+1)
   \   00000146   0x....             LDR.N    R0,??DataTable6_49
   \   00000148   0x.... 0x....      BL       printf
   \   0000014C   0xE006             B.N      ??cpu_identify_27
    282              	case 0xF:printf("512 kBytes of P-flash	");break;
   \                     ??cpu_identify_25: (+1)
   \   0000014E   0x....             LDR.N    R0,??DataTable6_49
   \   00000150   0x.... 0x....      BL       printf
   \   00000154   0xE002             B.N      ??cpu_identify_27
    283          	default:printf("不能识别单片机 P-flash size\n");break;
   \                     ??cpu_identify_26: (+1)
   \   00000156   0x....             LDR.N    R0,??DataTable6_50
   \   00000158   0x.... 0x....      BL       printf
    284            #elif (defined(CPU_MK60F12) || defined(CPU_MK60F15)) 
    285                  case 0xB:printf("512 kBytes of P-flash	");break;
    286              	case 0xD:printf("1024 kBytes of P-flash	");break;
    287              	case 0xF:printf("1024 kBytes of P-flash	");break;
    288          	default:printf("不能识别单片机 P-flash size\n");break;
    289            #endif
    290          #else 	
    291                  default:break; 
    292          #endif
    293              }
    294          
    295          #if (defined(CPU_MK60DZ10) || defined(CPU_MK60D10))
    296              /* 判断是否只有 P-flash  或者 P-flash 和 FlexNVM */
    297              if (SIM->FCFG2 & SIM_FCFG2_PFLSH_MASK) 
   \                     ??cpu_identify_27: (+1)
   \   0000015C   0x....             LDR.N    R0,??DataTable6_51  ;; 0x40048050
   \   0000015E   0x6800             LDR      R0,[R0, #+0]
   \   00000160   0x0200             LSLS     R0,R0,#+8
   \   00000162   0xD503             BPL.N    ??cpu_identify_28
    298            #ifdef DEBUG_PRINT
    299                printf("P-flash only\n");
   \   00000164   0x....             LDR.N    R0,??DataTable6_52
   \   00000166   0x.... 0x....      BL       printf
   \   0000016A   0xE01E             B.N      ??cpu_identify_29
    300            #else 
    301                asm("nop");
    302            #endif
    303              else
    304                /* 如果单片机有FlexNVM、判断Kinetis 单片机的FlexNVM size */
    305                switch((SIM->FCFG1 & SIM_FCFG1_NVMSIZE(0xF))>>SIM_FCFG1_NVMSIZE_SHIFT)
   \                     ??cpu_identify_28: (+1)
   \   0000016C   0x....             LDR.N    R0,??DataTable6_46  ;; 0x4004804c
   \   0000016E   0x6800             LDR      R0,[R0, #+0]
   \   00000170   0x0F00             LSRS     R0,R0,#+28
   \   00000172   0x2800             CMP      R0,#+0
   \   00000174   0xD006             BEQ.N    ??cpu_identify_30
   \   00000176   0x2807             CMP      R0,#+7
   \   00000178   0xD008             BEQ.N    ??cpu_identify_31
   \   0000017A   0x2809             CMP      R0,#+9
   \   0000017C   0xD00A             BEQ.N    ??cpu_identify_32
   \   0000017E   0x280F             CMP      R0,#+15
   \   00000180   0xD00C             BEQ.N    ??cpu_identify_33
   \   00000182   0xE00F             B.N      ??cpu_identify_34
    306                {
    307            #ifdef DEBUG_PRINT
    308          
    309                	case 0x0:printf("0 kBytes of FlexNVM\n");break;
   \                     ??cpu_identify_30: (+1)
   \   00000184   0x....             LDR.N    R0,??DataTable6_53
   \   00000186   0x.... 0x....      BL       printf
   \   0000018A   0xE00E             B.N      ??cpu_identify_29
    310              	case 0x7:printf("128 kBytes of FlexNVM\n");break;
   \                     ??cpu_identify_31: (+1)
   \   0000018C   0x....             LDR.N    R0,??DataTable6_54
   \   0000018E   0x.... 0x....      BL       printf
   \   00000192   0xE00A             B.N      ??cpu_identify_29
    311                  case 0x9:printf("256 kBytes of FlexNVM\n");break;
   \                     ??cpu_identify_32: (+1)
   \   00000194   0x....             LDR.N    R0,??DataTable6_55
   \   00000196   0x.... 0x....      BL       printf
   \   0000019A   0xE006             B.N      ??cpu_identify_29
    312              	case 0xF:printf("256 kBytes of FlexNVM\n");break;
   \                     ??cpu_identify_33: (+1)
   \   0000019C   0x....             LDR.N    R0,??DataTable6_55
   \   0000019E   0x.... 0x....      BL       printf
   \   000001A2   0xE002             B.N      ??cpu_identify_29
    313          	default:printf("不能识别单片机 FlexNVM size\n");break;
   \                     ??cpu_identify_34: (+1)
   \   000001A4   0x....             LDR.N    R0,??DataTable6_56
   \   000001A6   0x.... 0x....      BL       printf
    314            #else 	
    315                  default:break; 
    316            #endif
    317                }
    318          #endif
    319              
    320              /* 判断Kinetis 单片机的RAM size */
    321              switch((SIM->SOPT1 & SIM_SOPT1_RAMSIZE(0xF))>>SIM_SOPT1_RAMSIZE_SHIFT)
   \                     ??cpu_identify_29: (+1)
   \   000001AA   0x....             LDR.N    R0,??DataTable6_57  ;; 0x40047000
   \   000001AC   0x6800             LDR      R0,[R0, #+0]
   \   000001AE   0x0B00             LSRS     R0,R0,#+12
   \   000001B0   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   000001B4   0x2805             CMP      R0,#+5
   \   000001B6   0xD006             BEQ.N    ??cpu_identify_35
   \   000001B8   0x2807             CMP      R0,#+7
   \   000001BA   0xD008             BEQ.N    ??cpu_identify_36
   \   000001BC   0x2808             CMP      R0,#+8
   \   000001BE   0xD00A             BEQ.N    ??cpu_identify_37
   \   000001C0   0x2809             CMP      R0,#+9
   \   000001C2   0xD00C             BEQ.N    ??cpu_identify_38
   \   000001C4   0xE00F             B.N      ??cpu_identify_39
    322              {
    323          #ifdef DEBUG_PRINT
    324            #if (defined(CPU_MK60DZ10) || defined(CPU_MK60D10))
    325              	case 0x5:printf("32 kBytes of RAM\n");break;
   \                     ??cpu_identify_35: (+1)
   \   000001C6   0x....             LDR.N    R0,??DataTable6_58
   \   000001C8   0x.... 0x....      BL       printf
   \   000001CC   0xE00E             B.N      ??cpu_identify_40
    326              	case 0x7:printf("64 kBytes of RAM\n");break;
   \                     ??cpu_identify_36: (+1)
   \   000001CE   0x....             LDR.N    R0,??DataTable6_59
   \   000001D0   0x.... 0x....      BL       printf
   \   000001D4   0xE00A             B.N      ??cpu_identify_40
    327              	case 0x8:printf("96 kBytes of RAM\n");break;
   \                     ??cpu_identify_37: (+1)
   \   000001D6   0x....             LDR.N    R0,??DataTable6_60
   \   000001D8   0x.... 0x....      BL       printf
   \   000001DC   0xE006             B.N      ??cpu_identify_40
    328              	case 0x9:printf("128 kBytes of RAM\n");break;
   \                     ??cpu_identify_38: (+1)
   \   000001DE   0x....             LDR.N    R0,??DataTable6_61
   \   000001E0   0x.... 0x....      BL       printf
   \   000001E4   0xE002             B.N      ??cpu_identify_40
    329          	default:printf("不能识别单片机 RAM size\n");break; 
   \                     ??cpu_identify_39: (+1)
   \   000001E6   0x....             LDR.N    R0,??DataTable6_62
   \   000001E8   0x.... 0x....      BL       printf
    330            #elif (defined(CPU_MK60F12) || defined(CPU_MK60F15))
    331                  case 0x9:printf("128 kBytes of RAM\n");break;
    332          	default:printf("不能识别单片机 RAM size\n");break;
    333            #endif
    334          #else 	
    335                  default:break; 
    336          #endif
    337              }
    338              flash_identify(); 
   \                     ??cpu_identify_40: (+1)
   \   000001EC   0x.... 0x....      BL       flash_identify
    339          }
   \   000001F0   0xBD01             POP      {R0,PC}          ;; return
    340          
    341          /**
    342           * Kinetis flash Identify
    343           *
    344           * @param  none
    345           * @return none
    346           *
    347           * @brief 输出Kinetis以下信息
    348           * - flash parameter revision
    349           * - flash version ID
    350           */

   \                                 In section .text, align 2, keep-with-next
    351          static void flash_identify (void)
    352          {
   \                     flash_identify: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
    353            uint8 info[8];
    354          #if (defined(CPU_MK60DZ10) || defined(CPU_MK60D10)) 
    355              FTFL->FCCOB0 = 0x03;
   \   00000002   0x2003             MOVS     R0,#+3
   \   00000004   0x....             LDR.N    R1,??DataTable6_63  ;; 0x40020007
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    356              FTFL->FCCOB1 = 0x00;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable6_64  ;; 0x40020006
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    357              FTFL->FCCOB2 = 0x00;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR.N    R1,??DataTable6_65  ;; 0x40020005
   \   00000012   0x7008             STRB     R0,[R1, #+0]
    358              FTFL->FCCOB3 = 0x00;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR.N    R1,??DataTable6_66  ;; 0x40020004
   \   00000018   0x7008             STRB     R0,[R1, #+0]
    359              FTFL->FCCOB8 = 0x01;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x....             LDR.N    R1,??DataTable6_67  ;; 0x4002000f
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
    360              FTFL->FSTAT = FTFL_FSTAT_CCIF_MASK;
   \   00000020   0x2080             MOVS     R0,#+128
   \   00000022   0x....             LDR.N    R1,??DataTable6_68  ;; 0x40020000
   \   00000024   0x7008             STRB     R0,[R1, #+0]
    361              while(!(FTFL->FSTAT & FTFL_FSTAT_CCIF_MASK));
   \                     ??flash_identify_0: (+1)
   \   00000026   0x....             LDR.N    R0,??DataTable6_68  ;; 0x40020000
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x0600             LSLS     R0,R0,#+24
   \   0000002C   0xD5FB             BPL.N    ??flash_identify_0
    362              info[0] = FTFL->FCCOB4; info[4] = FTFL->FCCOB8;
   \   0000002E   0x....             LDR.N    R0,??DataTable6_69  ;; 0x4002000b
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   00000036   0x....             LDR.N    R0,??DataTable6_67  ;; 0x4002000f
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0xF88D 0x0008      STRB     R0,[SP, #+8]
    363              info[1] = FTFL->FCCOB5; info[5] = FTFL->FCCOB9;
   \   0000003E   0x....             LDR.N    R0,??DataTable6_70  ;; 0x4002000a
   \   00000040   0x7800             LDRB     R0,[R0, #+0]
   \   00000042   0xF88D 0x0005      STRB     R0,[SP, #+5]
   \   00000046   0x....             LDR.N    R0,??DataTable6_71  ;; 0x4002000e
   \   00000048   0x7800             LDRB     R0,[R0, #+0]
   \   0000004A   0xF88D 0x0009      STRB     R0,[SP, #+9]
    364              info[2] = FTFL->FCCOB6; info[6] = FTFL->FCCOBA;
   \   0000004E   0x....             LDR.N    R0,??DataTable6_72  ;; 0x40020009
   \   00000050   0x7800             LDRB     R0,[R0, #+0]
   \   00000052   0xF88D 0x0006      STRB     R0,[SP, #+6]
   \   00000056   0x....             LDR.N    R0,??DataTable6_73  ;; 0x4002000d
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0xF88D 0x000A      STRB     R0,[SP, #+10]
    365              info[3] = FTFL->FCCOB7; info[7] = FTFL->FCCOBB;
   \   0000005E   0x....             LDR.N    R0,??DataTable6_74  ;; 0x40020008
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0xF88D 0x0007      STRB     R0,[SP, #+7]
   \   00000066   0x....             LDR.N    R0,??DataTable6_75  ;; 0x4002000c
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0xF88D 0x000B      STRB     R0,[SP, #+11]
    366          #ifdef DEBUG_PRINT  
    367              printf("Flash parameter version %d.%d.%d.%d\n",info[0],info[1],info[2],info[3]);
   \   0000006E   0xF89D 0x0007      LDRB     R0,[SP, #+7]
   \   00000072   0x9000             STR      R0,[SP, #+0]
   \   00000074   0xF89D 0x3006      LDRB     R3,[SP, #+6]
   \   00000078   0xF89D 0x2005      LDRB     R2,[SP, #+5]
   \   0000007C   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \   00000080   0x....             LDR.N    R0,??DataTable6_76
   \   00000082   0x.... 0x....      BL       printf
    368              printf("Flash version ID %d.%d.%d.%d\n",info[4],info[5],info[6],info[7]); 
   \   00000086   0xF89D 0x000B      LDRB     R0,[SP, #+11]
   \   0000008A   0x9000             STR      R0,[SP, #+0]
   \   0000008C   0xF89D 0x300A      LDRB     R3,[SP, #+10]
   \   00000090   0xF89D 0x2009      LDRB     R2,[SP, #+9]
   \   00000094   0xF89D 0x1008      LDRB     R1,[SP, #+8]
   \   00000098   0x....             LDR.N    R0,??DataTable6_77
   \   0000009A   0x.... 0x....      BL       printf
    369          #endif  
    370              FTFL->FSTAT = 0xFF;
   \   0000009E   0x20FF             MOVS     R0,#+255
   \   000000A0   0x....             LDR.N    R1,??DataTable6_68  ;; 0x40020000
   \   000000A2   0x7008             STRB     R0,[R1, #+0]
    371          #elif (defined(CPU_MK60F12) || defined(CPU_MK60F15))
    372              FTFE->FCCOB0 = 0x03;
    373              FTFE->FCCOB1 = 0x00;
    374              FTFE->FCCOB2 = 0x00;
    375              FTFE->FCCOB3 = 0x08;
    376              FTFE->FCCOB4 = 0x01;   
    377              FTFE->FSTAT = FTFE_FSTAT_CCIF_MASK;
    378              while(!(FTFE->FSTAT & FTFE_FSTAT_CCIF_MASK));
    379              info[0] = FTFE->FCCOB4; info[4] = FTFE->FCCOB8;
    380              info[1] = FTFE->FCCOB5; info[5] = FTFE->FCCOB9;
    381              info[2] = FTFE->FCCOB6; info[6] = FTFE->FCCOBA;
    382              info[3] = FTFE->FCCOB7; info[7] = FTFE->FCCOBB;
    383          #ifdef DEBUG_PRINT    
    384              printf("Flash parameter version %d.%d.%d.%d\n",info[0],info[1],info[2],info[3]);
    385              printf("Flash version ID %d.%d.%d.%d\n",info[4],info[5],info[6],info[7]);  
    386          #endif   
    387              FTFE->FSTAT = 0x7F;
    388          #endif
    389          }
   \   000000A4   0xBD07             POP      {R0-R2,PC}       ;; return
    390          
    391          /**
    392           * Diagnostic_Reset_Source
    393           *
    394           * @param  none
    395           * @return none
    396           *
    397           * @brief 输出Kinetis复位信息
    398           */

   \                                 In section .text, align 2, keep-with-next
    399          void Diagnostic_Reset_Source(void)
    400          {
   \                     Diagnostic_Reset_Source: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    401          #ifdef DEBUG_PRINT 
    402          #if (defined(CPU_MK60DZ10)) 
    403            /* 判断上一次复位的原因*/
    404            if (MC->SRSH & MC_SRSH_SW_MASK)
   \   00000002   0x....             LDR.N    R0,??DataTable6_78  ;; 0x4007e000
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x0740             LSLS     R0,R0,#+29
   \   00000008   0xD502             BPL.N    ??Diagnostic_Reset_Source_0
    405                    printf("Software Reset\n");
   \   0000000A   0x....             LDR.N    R0,??DataTable6_79
   \   0000000C   0x.... 0x....      BL       printf
    406            if (MC->SRSH & MC_SRSH_LOCKUP_MASK)
   \                     ??Diagnostic_Reset_Source_0: (+1)
   \   00000010   0x....             LDR.N    R0,??DataTable6_78  ;; 0x4007e000
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x0780             LSLS     R0,R0,#+30
   \   00000016   0xD502             BPL.N    ??Diagnostic_Reset_Source_1
    407                    printf("Core Lockup Event Reset\n");
   \   00000018   0x....             LDR.N    R0,??DataTable6_80
   \   0000001A   0x.... 0x....      BL       printf
    408            if (MC->SRSH & MC_SRSH_JTAG_MASK)
   \                     ??Diagnostic_Reset_Source_1: (+1)
   \   0000001E   0x....             LDR.N    R0,??DataTable6_78  ;; 0x4007e000
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0x07C0             LSLS     R0,R0,#+31
   \   00000024   0xD502             BPL.N    ??Diagnostic_Reset_Source_2
    409                    printf("JTAG Reset\n");
   \   00000026   0x....             LDR.N    R0,??DataTable6_81
   \   00000028   0x.... 0x....      BL       printf
    410            if (MC->SRSL & MC_SRSL_POR_MASK)
   \                     ??Diagnostic_Reset_Source_2: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable6_82  ;; 0x4007e001
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x0600             LSLS     R0,R0,#+24
   \   00000032   0xD502             BPL.N    ??Diagnostic_Reset_Source_3
    411                    printf("Power-on Reset\n");
   \   00000034   0x....             LDR.N    R0,??DataTable6_83
   \   00000036   0x.... 0x....      BL       printf
    412            if (MC->SRSL & MC_SRSL_PIN_MASK)
   \                     ??Diagnostic_Reset_Source_3: (+1)
   \   0000003A   0x....             LDR.N    R0,??DataTable6_82  ;; 0x4007e001
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x0640             LSLS     R0,R0,#+25
   \   00000040   0xD502             BPL.N    ??Diagnostic_Reset_Source_4
    413                    printf("External Pin Reset\n");
   \   00000042   0x....             LDR.N    R0,??DataTable6_84
   \   00000044   0x.... 0x....      BL       printf
    414            if (MC->SRSL & MC_SRSL_COP_MASK)
   \                     ??Diagnostic_Reset_Source_4: (+1)
   \   00000048   0x....             LDR.N    R0,??DataTable6_82  ;; 0x4007e001
   \   0000004A   0x7800             LDRB     R0,[R0, #+0]
   \   0000004C   0x0680             LSLS     R0,R0,#+26
   \   0000004E   0xD502             BPL.N    ??Diagnostic_Reset_Source_5
    415                    printf("Watchdog(COP) Reset\n");
   \   00000050   0x....             LDR.N    R0,??DataTable6_85
   \   00000052   0x.... 0x....      BL       printf
    416            if (MC->SRSL & MC_SRSL_LOC_MASK)
   \                     ??Diagnostic_Reset_Source_5: (+1)
   \   00000056   0x....             LDR.N    R0,??DataTable6_82  ;; 0x4007e001
   \   00000058   0x7800             LDRB     R0,[R0, #+0]
   \   0000005A   0x0740             LSLS     R0,R0,#+29
   \   0000005C   0xD502             BPL.N    ??Diagnostic_Reset_Source_6
    417                    printf("Loss of Clock Reset\n");
   \   0000005E   0x....             LDR.N    R0,??DataTable6_86
   \   00000060   0x.... 0x....      BL       printf
    418            if (MC->SRSL & MC_SRSL_LVD_MASK)
   \                     ??Diagnostic_Reset_Source_6: (+1)
   \   00000064   0x....             LDR.N    R0,??DataTable6_82  ;; 0x4007e001
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0x0780             LSLS     R0,R0,#+30
   \   0000006A   0xD502             BPL.N    ??Diagnostic_Reset_Source_7
    419                    printf("Low-voltage Detect Reset\n");
   \   0000006C   0x....             LDR.N    R0,??DataTable6_87
   \   0000006E   0x.... 0x....      BL       printf
    420            if (MC->SRSL & MC_SRSL_WAKEUP_MASK)
   \                     ??Diagnostic_Reset_Source_7: (+1)
   \   00000072   0x....             LDR.N    R0,??DataTable6_82  ;; 0x4007e001
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x07C0             LSLS     R0,R0,#+31
   \   00000078   0xD502             BPL.N    ??Diagnostic_Reset_Source_8
    421                    printf("LLWU Reset\n");
   \   0000007A   0x....             LDR.N    R0,??DataTable6_88
   \   0000007C   0x.... 0x....      BL       printf
    422          #elif (defined(CPU_MK60F12) || defined(CPU_MK60F15) || defined(CPU_MK60D10))
    423            
    424            if (RCM->SRS1 & RCM_SRS1_SACKERR_MASK)
    425                    printf("Stop Mode Acknowledge Error Reset\n");
    426            if (RCM->SRS1 & RCM_SRS1_EZPT_MASK)
    427                    printf("EzPort Reset\n");
    428            if (RCM->SRS1 & RCM_SRS1_MDM_AP_MASK)
    429                    printf("MDM-AP Reset\n");
    430            if (RCM->SRS1 & RCM_SRS1_SW_MASK)
    431                    printf("Software Reset\n");
    432            if (RCM->SRS1 & RCM_SRS1_LOCKUP_MASK)
    433                    printf("Core Lockup Event Reset\n");
    434            if (RCM->SRS1 & RCM_SRS1_JTAG_MASK)
    435                    printf("JTAG Reset\n");
    436            if (RCM->SRS0 & RCM_SRS0_POR_MASK)
    437                    printf("Power-on Reset\n");
    438            if (RCM->SRS0 & RCM_SRS0_PIN_MASK)
    439                    printf("External Pin Reset\n");
    440            if (RCM->SRS0 & RCM_SRS0_WDOG_MASK)
    441                    printf("Watchdog(COP) Reset\n");
    442            if (RCM->SRS0 & RCM_SRS0_LOC_MASK)
    443                    printf("Loss of Clock Reset\n");
    444            if (RCM->SRS0 & RCM_SRS0_LVD_MASK)
    445                    printf("Low-voltage Detect Reset\n");
    446            if (RCM->SRS0 & RCM_SRS0_WAKEUP_MASK)
    447            {
    448              printf("[outSRS]Wakeup bit set from low power mode exit\n");
    449              printf("[outSRS]SMC_PMPROT = %#02X ", (SMC->PMPROT))  ;
    450              printf("[outSRS]SMC_PMCTRL = %#02X ", (SMC->PMCTRL))  ;
    451              printf("[outSRS]SMC_VLLSCTRL = %#02X ", (SMC->VLLSCTRL))  ;
    452              printf("[outSRS]SMC_PMSTAT = %#02X \r\n", (SMC->PMSTAT))  ;
    453          
    454              if ((SMC->PMCTRL & SMC_PMCTRL_STOPM_MASK)== 3)
    455                printf("[outSRS] LLS exit \n") ;
    456              if (((SMC->PMCTRL & SMC_PMCTRL_STOPM_MASK)== 4) && ((SMC->VLLSCTRL & SMC_VLLSCTRL_VLLSM_MASK)== 1))
    457                printf("[outSRS] VLLS1 exit \n") ;
    458              if (((SMC->PMCTRL & SMC_PMCTRL_STOPM_MASK)== 4) && ((SMC->VLLSCTRL & SMC_VLLSCTRL_VLLSM_MASK)== 2))
    459                printf("[outSRS] VLLS2 exit \n") ;
    460              if (((SMC->PMCTRL & SMC_PMCTRL_STOPM_MASK)== 4) && ((SMC->VLLSCTRL & SMC_VLLSCTRL_VLLSM_MASK)== 3))
    461                printf("[outSRS] VLLS3 exit \n") ; 
    462            }
    463          #endif
    464          #endif
    465          }
   \                     ??Diagnostic_Reset_Source_8: (+1)
   \   00000080   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x0D 0x0A          DC8      0x0D, 0x0A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x4005200E         DC32     0x4005200e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x40052000         DC32     0x40052000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     g_core_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x40048044         DC32     0x40048044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     g_bus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     g_flexbus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     g_flash_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x400EB000         DC32     0x400eb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x40064005         DC32     0x40064005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x02FAF080         DC32     0x2faf080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x40064004         DC32     0x40064004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \   00000000   0xE000ED04         DC32     0xe000ed04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_23:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_24:
   \   00000000   0x40048024         DC32     0x40048024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_25:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_26:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_27:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_28:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_29:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_30:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_31:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_32:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_33:
   \   00000000   0x........         DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_34:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_35:
   \   00000000   0x........         DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_36:
   \   00000000   0x........         DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_37:
   \   00000000   0x........         DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_38:
   \   00000000   0x........         DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_39:
   \   00000000   0x........         DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_40:
   \   00000000   0x........         DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_41:
   \   00000000   0x........         DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_42:
   \   00000000   0x........         DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_43:
   \   00000000   0x........         DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_44:
   \   00000000   0x........         DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_45:
   \   00000000   0x........         DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_46:
   \   00000000   0x4004804C         DC32     0x4004804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_47:
   \   00000000   0x........         DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_48:
   \   00000000   0x........         DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_49:
   \   00000000   0x........         DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_50:
   \   00000000   0x........         DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_51:
   \   00000000   0x40048050         DC32     0x40048050

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_52:
   \   00000000   0x........         DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_53:
   \   00000000   0x........         DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_54:
   \   00000000   0x........         DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_55:
   \   00000000   0x........         DC32     ?_38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_56:
   \   00000000   0x........         DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_57:
   \   00000000   0x40047000         DC32     0x40047000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_58:
   \   00000000   0x........         DC32     ?_40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_59:
   \   00000000   0x........         DC32     ?_41

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_60:
   \   00000000   0x........         DC32     ?_42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_61:
   \   00000000   0x........         DC32     ?_43

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_62:
   \   00000000   0x........         DC32     ?_44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_63:
   \   00000000   0x40020007         DC32     0x40020007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_64:
   \   00000000   0x40020006         DC32     0x40020006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_65:
   \   00000000   0x40020005         DC32     0x40020005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_66:
   \   00000000   0x40020004         DC32     0x40020004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_67:
   \   00000000   0x4002000F         DC32     0x4002000f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_68:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_69:
   \   00000000   0x4002000B         DC32     0x4002000b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_70:
   \   00000000   0x4002000A         DC32     0x4002000a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_71:
   \   00000000   0x4002000E         DC32     0x4002000e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_72:
   \   00000000   0x40020009         DC32     0x40020009

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_73:
   \   00000000   0x4002000D         DC32     0x4002000d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_74:
   \   00000000   0x40020008         DC32     0x40020008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_75:
   \   00000000   0x4002000C         DC32     0x4002000c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_76:
   \   00000000   0x........         DC32     ?_45

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_77:
   \   00000000   0x........         DC32     ?_46

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_78:
   \   00000000   0x4007E000         DC32     0x4007e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_79:
   \   00000000   0x........         DC32     ?_47

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_80:
   \   00000000   0x........         DC32     ?_48

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_81:
   \   00000000   0x........         DC32     ?_49

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_82:
   \   00000000   0x4007E001         DC32     0x4007e001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_83:
   \   00000000   0x........         DC32     ?_50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_84:
   \   00000000   0x........         DC32     ?_51

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_85:
   \   00000000   0x........         DC32     ?_52

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_86:
   \   00000000   0x........         DC32     ?_53

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_87:
   \   00000000   0x........         DC32     ?_54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_88:
   \   00000000   0x........         DC32     ?_55

   \                                 In section .rodata, align 4
   \   00000000   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000008   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 20H, 0BBH, 0F9H, 0D3H, 0DAH
   \              0x2A 0x20    
   \              0xBB 0xF9    
   \              0xD3 0xDA    
   \   00000010   0xC0 0xAD          DC8 0C0H, 0ADH, 0C6H, 0D5H, 0C0H, 0BCH, 0B5H, 0C2H
   \              0xC6 0xD5    
   \              0xC0 0xBC    
   \              0xB5 0xC2    
   \   00000018   0x4B 0x36          DC8 4BH, 36H, 30H, 0B5H, 0D7H, 0B2H, 0E3H, 0BFH
   \              0x30 0xB5    
   \              0xD7 0xB2    
   \              0xE3 0xBF    
   \   00000020   0xE2 0x20          DC8 0E2H, 20H, 68H, 74H, 74H, 70H, 3AH, 2FH
   \              0x68 0x74    
   \              0x74 0x70    
   \              0x3A 0x2F    
   \   00000028   0x2F 0x77          DC8 2FH, 77H, 77H, 77H, 2EH, 6CH, 70H, 6CH
   \              0x77 0x77    
   \              0x2E 0x6C    
   \              0x70 0x6C    
   \   00000030   0x64 0x2E          DC8 64H, 2EH, 63H, 6EH, 20H, 2AH, 2AH, 2AH
   \              0x63 0x6E    
   \              0x20 0x2A    
   \              0x2A 0x2A    
   \   00000038   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000040   0x0D 0x0A          DC8 0DH, 0AH, 0
   \              0x00         
   \   00000043   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x4F 0x53          DC8 "OSKinetis\271\314\274\376\277\342\260\346\261\276:%s\tmail:support@lpld.cn\015\012"
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0xB9    
   \              0xCC 0xBC    
   \              0xFE 0xBF    
   \              0xE2 0xB0    
   \              0xE6 0xB1    
   \              0xBE 0x3A    
   \              0x25 0x73    
   \              0x09 0x6D    
   \              0x61 0x69    
   \              0x6C 0x3A    
   \              0x73 0x75    
   \              0x70 0x70    
   \              0x6F 0x72    
   \              0x74 0x40    
   \              0x6C 0x70    
   \              0x6C 0x64    
   \              0x2E 0x63    
   \              0x6E 0x0D    
   \              0x0A 0x00    
   \   0000002E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x33 0x2E          DC8 "3.1 b1"
   \              0x31 0x20    
   \              0x62 0x31    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0xCF 0xB5          DC8 "\317\265\315\263\304\332\272\313\312\261\326\323:%dMHz\t\327\334\317\337\312\261\326\323:%dMHz\015\012"
   \              0xCD 0xB3    
   \              0xC4 0xDA    
   \              0xBA 0xCB    
   \              0xCA 0xB1    
   \              0xD6 0xD3    
   \              0x3A 0x25    
   \              0x64 0x4D    
   \              0x48 0x7A    
   \              0x09 0xD7    
   \              0xDC 0xCF    
   \              0xDF 0xCA    
   \              0xB1 0xD6    
   \              0xD3 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x46 0x6C          DC8 "FlexBus\312\261\326\323:%dMHz\tFlash\312\261\326\323:%dMHz\015\012"
   \              0x65 0x78    
   \              0x42 0x75    
   \              0x73 0xCA    
   \              0xB1 0xD6    
   \              0xD3 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x09    
   \              0x46 0x6C    
   \              0x61 0x73    
   \              0x68 0xCA    
   \              0xB1 0xD6    
   \              0xD3 0x3A    
   \              0x25 0x64    
   \              0x4D 0x48    
   \              0x7A 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0xCF 0xB5          DC8 0CFH, 0B5H, 0CDH, 0B3H, 0C6H, 0F4H, 0B6H, 0AFH
   \              0xCD 0xB3    
   \              0xC6 0xF4    
   \              0xB6 0xAF    
   \   00000008   0xCD 0xEA          DC8 0CDH, 0EAH, 0B1H, 0CFH, 0A3H, 0ACH, 0C8H, 0F4H
   \              0xB1 0xCF    
   \              0xA3 0xAC    
   \              0xC8 0xF4    
   \   00000010   0xD2 0xAA          DC8 0D2H, 0AAH, 0BDH, 0FBH, 0D3H, 0C3H, 0B5H, 0F7H
   \              0xBD 0xFB    
   \              0xD3 0xC3    
   \              0xB5 0xF7    
   \   00000018   0xCA 0xD4          DC8 0CAH, 0D4H, 0CAH, 0E4H, 0B3H, 0F6H, 0C7H, 0EBH
   \              0xCA 0xE4    
   \              0xB3 0xF6    
   \              0xC7 0xEB    
   \   00000020   0xB6 0xA8          DC8 0B6H, 0A8H, 0D2H, 0E5H, 50H, 52H, 49H, 4EH
   \              0xD2 0xE5    
   \              0x50 0x52    
   \              0x49 0x4E    
   \   00000028   0x54 0x5F          DC8 54H, 5FH, 4FH, 4EH, 5FH, 4FH, 46H, 46H
   \              0x4F 0x4E    
   \              0x5F 0x4F    
   \              0x46 0x46    
   \   00000030   0xCE 0xAA          DC8 0CEH, 0AAH, 31H, 28H, 6BH, 36H, 30H, 5FH
   \              0x31 0x28    
   \              0x6B 0x36    
   \              0x30 0x5F    
   \   00000038   0x63 0x61          DC8 63H, 61H, 72H, 64H, 2EH, 68H, 29H, 0DH
   \              0x72 0x64    
   \              0x2E 0x68    
   \              0x29 0x0D    
   \   00000040   0x0A 0x00          DC8 0AH, 0
   \   00000042   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000008   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000010   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000018   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000020   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000028   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000030   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000038   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH, 2AH
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \   00000040   0x2A 0x2A          DC8 2AH, 2AH, 2AH, 2AH, 0DH, 0AH, 0
   \              0x2A 0x2A    
   \              0x0D 0x0A    
   \              0x00         
   \   00000047   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x0D 0x0A          DC8 "\015\012****\304\332\272\313\267\242\311\372\323\262\274\376\264\355\316\363*****\015\012"
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0xC4 0xDA    
   \              0xBA 0xCB    
   \              0xB7 0xA2    
   \              0xC9 0xFA    
   \              0xD3 0xB2    
   \              0xBC 0xFE    
   \              0xB4 0xED    
   \              0xCE 0xF3    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x0D    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x0D 0x0A          DC8 "\015\012****\275\370\310\353\316\264\266\250\322\345\326\320\266\317,Interrupt Number %d*****\015\012"
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0xBD 0xF8    
   \              0xC8 0xEB    
   \              0xCE 0xB4    
   \              0xB6 0xA8    
   \              0xD2 0xE5    
   \              0xD6 0xD0    
   \              0xB6 0xCF    
   \              0x2C 0x49    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x72 0x75    
   \              0x70 0x74    
   \              0x20 0x4E    
   \              0x75 0x6D    
   \              0x62 0x65    
   \              0x72 0x20    
   \              0x25 0x64    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x0D    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x0A 0x4B          DC8 "\012K10-"
   \              0x31 0x30    
   \              0x2D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x0A 0x4B          DC8 "\012K20-"
   \              0x32 0x30    
   \              0x2D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x0A 0x4B          DC8 "\012K30-"
   \              0x33 0x30    
   \              0x2D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x0A 0x4B          DC8 "\012K40-"
   \              0x34 0x30    
   \              0x2D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x0A 0x4B          DC8 "\012K60-"
   \              0x36 0x30    
   \              0x2D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x0A 0x4B          DC8 "\012K70-"
   \              0x37 0x30    
   \              0x2D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x0A 0x4B          DC8 "\012K50-"
   \              0x35 0x30    
   \              0x2D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x0A 0x4B          DC8 "\012K53-"
   \              0x35 0x33    
   \              0x2D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_18:
   \   00000000   0x0A 0xB2          DC8 "\012\262\273\304\334\312\266\261\360\265\245\306\254\273\372\320\315\272\305-"
   \              0xBB 0xC4    
   \              0xDC 0xCA    
   \              0xB6 0xB1    
   \              0xF0 0xB5    
   \              0xA5 0xC6    
   \              0xAC 0xBB    
   \              0xFA 0xD0    
   \              0xCD 0xBA    
   \              0xC5 0x2D    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x33 0x32          DC8 "32pin-"
   \              0x70 0x69    
   \              0x6E 0x2D    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x34 0x38          DC8 "48pin-"
   \              0x70 0x69    
   \              0x6E 0x2D    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x36 0x34          DC8 "64pin-"
   \              0x70 0x69    
   \              0x6E 0x2D    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0x38 0x30          DC8 "80pin-"
   \              0x70 0x69    
   \              0x6E 0x2D    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_23:
   \   00000000   0x38 0x31          DC8 "81pin-"
   \              0x70 0x69    
   \              0x6E 0x2D    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \   00000000   0x31 0x30          DC8 "100pin-"
   \              0x30 0x70    
   \              0x69 0x6E    
   \              0x2D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_25:
   \   00000000   0x31 0x30          DC8 "104pin-"
   \              0x34 0x70    
   \              0x69 0x6E    
   \              0x2D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_26:
   \   00000000   0x31 0x34          DC8 "144pin-"
   \              0x34 0x70    
   \              0x69 0x6E    
   \              0x2D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_27:
   \   00000000   0x31 0x39          DC8 "196pin-"
   \              0x36 0x70    
   \              0x69 0x6E    
   \              0x2D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_28:
   \   00000000   0x32 0x35          DC8 "256pin-"
   \              0x36 0x70    
   \              0x69 0x6E    
   \              0x2D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_29:
   \   00000000   0xB2 0xBB          DC8 "\262\273\304\334\312\266\261\360\265\245\306\254\273\372\267\342\327\260-."
   \              0xC4 0xDC    
   \              0xCA 0xB6    
   \              0xB1 0xF0    
   \              0xB5 0xA5    
   \              0xC6 0xAC    
   \              0xBB 0xFA    
   \              0xB7 0xE2    
   \              0xD7 0xB0    
   \              0x2D 0x2E    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_30:
   \   00000000   0x53 0x69          DC8 "Silicon rev 1.%d\012"
   \              0x6C 0x69    
   \              0x63 0x6F    
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x76 0x20    
   \              0x31 0x2E    
   \              0x25 0x64    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_31:
   \   00000000   0x31 0x32          DC8 "128 kBytes of P-flash\t"
   \              0x38 0x20    
   \              0x6B 0x42    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x50 0x2D    
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x09    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_32:
   \   00000000   0x32 0x35          DC8 "256 kBytes of P-flash\t"
   \              0x36 0x20    
   \              0x6B 0x42    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x50 0x2D    
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x09    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_33:
   \   00000000   0x35 0x31          DC8 "512 kBytes of P-flash\t"
   \              0x32 0x20    
   \              0x6B 0x42    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x50 0x2D    
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x09    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_34:
   \   00000000   0xB2 0xBB          DC8 "\262\273\304\334\312\266\261\360\265\245\306\254\273\372 P-flash size\012"
   \              0xC4 0xDC    
   \              0xCA 0xB6    
   \              0xB1 0xF0    
   \              0xB5 0xA5    
   \              0xC6 0xAC    
   \              0xBB 0xFA    
   \              0x20 0x50    
   \              0x2D 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \              0x20 0x73    
   \              0x69 0x7A    
   \              0x65 0x0A    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_35:
   \   00000000   0x50 0x2D          DC8 "P-flash only\012"
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x6F 0x6E    
   \              0x6C 0x79    
   \              0x0A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_36:
   \   00000000   0x30 0x20          DC8 "0 kBytes of FlexNVM\012"
   \              0x6B 0x42    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x46 0x6C    
   \              0x65 0x78    
   \              0x4E 0x56    
   \              0x4D 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_37:
   \   00000000   0x31 0x32          DC8 "128 kBytes of FlexNVM\012"
   \              0x38 0x20    
   \              0x6B 0x42    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x46 0x6C    
   \              0x65 0x78    
   \              0x4E 0x56    
   \              0x4D 0x0A    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_38:
   \   00000000   0x32 0x35          DC8 "256 kBytes of FlexNVM\012"
   \              0x36 0x20    
   \              0x6B 0x42    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x46 0x6C    
   \              0x65 0x78    
   \              0x4E 0x56    
   \              0x4D 0x0A    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_39:
   \   00000000   0xB2 0xBB          DC8 "\262\273\304\334\312\266\261\360\265\245\306\254\273\372 FlexNVM size\012"
   \              0xC4 0xDC    
   \              0xCA 0xB6    
   \              0xB1 0xF0    
   \              0xB5 0xA5    
   \              0xC6 0xAC    
   \              0xBB 0xFA    
   \              0x20 0x46    
   \              0x6C 0x65    
   \              0x78 0x4E    
   \              0x56 0x4D    
   \              0x20 0x73    
   \              0x69 0x7A    
   \              0x65 0x0A    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_40:
   \   00000000   0x33 0x32          DC8 "32 kBytes of RAM\012"
   \              0x20 0x6B    
   \              0x42 0x79    
   \              0x74 0x65    
   \              0x73 0x20    
   \              0x6F 0x66    
   \              0x20 0x52    
   \              0x41 0x4D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_41:
   \   00000000   0x36 0x34          DC8 "64 kBytes of RAM\012"
   \              0x20 0x6B    
   \              0x42 0x79    
   \              0x74 0x65    
   \              0x73 0x20    
   \              0x6F 0x66    
   \              0x20 0x52    
   \              0x41 0x4D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_42:
   \   00000000   0x39 0x36          DC8 "96 kBytes of RAM\012"
   \              0x20 0x6B    
   \              0x42 0x79    
   \              0x74 0x65    
   \              0x73 0x20    
   \              0x6F 0x66    
   \              0x20 0x52    
   \              0x41 0x4D    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_43:
   \   00000000   0x31 0x32          DC8 "128 kBytes of RAM\012"
   \              0x38 0x20    
   \              0x6B 0x42    
   \              0x79 0x74    
   \              0x65 0x73    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x52 0x41    
   \              0x4D 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_44:
   \   00000000   0xB2 0xBB          DC8 "\262\273\304\334\312\266\261\360\265\245\306\254\273\372 RAM size\012"
   \              0xC4 0xDC    
   \              0xCA 0xB6    
   \              0xB1 0xF0    
   \              0xB5 0xA5    
   \              0xC6 0xAC    
   \              0xBB 0xFA    
   \              0x20 0x52    
   \              0x41 0x4D    
   \              0x20 0x73    
   \              0x69 0x7A    
   \              0x65 0x0A    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_45:
   \   00000000   0x46 0x6C          DC8 "Flash parameter version %d.%d.%d.%d\012"
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x70 0x61    
   \              0x72 0x61    
   \              0x6D 0x65    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x76 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x64 0x2E    
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_46:
   \   00000000   0x46 0x6C          DC8 "Flash version ID %d.%d.%d.%d\012"
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x76 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x49 0x44    
   \              0x20 0x25    
   \              0x64 0x2E    
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x64 0x2E    
   \              0x25 0x64    
   \              0x0A 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_47:
   \   00000000   0x53 0x6F          DC8 "Software Reset\012"
   \              0x66 0x74    
   \              0x77 0x61    
   \              0x72 0x65    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_48:
   \   00000000   0x43 0x6F          DC8 "Core Lockup Event Reset\012"
   \              0x72 0x65    
   \              0x20 0x4C    
   \              0x6F 0x63    
   \              0x6B 0x75    
   \              0x70 0x20    
   \              0x45 0x76    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x52 0x65    
   \              0x73 0x65    
   \              0x74 0x0A    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_49:
   \   00000000   0x4A 0x54          DC8 "JTAG Reset\012"
   \              0x41 0x47    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_50:
   \   00000000   0x50 0x6F          DC8 "Power-on Reset\012"
   \              0x77 0x65    
   \              0x72 0x2D    
   \              0x6F 0x6E    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_51:
   \   00000000   0x45 0x78          DC8 "External Pin Reset\012"
   \              0x74 0x65    
   \              0x72 0x6E    
   \              0x61 0x6C    
   \              0x20 0x50    
   \              0x69 0x6E    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_52:
   \   00000000   0x57 0x61          DC8 "Watchdog(COP) Reset\012"
   \              0x74 0x63    
   \              0x68 0x64    
   \              0x6F 0x67    
   \              0x28 0x43    
   \              0x4F 0x50    
   \              0x29 0x20    
   \              0x52 0x65    
   \              0x73 0x65    
   \              0x74 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_53:
   \   00000000   0x4C 0x6F          DC8 "Loss of Clock Reset\012"
   \              0x73 0x73    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x43 0x6C    
   \              0x6F 0x63    
   \              0x6B 0x20    
   \              0x52 0x65    
   \              0x73 0x65    
   \              0x74 0x0A    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_54:
   \   00000000   0x4C 0x6F          DC8 "Low-voltage Detect Reset\012"
   \              0x77 0x2D    
   \              0x76 0x6F    
   \              0x6C 0x74    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x44 0x65    
   \              0x74 0x65    
   \              0x63 0x74    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_55:
   \   00000000   0x4C 0x4C          DC8 "LLWU Reset\012"
   \              0x57 0x55    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x0A 0x00    
    466          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   DefaultISR
         8   -> printf
       8   Diagnostic_Reset_Source
         8   -> printf
       8   HardFault_Handler
         8   -> printf
       0   SystemCoreClockUpdate
      64   SystemInit
        48   -> Diagnostic_Reset_Source
        48   -> LPLD_PLL_Setup
        48   -> LPLD_UART_Init
        48   -> SystemCoreClockUpdate
        64   -> __aeabi_memcpy4
        48   -> common_relocate
        48   -> cpu_identify
        48   -> printf
       8   cpu_identify
         8   -> flash_identify
         8   -> printf
      16   flash_identify
        16   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_23
       4  ??DataTable6_24
       4  ??DataTable6_25
       4  ??DataTable6_26
       4  ??DataTable6_27
       4  ??DataTable6_28
       4  ??DataTable6_29
       4  ??DataTable6_3
       4  ??DataTable6_30
       4  ??DataTable6_31
       4  ??DataTable6_32
       4  ??DataTable6_33
       4  ??DataTable6_34
       4  ??DataTable6_35
       4  ??DataTable6_36
       4  ??DataTable6_37
       4  ??DataTable6_38
       4  ??DataTable6_39
       4  ??DataTable6_4
       4  ??DataTable6_40
       4  ??DataTable6_41
       4  ??DataTable6_42
       4  ??DataTable6_43
       4  ??DataTable6_44
       4  ??DataTable6_45
       4  ??DataTable6_46
       4  ??DataTable6_47
       4  ??DataTable6_48
       4  ??DataTable6_49
       4  ??DataTable6_5
       4  ??DataTable6_50
       4  ??DataTable6_51
       4  ??DataTable6_52
       4  ??DataTable6_53
       4  ??DataTable6_54
       4  ??DataTable6_55
       4  ??DataTable6_56
       4  ??DataTable6_57
       4  ??DataTable6_58
       4  ??DataTable6_59
       4  ??DataTable6_6
       4  ??DataTable6_60
       4  ??DataTable6_61
       4  ??DataTable6_62
       4  ??DataTable6_63
       4  ??DataTable6_64
       4  ??DataTable6_65
       4  ??DataTable6_66
       4  ??DataTable6_67
       4  ??DataTable6_68
       4  ??DataTable6_69
       4  ??DataTable6_7
       4  ??DataTable6_70
       4  ??DataTable6_71
       4  ??DataTable6_72
       4  ??DataTable6_73
       4  ??DataTable6_74
       4  ??DataTable6_75
       4  ??DataTable6_76
       4  ??DataTable6_77
       4  ??DataTable6_78
       4  ??DataTable6_79
       4  ??DataTable6_8
       4  ??DataTable6_80
       4  ??DataTable6_81
       4  ??DataTable6_82
       4  ??DataTable6_83
       4  ??DataTable6_84
       4  ??DataTable6_85
       4  ??DataTable6_86
       4  ??DataTable6_87
       4  ??DataTable6_88
       4  ??DataTable6_9
       4  ?_0
      68  ?_1
       8  ?_10
       8  ?_11
       8  ?_12
       8  ?_13
       8  ?_14
       8  ?_15
       8  ?_16
       8  ?_17
      24  ?_18
       8  ?_19
      48  ?_2
       8  ?_20
       8  ?_21
       8  ?_22
       8  ?_23
       8  ?_24
       8  ?_25
       8  ?_26
       8  ?_27
       8  ?_28
      24  ?_29
       8  ?_3
      20  ?_30
      24  ?_31
      24  ?_32
      24  ?_33
      32  ?_34
      16  ?_35
      24  ?_36
      24  ?_37
      24  ?_38
      32  ?_39
      36  ?_4
      20  ?_40
      20  ?_41
      20  ?_42
      20  ?_43
      28  ?_44
      40  ?_45
      32  ?_46
      16  ?_47
      28  ?_48
      12  ?_49
      36  ?_5
      16  ?_50
      20  ?_51
      24  ?_52
      24  ?_53
      28  ?_54
      12  ?_55
      68  ?_6
      72  ?_7
      32  ?_8
      48  ?_9
      24  DefaultISR
     130  Diagnostic_Reset_Source
      12  HardFault_Handler
       4  SystemCoreClock
      48  SystemCoreClockUpdate
     316  SystemInit
     498  cpu_identify
     166  flash_identify

 
     4 bytes in section .data
 1 216 bytes in section .rodata
 1 554 bytes in section .text
 
 1 554 bytes of CODE  memory
 1 216 bytes of CONST memory
     4 bytes of DATA  memory

Errors: none
Warnings: none
