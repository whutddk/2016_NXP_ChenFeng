###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        08/Aug/2016  13:02:55
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\app\MAIN\main.c
#    Command line =  
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\app\MAIN\main.c" -D LPLD_K60 -lCN
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\List\" -lB
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\List\" -o
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\Obj\" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\BSP\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\ITAC\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\CTL\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\MAIN\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\SENSOR\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\CPU\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\common\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\LPLD\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\LPLD\HW\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\LPLD\DEV\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\FatFs\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\FatFs\option\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\common\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\driver\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\descriptor\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\class\" -On -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\List\main.lst
#    Object file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\Obj\main.o
#
###############################################################################

C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid) 冲击华南赛 1车\app\MAIN\main.c
      1          //主函数部分
      2          //DDK 
      3          
      4          
      5          
      6          #include "include.h"
      7          

   \                                 In section .bss, align 1
      8          uint8 send_cnt = 0;
   \                     send_cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
      9          uint16 timer_cnt = 0;
   \                     timer_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     10          vuint16 temp = 0; 
   \                     temp:
   \   00000000                      DS8 2
     11          

   \                                 In section .text, align 2, keep-with-next
     12          void main (void)
     13          {
   \                     main: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     14            uint16 i,j;
     15            sysinit();
   \   00000002   0x.... 0x....      BL       sysinit
     16            
     17            temp = LDC_READ(0x7F);  
   \   00000006   0x207F             MOVS     R0,#+127
   \   00000008   0x.... 0x....      BL       LDC_READ
   \   0000000C   0x....             LDR.N    R1,??DataTable1
   \   0000000E   0x8008             STRH     R0,[R1, #+0]
     18            
     19            
     20            read_sw();
   \   00000010   0x.... 0x....      BL       read_sw
     21            LPLD_LPTMR_DelayMs(300);
   \   00000014   0xF44F 0x7096      MOV      R0,#+300
   \   00000018   0x.... 0x....      BL       LPLD_LPTMR_DelayMs
     22            
     23            
     24            if ( flag_bihuan == 0 && speed_up_Enable == 1 )//防止oled坏
   \   0000001C   0x....             LDR.N    R0,??DataTable1_1
   \   0000001E   0x7800             LDRB     R0,[R0, #+0]
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD113             BNE.N    ??main_0
   \   00000024   0x....             LDR.N    R0,??DataTable1_2
   \   00000026   0x7800             LDRB     R0,[R0, #+0]
   \   00000028   0x2801             CMP      R0,#+1
   \   0000002A   0xD10F             BNE.N    ??main_0
     25            {    
     26              GUI.para.AI = 2;
   \   0000002C   0x2002             MOVS     R0,#+2
   \   0000002E   0x....             LDR.N    R1,??DataTable1_3
   \   00000030   0x7108             STRB     R0,[R1, #+4]
     27              PIT1_init();//控制系统时钟 //暂定10ms
   \   00000032   0x.... 0x....      BL       PIT1_init
     28              PIT0_init();//主系统时钟 //1MS 一次中断
   \   00000036   0x.... 0x....      BL       PIT0_init
     29              NVIC_init();
   \   0000003A   0x.... 0x....      BL       NVIC_init
     30              
     31              flag_bihuan = 1;
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0x....             LDR.N    R1,??DataTable1_1
   \   00000042   0x7008             STRB     R0,[R1, #+0]
     32              speed_up_Enable = 0;  
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x....             LDR.N    R1,??DataTable1_2
   \   00000048   0x7008             STRB     R0,[R1, #+0]
   \   0000004A   0xE001             B.N      ??main_1
     33            
     34          }
     35          
     36            else
     37            {
     38              GUI_work();
   \                     ??main_0: (+1)
   \   0000004C   0x.... 0x....      BL       GUI_work
     39            }
     40            star();
   \                     ??main_1: (+1)
   \   00000050   0x.... 0x....      BL       star
     41            
     42            while(1)
     43            {
     44              bzled_work();
   \                     ??main_2: (+1)
   \   00000054   0x.... 0x....      BL       bzled_work
     45              
     46              //30ms发送一次示波器数据
     47              if ( send_cnt >= 1 )
   \   00000058   0x....             LDR.N    R0,??DataTable1_4
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD004             BEQ.N    ??main_3
     48              {
     49                sendDataToScope();
   \   00000060   0x.... 0x....      BL       sendDataToScope
     50                send_cnt = 0;
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x....             LDR.N    R1,??DataTable1_4
   \   00000068   0x7008             STRB     R0,[R1, #+0]
     51              }
     52              
     53              
     54              i = GUI.para.endline_time * 1000;
   \                     ??main_3: (+1)
   \   0000006A   0x....             LDR.N    R0,??DataTable1_3
   \   0000006C   0x78C0             LDRB     R0,[R0, #+3]
   \   0000006E   0xF44F 0x717A      MOV      R1,#+1000
   \   00000072   0xFB10 0xF001      SMULBB   R0,R0,R1
   \   00000076   0x0004             MOVS     R4,R0
     55              LPLD_GPIO_ClearIntFlag(PORTD);
   \   00000078   0xF05F 0x30FF      MOVS     R0,#-1
   \   0000007C   0x....             LDR.N    R1,??DataTable1_5  ;; 0x4004c0a0
   \   0000007E   0x6008             STR      R0,[R1, #+0]
     56              
     57              j = 0;
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x0005             MOVS     R5,R0
     58              j = PTD1_I + PTD5_I + PTD6_I;
   \   00000084   0x....             LDR.N    R0,??DataTable1_6  ;; 0x43fe1a04
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x....             LDR.N    R1,??DataTable1_7  ;; 0x43fe1a14
   \   0000008A   0x6809             LDR      R1,[R1, #+0]
   \   0000008C   0x1808             ADDS     R0,R1,R0
   \   0000008E   0x....             LDR.N    R1,??DataTable1_8  ;; 0x43fe1a18
   \   00000090   0x6809             LDR      R1,[R1, #+0]
   \   00000092   0x1808             ADDS     R0,R1,R0
   \   00000094   0x0005             MOVS     R5,R0
     59              
     60              if(j < 2)
   \   00000096   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000098   0x2D02             CMP      R5,#+2
   \   0000009A   0xDADB             BGE.N    ??main_2
     61              {
     62                if(1 == GUI.para.endline &&  timer_cnt > i)  //一个可调的值
   \   0000009C   0x....             LDR.N    R0,??DataTable1_3
   \   0000009E   0x7880             LDRB     R0,[R0, #+2]
   \   000000A0   0x2801             CMP      R0,#+1
   \   000000A2   0xD10E             BNE.N    ??main_4
   \   000000A4   0x....             LDR.N    R0,??DataTable1_9
   \   000000A6   0x8800             LDRH     R0,[R0, #+0]
   \   000000A8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000AA   0x4284             CMP      R4,R0
   \   000000AC   0xD209             BCS.N    ??main_4
     63                {
     64                  flag_bihuan = 0;
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x....             LDR.N    R1,??DataTable1_1
   \   000000B2   0x7008             STRB     R0,[R1, #+0]
     65                  ctl.motto.out = 0;
   \   000000B4   0x2000             MOVS     R0,#+0
   \   000000B6   0x....             LDR.N    R1,??DataTable1_10
   \   000000B8   0xF8C1 0x008C      STR      R0,[R1, #+140]
     66                  timer_cnt = 0;
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x....             LDR.N    R1,??DataTable1_9
   \   000000C0   0x8008             STRH     R0,[R1, #+0]
     67                }
     68                bz_set(datarec);
   \                     ??main_4: (+1)
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0x.... 0x....      BL       bz_set
   \   000000C8   0xE7C4             B.N      ??main_2
     69              }
     70          
     71            } 
     72          }
     73          
     74          

   \                                 In section .text, align 2, keep-with-next
     75          void MCNT_isr() // 主系统计时
     76          {
     77            if(0 == flag_stop )
   \                     MCNT_isr: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1_11
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD104             BNE.N    ??MCNT_isr_0
     78            {
     79            timer_cnt++ ;
   \   00000008   0x....             LDR.N    R0,??DataTable1_9
   \   0000000A   0x8800             LDRH     R0,[R0, #+0]
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
   \   0000000E   0x....             LDR.N    R1,??DataTable1_9
   \   00000010   0x8008             STRH     R0,[R1, #+0]
     80            }
     81            
     82            bz_cnt++;
   \                     ??MCNT_isr_0: (+1)
   \   00000012   0x....             LDR.N    R0,??DataTable1_12
   \   00000014   0x8800             LDRH     R0,[R0, #+0]
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \   00000018   0x....             LDR.N    R1,??DataTable1_12
   \   0000001A   0x8008             STRH     R0,[R1, #+0]
     83            send_cnt++;
   \   0000001C   0x....             LDR.N    R0,??DataTable1_4
   \   0000001E   0x7800             LDRB     R0,[R0, #+0]
   \   00000020   0x1C40             ADDS     R0,R0,#+1
   \   00000022   0x....             LDR.N    R1,??DataTable1_4
   \   00000024   0x7008             STRB     R0,[R1, #+0]
     84            
     85            
     86            
     87            if (timer_cnt == 65000)  //最多65秒
   \   00000026   0x....             LDR.N    R0,??DataTable1_9
   \   00000028   0x8800             LDRH     R0,[R0, #+0]
   \   0000002A   0xF64F 0x51E8      MOVW     R1,#+65000
   \   0000002E   0x4288             CMP      R0,R1
   \   00000030   0xD102             BNE.N    ??MCNT_isr_1
     88            {
     89              timer_cnt = 0;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x....             LDR.N    R1,??DataTable1_9
   \   00000036   0x8008             STRH     R0,[R1, #+0]
     90            }
     91            
     92          }
   \                     ??MCNT_isr_1: (+1)
   \   00000038   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     flag_bihuan

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     speed_up_Enable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     GUI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     send_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x4004C0A0         DC32     0x4004c0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x43FE1A04         DC32     0x43fe1a04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x43FE1A14         DC32     0x43fe1a14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x43FE1A18         DC32     0x43fe1a18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     timer_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     ctl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     flag_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     bz_cnt

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   MCNT_isr
      16   main
        16   -> GUI_work
        16   -> LDC_READ
        16   -> LPLD_LPTMR_DelayMs
        16   -> NVIC_init
        16   -> PIT0_init
        16   -> PIT1_init
        16   -> bz_set
        16   -> bzled_work
        16   -> read_sw
        16   -> sendDataToScope
        16   -> star
        16   -> sysinit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
      58  MCNT_isr
     202  main
       1  send_cnt
       2  temp
       2  timer_cnt

 
   5 bytes in section .bss
 312 bytes in section .text
 
 312 bytes of CODE memory
   5 bytes of DATA memory

Errors: none
Warnings: 1
