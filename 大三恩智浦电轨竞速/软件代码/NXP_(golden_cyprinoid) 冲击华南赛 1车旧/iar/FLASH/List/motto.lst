###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        08/Aug/2016  13:02:56
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\app\CTL\motto.c
#    Command line =  
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\app\CTL\motto.c" -D LPLD_K60 -lCN
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\List\" -lB
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\List\" -o
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\Obj\" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\BSP\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\ITAC\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\CTL\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\MAIN\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\SENSOR\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\CPU\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\common\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\LPLD\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\LPLD\HW\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\LPLD\DEV\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\FatFs\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\FatFs\option\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\common\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\driver\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\descriptor\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\class\" -On -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\List\motto.lst
#    Object file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\Obj\motto.o
#
###############################################################################

C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid) 冲击华南赛 1车\app\CTL\motto.c
      1          //电机控制
      2          #include "include.h"
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void motto_set()
      5          {
   \                     motto_set: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      6            //限幅
      7            if ( ctl.motto.out > 9500 )
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   00000008   0x....             LDR.N    R1,??DataTable2_1  ;; 0x46147001
   \   0000000A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000000E   0xD804             BHI.N    ??motto_set_0
      8            {
      9              ctl.motto.out = 9500;
   \   00000010   0x....             LDR.N    R0,??DataTable2_2  ;; 0x46147000
   \   00000012   0x....             LDR.N    R1,??DataTable2
   \   00000014   0xF8C1 0x008C      STR      R0,[R1, #+140]
   \   00000018   0xE00A             B.N      ??motto_set_1
     10            }
     11            else if ( ctl.motto.out < -9500 )
   \                     ??motto_set_0: (+1)
   \   0000001A   0x....             LDR.N    R0,??DataTable2
   \   0000001C   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   00000020   0x....             LDR.N    R1,??DataTable2_3  ;; 0xc6147000
   \   00000022   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000026   0xD203             BCS.N    ??motto_set_1
     12            {
     13              ctl.motto.out = -9500;
   \   00000028   0x....             LDR.N    R0,??DataTable2_3  ;; 0xc6147000
   \   0000002A   0x....             LDR.N    R1,??DataTable2
   \   0000002C   0xF8C1 0x008C      STR      R0,[R1, #+140]
     14            }
     15            
     16            if ( ctl.motto.out >= 0.000000  )
   \                     ??motto_set_1: (+1)
   \   00000030   0x....             LDR.N    R0,??DataTable2
   \   00000032   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000003C   0xD80F             BHI.N    ??motto_set_2
     17            {
     18              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, (uint32) ( ctl.motto.out ) );
   \   0000003E   0x....             LDR.N    R0,??DataTable2
   \   00000040   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   00000044   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000048   0x0002             MOVS     R2,R0
   \   0000004A   0x2101             MOVS     R1,#+1
   \   0000004C   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   0000004E   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     19              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, (uint32) 0 );
   \   00000052   0x2200             MOVS     R2,#+0
   \   00000054   0x2100             MOVS     R1,#+0
   \   00000056   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   00000058   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
   \   0000005C   0xE017             B.N      ??motto_set_3
     20            }
     21            else if ( ctl.motto.out < 0.000000 )
   \                     ??motto_set_2: (+1)
   \   0000005E   0x....             LDR.N    R0,??DataTable2
   \   00000060   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   00000064   0x2100             MOVS     R1,#+0
   \   00000066   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000006A   0xD210             BCS.N    ??motto_set_3
     22            {
     23              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0 );
   \   0000006C   0x2200             MOVS     R2,#+0
   \   0000006E   0x2101             MOVS     R1,#+1
   \   00000070   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   00000072   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     24              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, (uint32) ( -ctl.motto.out ) );
   \   00000076   0x....             LDR.N    R0,??DataTable2
   \   00000078   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   0000007C   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000080   0x.... 0x....      BL       __aeabi_f2uiz
   \   00000084   0x0002             MOVS     R2,R0
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40038000
   \   0000008A   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     25            }
     26            
     27            push(6,ctl.motto.out);
   \                     ??motto_set_3: (+1)
   \   0000008E   0x....             LDR.N    R0,??DataTable2
   \   00000090   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   00000094   0x.... 0x....      BL       __aeabi_f2iz
   \   00000098   0x0001             MOVS     R1,R0
   \   0000009A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000009C   0x2006             MOVS     R0,#+6
   \   0000009E   0x.... 0x....      BL       `push`
     28          }
   \   000000A2   0xBD01             POP      {R0,PC}          ;; return
     29          
     30          
     31          
     32          //轮子172mm 5000个脉冲
     33          

   \                                 In section .text, align 2, keep-with-next
     34          void motto_getsped()
     35          {
   \                     motto_getsped: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     36            
     37            ctl.motto.sped_cur =  -LPLD_FTM_GetCounter(FTM2)  ;//赋值需要不可以连等
   \   00000002   0x....             LDR.N    R0,??DataTable2_5  ;; 0x400b8000
   \   00000004   0x.... 0x....      BL       LPLD_FTM_GetCounter
   \   00000008   0x4240             RSBS     R0,R0,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable2
   \   0000000C   0xF8A1 0x0058      STRH     R0,[R1, #+88]
     38            
     39            LPLD_FTM_ClearCounter(FTM2);
   \   00000010   0x....             LDR.N    R0,??DataTable2_5  ;; 0x400b8000
   \   00000012   0x.... 0x....      BL       LPLD_FTM_ClearCounter
     40            push(5,ctl.motto.sped_cur);  
   \   00000016   0x....             LDR.N    R0,??DataTable2
   \   00000018   0xF8B0 0x1058      LDRH     R1,[R0, #+88]
   \   0000001C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000001E   0x2005             MOVS     R0,#+5
   \   00000020   0x.... 0x....      BL       `push`
     41          }
   \   00000024   0xBD01             POP      {R0,PC}          ;; return
     42          
     43          
     44          
     45          

   \                                 In section .data, align 1
     46          int8 Straight_Flag=1;
   \                     Straight_Flag:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 1
     47          boolean speed_up_Enable;
   \                     speed_up_Enable:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
     48          void ctl_sped() //速度控制，增量式PI控制
     49          {
   \                     ctl_sped: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     50            
     51            if(1 == speed_up_Enable)
   \   00000002   0x....             LDR.N    R0,??DataTable2_6
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD11A             BNE.N    ??ctl_sped_0
     52            {
     53              if(ctl.motto.v_error > 160)
   \   0000000A   0x....             LDR.N    R0,??DataTable2
   \   0000000C   0xF9B0 0x005E      LDRSH    R0,[R0, #+94]
   \   00000010   0x28A1             CMP      R0,#+161
   \   00000012   0xDB04             BLT.N    ??ctl_sped_1
     54              {
     55                ctl.motto.v_error = 160;
   \   00000014   0x20A0             MOVS     R0,#+160
   \   00000016   0x....             LDR.N    R1,??DataTable2
   \   00000018   0xF8A1 0x005E      STRH     R0,[R1, #+94]
   \   0000001C   0xE008             B.N      ??ctl_sped_2
     56              }
     57              else if(ctl.motto.v_error < 25)
   \                     ??ctl_sped_1: (+1)
   \   0000001E   0x....             LDR.N    R0,??DataTable2
   \   00000020   0xF9B0 0x005E      LDRSH    R0,[R0, #+94]
   \   00000024   0x2819             CMP      R0,#+25
   \   00000026   0xDA03             BGE.N    ??ctl_sped_2
     58              {
     59                ctl.motto.v_error = 0;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x....             LDR.N    R1,??DataTable2
   \   0000002C   0xF8A1 0x005E      STRH     R0,[R1, #+94]
     60              }
     61              
     62              ctl.motto.v_error = 150 - ctl.motto.v_error;
   \                     ??ctl_sped_2: (+1)
   \   00000030   0x....             LDR.N    R0,??DataTable2
   \   00000032   0xF8B0 0x005E      LDRH     R0,[R0, #+94]
   \   00000036   0xF1D0 0x0096      RSBS     R0,R0,#+150
   \   0000003A   0x....             LDR.N    R1,??DataTable2
   \   0000003C   0xF8A1 0x005E      STRH     R0,[R1, #+94]
     63            }
     64            
     65              ctl.motto.aim = ctl.motto.v + ctl.motto.v_error;
   \                     ??ctl_sped_0: (+1)
   \   00000040   0x....             LDR.N    R0,??DataTable2
   \   00000042   0xF8B0 0x005C      LDRH     R0,[R0, #+92]
   \   00000046   0x....             LDR.N    R1,??DataTable2
   \   00000048   0xF8B1 0x105E      LDRH     R1,[R1, #+94]
   \   0000004C   0x1808             ADDS     R0,R1,R0
   \   0000004E   0x....             LDR.N    R1,??DataTable2
   \   00000050   0xF8A1 0x005A      STRH     R0,[R1, #+90]
     66          
     67              
     68            if(1 == flag_ramp)     //坡道未正常关闭，则一定距离后关闭
   \   00000054   0x....             LDR.N    R0,??DataTable2_7
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x2801             CMP      R0,#+1
   \   0000005A   0xD12B             BNE.N    ??ctl_sped_3
     69            {
     70              ctl.motto.ramp += ctl.motto.sped_cur;
   \   0000005C   0x....             LDR.N    R0,??DataTable2
   \   0000005E   0xF8D0 0x00A4      LDR      R0,[R0, #+164]
   \   00000062   0x....             LDR.N    R1,??DataTable2
   \   00000064   0xF9B1 0x1058      LDRSH    R1,[R1, #+88]
   \   00000068   0x1840             ADDS     R0,R0,R1
   \   0000006A   0x....             LDR.N    R1,??DataTable2
   \   0000006C   0xF8C1 0x00A4      STR      R0,[R1, #+164]
     71              ctl.motto.aim = ctl.motto.v;
   \   00000070   0x....             LDR.N    R0,??DataTable2
   \   00000072   0xF8B0 0x005C      LDRH     R0,[R0, #+92]
   \   00000076   0x....             LDR.N    R1,??DataTable2
   \   00000078   0xF8A1 0x005A      STRH     R0,[R1, #+90]
     72              
     73              if(ctl.motto.ramp > 80000)    //计距离强制置0
   \   0000007C   0x....             LDR.N    R0,??DataTable2
   \   0000007E   0xF8D0 0x00A4      LDR      R0,[R0, #+164]
   \   00000082   0x....             LDR.N    R1,??DataTable2_8  ;; 0x13881
   \   00000084   0x4288             CMP      R0,R1
   \   00000086   0xDB30             BLT.N    ??ctl_sped_4
     74              {
     75                flag_ramp = 0;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x....             LDR.N    R1,??DataTable2_7
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
     76                BZ_OFF;
   \   0000008E   0x2200             MOVS     R2,#+0
   \   00000090   0x210A             MOVS     R1,#+10
   \   00000092   0x....             LDR.N    R0,??DataTable2_9  ;; 0x400ff100
   \   00000094   0x.... 0x....      BL       LPLD_GPIO_Output_b
     77                ctl.motto.ramp = 0;
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x....             LDR.N    R1,??DataTable2
   \   0000009C   0xF8C1 0x00A4      STR      R0,[R1, #+164]
     78                ramp_Enable = 0;
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x....             LDR.N    R1,??DataTable2_10
   \   000000A4   0x7008             STRB     R0,[R1, #+0]
     79                bz_set(warn);
   \   000000A6   0x2002             MOVS     R0,#+2
   \   000000A8   0x.... 0x....      BL       bz_set
     80                ramp_cnt = 0;
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x....             LDR.N    R1,??DataTable2_11
   \   000000B0   0x7008             STRB     R0,[R1, #+0]
   \   000000B2   0xE01A             B.N      ??ctl_sped_4
     81              }
     82            }
     83             else if(ramp_Enable == 0)        //隔大约2m检测下一个坡道
   \                     ??ctl_sped_3: (+1)
   \   000000B4   0x....             LDR.N    R0,??DataTable2_10
   \   000000B6   0x7800             LDRB     R0,[R0, #+0]
   \   000000B8   0x2800             CMP      R0,#+0
   \   000000BA   0xD116             BNE.N    ??ctl_sped_4
     84             {
     85               ctl.motto.ramp += ctl.motto.sped_cur;
   \   000000BC   0x....             LDR.N    R0,??DataTable2
   \   000000BE   0xF8D0 0x00A4      LDR      R0,[R0, #+164]
   \   000000C2   0x....             LDR.N    R1,??DataTable2
   \   000000C4   0xF9B1 0x1058      LDRSH    R1,[R1, #+88]
   \   000000C8   0x1840             ADDS     R0,R0,R1
   \   000000CA   0x....             LDR.N    R1,??DataTable2
   \   000000CC   0xF8C1 0x00A4      STR      R0,[R1, #+164]
     86               if(ctl.motto.ramp > 80000)
   \   000000D0   0x....             LDR.N    R0,??DataTable2
   \   000000D2   0xF8D0 0x00A4      LDR      R0,[R0, #+164]
   \   000000D6   0x....             LDR.N    R1,??DataTable2_8  ;; 0x13881
   \   000000D8   0x4288             CMP      R0,R1
   \   000000DA   0xDB06             BLT.N    ??ctl_sped_4
     87               {
     88                 ctl.motto.ramp = 0;
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x....             LDR.N    R1,??DataTable2
   \   000000E0   0xF8C1 0x00A4      STR      R0,[R1, #+164]
     89                 ramp_Enable = 1;
   \   000000E4   0x2001             MOVS     R0,#+1
   \   000000E6   0x....             LDR.N    R1,??DataTable2_10
   \   000000E8   0x7008             STRB     R0,[R1, #+0]
     90               }
     91             }
     92            
     93          //  push(11,ctl.motto.ramp/10);
     94              
     95           
     96            
     97            ctl.motto.error[1] =   ctl.motto.aim  - ctl.motto.sped_cur;
   \                     ??ctl_sped_4: (+1)
   \   000000EA   0x....             LDR.N    R0,??DataTable2
   \   000000EC   0xF9B0 0x005A      LDRSH    R0,[R0, #+90]
   \   000000F0   0x....             LDR.N    R1,??DataTable2
   \   000000F2   0xF9B1 0x1058      LDRSH    R1,[R1, #+88]
   \   000000F6   0x1A40             SUBS     R0,R0,R1
   \   000000F8   0x.... 0x....      BL       __aeabi_i2f
   \   000000FC   0x....             LDR.N    R1,??DataTable2
   \   000000FE   0xF8C1 0x0094      STR      R0,[R1, #+148]
     98            
     99            ctl.motto.result[1]  = ctl.motto.Kp  * ( ctl.motto.error[1] - ctl.motto.error[0] );
   \   00000102   0x....             LDR.N    R0,??DataTable2
   \   00000104   0xF8D0 0x0094      LDR      R0,[R0, #+148]
   \   00000108   0x....             LDR.N    R1,??DataTable2
   \   0000010A   0xF8D1 0x1090      LDR      R1,[R1, #+144]
   \   0000010E   0x.... 0x....      BL       __aeabi_fsub
   \   00000112   0x....             LDR.N    R1,??DataTable2
   \   00000114   0x6E09             LDR      R1,[R1, #+96]
   \   00000116   0x.... 0x....      BL       __aeabi_fmul
   \   0000011A   0x....             LDR.N    R1,??DataTable2
   \   0000011C   0xF8C1 0x0088      STR      R0,[R1, #+136]
    100            ctl.motto.result[1] += ctl.motto.Ki  *   ctl.motto.error[1];
   \   00000120   0x....             LDR.N    R0,??DataTable2
   \   00000122   0x6E40             LDR      R0,[R0, #+100]
   \   00000124   0x....             LDR.N    R1,??DataTable2
   \   00000126   0xF8D1 0x1094      LDR      R1,[R1, #+148]
   \   0000012A   0x.... 0x....      BL       __aeabi_fmul
   \   0000012E   0x....             LDR.N    R1,??DataTable2
   \   00000130   0xF8D1 0x1088      LDR      R1,[R1, #+136]
   \   00000134   0x.... 0x....      BL       __aeabi_fadd
   \   00000138   0x....             LDR.N    R1,??DataTable2
   \   0000013A   0xF8C1 0x0088      STR      R0,[R1, #+136]
    101            
    102            ctl.motto.error[0] = ctl.motto.error[1];  
   \   0000013E   0x....             LDR.N    R0,??DataTable2
   \   00000140   0xF8D0 0x0094      LDR      R0,[R0, #+148]
   \   00000144   0x....             LDR.N    R1,??DataTable2
   \   00000146   0xF8C1 0x0090      STR      R0,[R1, #+144]
    103            ctl.motto.out += ctl.motto.result[1];
   \   0000014A   0x....             LDR.N    R0,??DataTable2
   \   0000014C   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   00000150   0x....             LDR.N    R1,??DataTable2
   \   00000152   0xF8D1 0x1088      LDR      R1,[R1, #+136]
   \   00000156   0x.... 0x....      BL       __aeabi_fadd
   \   0000015A   0x....             LDR.N    R1,??DataTable2
   \   0000015C   0xF8C1 0x008C      STR      R0,[R1, #+140]
    104          
    105            
    106            
    107            if(1 == ramp_cnt)
   \   00000160   0x....             LDR.N    R0,??DataTable2_11
   \   00000162   0x7800             LDRB     R0,[R0, #+0]
   \   00000164   0x2801             CMP      R0,#+1
   \   00000166   0xD111             BNE.N    ??ctl_sped_5
    108            {
    109              if(ctl.motto.error[1] < -40)
   \   00000168   0x....             LDR.N    R0,??DataTable2
   \   0000016A   0xF8D0 0x0094      LDR      R0,[R0, #+148]
   \   0000016E   0x....             LDR.N    R1,??DataTable2_12  ;; 0xc2200000
   \   00000170   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000174   0xD20A             BCS.N    ??ctl_sped_5
    110                if(ctl.motto.out > -1000)
   \   00000176   0x....             LDR.N    R0,??DataTable2
   \   00000178   0xF8D0 0x008C      LDR      R0,[R0, #+140]
   \   0000017C   0x....             LDR.N    R1,??DataTable2_13  ;; 0xc479ffff
   \   0000017E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000182   0xD803             BHI.N    ??ctl_sped_5
    111                ctl.motto.out = -1000;
   \   00000184   0x....             LDR.N    R0,??DataTable2_14  ;; 0xc47a0000
   \   00000186   0x....             LDR.N    R1,??DataTable2
   \   00000188   0xF8C1 0x008C      STR      R0,[R1, #+140]
    112            }
    113            push(4,ctl.motto.aim);
   \                     ??ctl_sped_5: (+1)
   \   0000018C   0x....             LDR.N    R0,??DataTable2
   \   0000018E   0xF8B0 0x105A      LDRH     R1,[R0, #+90]
   \   00000192   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000194   0x2004             MOVS     R0,#+4
   \   00000196   0x.... 0x....      BL       `push`
    114          
    115          }
   \   0000019A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ctl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x46147001         DC32     0x46147001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x46147000         DC32     0x46147000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0xC6147000         DC32     0xc6147000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     speed_up_Enable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     flag_ramp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x00013881         DC32     0x13881

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     ramp_Enable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     ramp_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0xC2200000         DC32     0xc2200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0xC479FFFF         DC32     0xc479ffff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0xC47A0000         DC32     0xc47a0000
    116          
    117          
    118          
    119          /*
    120          void ctl_sped() //速度控制，增量式PI控制
    121          {
    122            
    123            if(line.pos < 50 && line.pos > -50)
    124            {   
    125              ctl.motto.distance += ctl.motto.sped_cur;
    126              
    127              if(ctl.motto.distance >= 3000)
    128              {
    129                Straight_Flag = 1;
    130                
    131                if(ctl.motto.distance > 20000)
    132                {
    133                  ctl.motto.distance = 8000;
    134                }
    135              }  
    136              else
    137              {
    138                Straight_Flag = 0;  
    139              }  
    140            }
    141            
    142            else
    143            {
    144              Straight_Flag = 0;
    145              ctl.motto.distance = 0;
    146            }
    147            
    148            
    149            
    150            if(Straight_Flag == 1)
    151              
    152            {
    153              ctl.motto.aim = ctl.motto.v * 1.4;
    154            // BZ_ON;
    155            }
    156            
    157            else
    158            {
    159              ctl.motto.aim = ctl.motto.v;
    160              //BZ_OFF;
    161            }
    162            
    163            
    164            ctl.motto.error[1] =   ctl.motto.aim  - ctl.motto.sped_cur;
    165            
    166            ctl.motto.result[1]  = (ctl.motto.Kp)  * ( ctl.motto.error[1] - ctl.motto.error[0] );
    167            ctl.motto.result[1] += (ctl.motto.Ki)  *   ctl.motto.error[1];
    168            
    169            ctl.motto.error[0] = ctl.motto.error[1];  
    170            ctl.motto.out += ctl.motto.result[1];
    171            
    172              
    173            push(4,ctl.motto.aim);
    174          
    175          }*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ctl_sped
         8   -> LPLD_GPIO_Output_b
         8   -> __aeabi_fadd
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_i2f
         8   -> bz_set
         8   -> push
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
       8   motto_getsped
         8   -> LPLD_FTM_ClearCounter
         8   -> LPLD_FTM_GetCounter
         8   -> push
       8   motto_set
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> __aeabi_f2iz
         8   -> __aeabi_f2uiz
         8   -> push
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       1  Straight_Flag
     412  ctl_sped
      38  motto_getsped
     164  motto_set
       1  speed_up_Enable

 
   1 byte  in section .bss
   1 byte  in section .data
 674 bytes in section .text
 
 674 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: 1
