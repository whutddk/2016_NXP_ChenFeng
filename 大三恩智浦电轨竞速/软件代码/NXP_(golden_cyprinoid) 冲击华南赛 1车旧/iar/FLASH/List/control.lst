###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        08/Aug/2016  13:02:42
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\app\CTL\control.c
#    Command line =  
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\app\CTL\control.c" -D LPLD_K60 -lCN
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\List\" -lB
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\List\" -o
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\Obj\" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\BSP\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\ITAC\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\CTL\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\MAIN\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\app\SENSOR\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\CPU\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\common\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\LPLD\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\LPLD\HW\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\LPLD\DEV\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\FatFs\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\FatFs\option\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\common\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\driver\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\descriptor\" -I
#        "C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\..\..\..\lib\USB\class\" -On -I "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\" -D
#        ARM_MATH_CM4
#    List file    =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\List\control.lst
#    Object file  =  
#        C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid)
#        冲击华南赛 1车\iar\FLASH\Obj\control.o
#
###############################################################################

C:\百度云同步盘\比赛代码\LPLD_OSKinetis_V3\launch\NXP_(golden_cyprinoid) 冲击华南赛 1车\app\CTL\control.c
      1          //控制部分通用代码
      2          #include "include.h"
      3          

   \                                 In section .bss, align 4
      4          struct _ctl ctl;
   \                     ctl:
   \   00000000                      DS8 176
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void CTL_SEN_init()//控制参数初始化
      7          {
      8            ctl.S3010.Kp_S = 0.39;
   \                     CTL_SEN_init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1  ;; 0x3ec7ae14
   \   00000002   0x....             LDR.N    R1,??DataTable1_1
   \   00000004   0x6148             STR      R0,[R1, #+20]
      9            //  ctl.S3010.Kp_B = 0;
     10            //  
     11            ctl.S3010.Kd_S = 0.3;
   \   00000006   0x....             LDR.N    R0,??DataTable1_2  ;; 0x3e99999a
   \   00000008   0x....             LDR.N    R1,??DataTable1_1
   \   0000000A   0x6208             STR      R0,[R1, #+32]
     12            //  ctl.S3010.Kd_B = 0;
     13            
     14            ctl.motto.Kp_B = 0.75;
   \   0000000C   0xF05F 0x507D      MOVS     R0,#+1061158912
   \   00000010   0x....             LDR.N    R1,??DataTable1_1
   \   00000012   0x6748             STR      R0,[R1, #+116]
     15            ctl.motto.Kd_B = 10;
   \   00000014   0x....             LDR.N    R0,??DataTable1_3  ;; 0x41200000
   \   00000016   0x....             LDR.N    R1,??DataTable1_1
   \   00000018   0xF8C1 0x0080      STR      R0,[R1, #+128]
     16            ctl.motto.Kp_S = 0.4;
   \   0000001C   0x....             LDR.N    R0,??DataTable1_4  ;; 0x3ecccccd
   \   0000001E   0x....             LDR.N    R1,??DataTable1_1
   \   00000020   0x66C8             STR      R0,[R1, #+108]
     17            ctl.motto.Kd_S = 1.2;
   \   00000022   0x....             LDR.N    R0,??DataTable1_5  ;; 0x3f99999a
   \   00000024   0x....             LDR.N    R1,??DataTable1_1
   \   00000026   0x6788             STR      R0,[R1, #+120]
     18            
     19            
     20            ctl.motto.v_error = 0;
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x....             LDR.N    R1,??DataTable1_1
   \   0000002C   0xF8A1 0x005E      STRH     R0,[R1, #+94]
     21            
     22            ctl.motto.v = 675;
   \   00000030   0xF240 0x20A3      MOVW     R0,#+675
   \   00000034   0x....             LDR.N    R1,??DataTable1_1
   \   00000036   0xF8A1 0x005C      STRH     R0,[R1, #+92]
     23            
     24            ctl.motto.Kp = 2;
   \   0000003A   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000003E   0x....             LDR.N    R1,??DataTable1_1
   \   00000040   0x6608             STR      R0,[R1, #+96]
     25            ctl.motto.Ki = 6;
   \   00000042   0x....             LDR.N    R0,??DataTable1_6  ;; 0x40c00000
   \   00000044   0x....             LDR.N    R1,??DataTable1_1
   \   00000046   0x6648             STR      R0,[R1, #+100]
     26            
     27            ctl.motto.out = 0;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x....             LDR.N    R1,??DataTable1_1
   \   0000004C   0xF8C1 0x008C      STR      R0,[R1, #+140]
     28             
     29            line.pos = 0;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x....             LDR.N    R1,??DataTable1_7
   \   00000054   0x8148             STRH     R0,[R1, #+10]
     30            
     31            sensor.max[0] = 258;
   \   00000056   0xF44F 0x7081      MOV      R0,#+258
   \   0000005A   0x....             LDR.N    R1,??DataTable1_8
   \   0000005C   0xF8A1 0x004C      STRH     R0,[R1, #+76]
     32            sensor.max[1] = 253;  
   \   00000060   0x20FD             MOVS     R0,#+253
   \   00000062   0x....             LDR.N    R1,??DataTable1_8
   \   00000064   0xF8A1 0x004E      STRH     R0,[R1, #+78]
     33            sensor.max[2] = 252;  
   \   00000068   0x20FC             MOVS     R0,#+252
   \   0000006A   0x....             LDR.N    R1,??DataTable1_8
   \   0000006C   0xF8A1 0x0050      STRH     R0,[R1, #+80]
     34          
     35            sensor.min[0] = -273;
   \   00000070   0xF47F 0x7088      MVNS     R0,#+272
   \   00000074   0x....             LDR.N    R1,??DataTable1_8
   \   00000076   0xF8A1 0x0052      STRH     R0,[R1, #+82]
     36            sensor.min[1] = -249;  
   \   0000007A   0xF07F 0x00F8      MVNS     R0,#+248
   \   0000007E   0x....             LDR.N    R1,??DataTable1_8
   \   00000080   0xF8A1 0x0054      STRH     R0,[R1, #+84]
     37            sensor.min[2] = -282;
   \   00000084   0x....             LDR.N    R0,??DataTable1_9  ;; 0xfffffee6
   \   00000086   0x....             LDR.N    R1,??DataTable1_8
   \   00000088   0xF8A1 0x0056      STRH     R0,[R1, #+86]
     38            
     39            ctl.motto.distance = 5000;
   \   0000008C   0xF241 0x3088      MOVW     R0,#+5000
   \   00000090   0x....             LDR.N    R1,??DataTable1_1
   \   00000092   0xF8A1 0x00A0      STRH     R0,[R1, #+160]
     40            GUI.para.endline_time = 15 ;
   \   00000096   0x200F             MOVS     R0,#+15
   \   00000098   0x....             LDR.N    R1,??DataTable1_10
   \   0000009A   0x70C8             STRB     R0,[R1, #+3]
     41            
     42          }
   \   0000009C   0x4770             BX       LR               ;; return
     43          
     44          

   \                                 In section .data, align 1
     45          boolean flag_bihuan = 1;
   \                     flag_bihuan:
   \   00000000   0x01               DC8 1

   \                                 In section .data, align 1
     46          boolean ramp_Enable = 1;
   \                     ramp_Enable:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 1
     47          boolean flag_ramp;
   \                     flag_ramp:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     48          boolean cross_Enable = 1;
   \                     cross_Enable:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 1
     49          boolean flag_cross;
   \                     flag_cross:
   \   00000000                      DS8 1
     50          
     51          
     52          //控制中断函数

   \                                 In section .text, align 2, keep-with-next
     53          void CTL_isr()//控制系统调度 //20ms
     54          {
   \                     CTL_isr: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     55            //LPLD_GPIO_Output_b(PTD,1,0);
     56            static uint8 cnt = 0;
     57            
     58            cnt++;
   \   00000002   0x....             LDR.N    R0,??DataTable1_11
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x....             LDR.N    R1,??DataTable1_11
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
     59            /*LDC_GETDATA*/
     60            LDC1614_read_meas();
   \   0000000C   0x.... 0x....      BL       LDC1614_read_meas
     61            
     62            sensor.data[0] = LDC_data[0] - 1550800;
   \   00000010   0x....             LDR.N    R0,??DataTable1_12
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x....             LDR.N    R1,??DataTable1_13  ;; 0xffe85630
   \   00000016   0x1808             ADDS     R0,R1,R0
   \   00000018   0x....             LDR.N    R1,??DataTable1_8
   \   0000001A   0x6348             STR      R0,[R1, #+52]
     63            sensor.data[0] /= 35;
   \   0000001C   0x....             LDR.N    R0,??DataTable1_8
   \   0000001E   0x6B40             LDR      R0,[R0, #+52]
   \   00000020   0x2123             MOVS     R1,#+35
   \   00000022   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000026   0x....             LDR.N    R1,??DataTable1_8
   \   00000028   0x6348             STR      R0,[R1, #+52]
     64            sensor.data[0] -= sensor.offset[0];
   \   0000002A   0x....             LDR.N    R0,??DataTable1_8
   \   0000002C   0x6B40             LDR      R0,[R0, #+52]
   \   0000002E   0x....             LDR.N    R1,??DataTable1_8
   \   00000030   0x6809             LDR      R1,[R1, #+0]
   \   00000032   0x1A40             SUBS     R0,R0,R1
   \   00000034   0x....             LDR.N    R1,??DataTable1_8
   \   00000036   0x6348             STR      R0,[R1, #+52]
     65            
     66            sensor.data[1] = LDC_data[1] - 1564560;
   \   00000038   0x....             LDR.N    R0,??DataTable1_12
   \   0000003A   0x6840             LDR      R0,[R0, #+4]
   \   0000003C   0x....             LDR.N    R1,??DataTable1_14  ;; 0xffe82070
   \   0000003E   0x1808             ADDS     R0,R1,R0
   \   00000040   0x....             LDR.N    R1,??DataTable1_8
   \   00000042   0x6388             STR      R0,[R1, #+56]
     67            sensor.data[1] /= 35;
   \   00000044   0x....             LDR.N    R0,??DataTable1_8
   \   00000046   0x6B80             LDR      R0,[R0, #+56]
   \   00000048   0x2123             MOVS     R1,#+35
   \   0000004A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000004E   0x....             LDR.N    R1,??DataTable1_8
   \   00000050   0x6388             STR      R0,[R1, #+56]
     68            sensor.data[1] -= sensor.offset[1];
   \   00000052   0x....             LDR.N    R0,??DataTable1_8
   \   00000054   0x6B80             LDR      R0,[R0, #+56]
   \   00000056   0x....             LDR.N    R1,??DataTable1_8
   \   00000058   0x6849             LDR      R1,[R1, #+4]
   \   0000005A   0x1A40             SUBS     R0,R0,R1
   \   0000005C   0x....             LDR.N    R1,??DataTable1_8
   \   0000005E   0x6388             STR      R0,[R1, #+56]
     69            
     70            sensor.data[3] = sensor.data[1] + 15;   //坡道时使用
   \   00000060   0x....             LDR.N    R0,??DataTable1_8
   \   00000062   0x6B80             LDR      R0,[R0, #+56]
   \   00000064   0x300F             ADDS     R0,R0,#+15
   \   00000066   0x....             LDR.N    R1,??DataTable1_8
   \   00000068   0x6408             STR      R0,[R1, #+64]
     71            if(sensor.data[3] < 1)
   \   0000006A   0x....             LDR.N    R0,??DataTable1_8
   \   0000006C   0x6C00             LDR      R0,[R0, #+64]
   \   0000006E   0x2801             CMP      R0,#+1
   \   00000070   0xDA02             BGE.N    ??CTL_isr_0
     72            {
     73              sensor.data[3] = 1;
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x....             LDR.N    R1,??DataTable1_8
   \   00000076   0x6408             STR      R0,[R1, #+64]
     74            }
     75            
     76            sensor.data[2] = LDC_data[2] - 1552200;
   \                     ??CTL_isr_0: (+1)
   \   00000078   0x....             LDR.N    R0,??DataTable1_12
   \   0000007A   0x6880             LDR      R0,[R0, #+8]
   \   0000007C   0x....             LDR.N    R1,??DataTable1_15  ;; 0xffe850b8
   \   0000007E   0x1808             ADDS     R0,R1,R0
   \   00000080   0x....             LDR.N    R1,??DataTable1_8
   \   00000082   0x63C8             STR      R0,[R1, #+60]
     77            sensor.data[2] /= 35;
   \   00000084   0x....             LDR.N    R0,??DataTable1_8
   \   00000086   0x6BC0             LDR      R0,[R0, #+60]
   \   00000088   0x2123             MOVS     R1,#+35
   \   0000008A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000008E   0x....             LDR.N    R1,??DataTable1_8
   \   00000090   0x63C8             STR      R0,[R1, #+60]
     78            sensor.data[2] -= sensor.offset[2];
   \   00000092   0x....             LDR.N    R0,??DataTable1_8
   \   00000094   0x6BC0             LDR      R0,[R0, #+60]
   \   00000096   0x....             LDR.N    R1,??DataTable1_8
   \   00000098   0x6889             LDR      R1,[R1, #+8]
   \   0000009A   0x1A40             SUBS     R0,R0,R1
   \   0000009C   0x....             LDR.N    R1,??DataTable1_8
   \   0000009E   0x63C8             STR      R0,[R1, #+60]
     79            
     80            if(cross_Enable == 1)     //十字
   \   000000A0   0x....             LDR.N    R0,??DataTable1_16
   \   000000A2   0x7800             LDRB     R0,[R0, #+0]
   \   000000A4   0x2801             CMP      R0,#+1
   \   000000A6   0xD112             BNE.N    ??CTL_isr_1
     81            {
     82              if(sensor.data[0] > 35 && sensor.data[1] > 190 && sensor.data[2] > 35)
   \   000000A8   0x....             LDR.N    R0,??DataTable1_8
   \   000000AA   0x6B40             LDR      R0,[R0, #+52]
   \   000000AC   0x2824             CMP      R0,#+36
   \   000000AE   0xDB0B             BLT.N    ??CTL_isr_2
   \   000000B0   0x....             LDR.N    R0,??DataTable1_8
   \   000000B2   0x6B80             LDR      R0,[R0, #+56]
   \   000000B4   0x28BF             CMP      R0,#+191
   \   000000B6   0xDB07             BLT.N    ??CTL_isr_2
   \   000000B8   0x....             LDR.N    R0,??DataTable1_8
   \   000000BA   0x6BC0             LDR      R0,[R0, #+60]
   \   000000BC   0x2824             CMP      R0,#+36
   \   000000BE   0xDB03             BLT.N    ??CTL_isr_2
     83                flag_cross = 1;
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x....             LDR.N    R1,??DataTable1_17
   \   000000C4   0x7008             STRB     R0,[R1, #+0]
   \   000000C6   0xE002             B.N      ??CTL_isr_1
     84              
     85              else
     86              {
     87                flag_cross = 0;
   \                     ??CTL_isr_2: (+1)
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x....             LDR.N    R1,??DataTable1_17
   \   000000CC   0x7008             STRB     R0,[R1, #+0]
     88              }
     89            }
     90            
     91            
     92            if(ramp_Enable == 1)
   \                     ??CTL_isr_1: (+1)
   \   000000CE   0x....             LDR.N    R0,??DataTable1_18
   \   000000D0   0x7800             LDRB     R0,[R0, #+0]
   \   000000D2   0x2801             CMP      R0,#+1
   \   000000D4   0xD101             BNE.N    ??CTL_isr_3
     93            {
     94              ramp();
   \   000000D6   0x.... 0x....      BL       ramp
     95            }
     96            
     97          //  push(13,ramp_cnt);
     98            push(14,sensor.data[0] );
   \                     ??CTL_isr_3: (+1)
   \   000000DA   0x....             LDR.N    R0,??DataTable1_8
   \   000000DC   0x6B41             LDR      R1,[R0, #+52]
   \   000000DE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000E0   0x200E             MOVS     R0,#+14
   \   000000E2   0x.... 0x....      BL       `push`
     99            push(15,sensor.data[3] );
   \   000000E6   0x....             LDR.N    R0,??DataTable1_8
   \   000000E8   0x6C01             LDR      R1,[R0, #+64]
   \   000000EA   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000EC   0x200F             MOVS     R0,#+15
   \   000000EE   0x.... 0x....      BL       `push`
    100            push(16,sensor.data[2] );
   \   000000F2   0x....             LDR.N    R0,??DataTable1_8
   \   000000F4   0x6BC1             LDR      R1,[R0, #+60]
   \   000000F6   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000F8   0x2010             MOVS     R0,#+16
   \   000000FA   0x.... 0x....      BL       `push`
    101            
    102            if(1 == flag_ramp)
   \   000000FE   0x....             LDR.N    R0,??DataTable1_19
   \   00000100   0x7800             LDRB     R0,[R0, #+0]
   \   00000102   0x2801             CMP      R0,#+1
   \   00000104   0xD119             BNE.N    ??CTL_isr_4
    103            {
    104              BZ_ON;
   \   00000106   0x2201             MOVS     R2,#+1
   \   00000108   0x210A             MOVS     R1,#+10
   \   0000010A   0x....             LDR.N    R0,??DataTable1_20  ;; 0x400ff100
   \   0000010C   0x.... 0x....      BL       LPLD_GPIO_Output_b
    105              
    106              line.flag_lose = 70; //坡道
   \   00000110   0x2046             MOVS     R0,#+70
   \   00000112   0x....             LDR.N    R1,??DataTable1_7
   \   00000114   0x7088             STRB     R0,[R1, #+2]
    107              if(sensor.data[3] > 25)
   \   00000116   0x....             LDR.N    R0,??DataTable1_8
   \   00000118   0x6C00             LDR      R0,[R0, #+64]
   \   0000011A   0x281A             CMP      R0,#+26
   \   0000011C   0xDB0F             BLT.N    ??CTL_isr_5
    108              {
    109                line.pos = 25*(sensor.data[2] - sensor.data[0])/sensor.data[3];
   \   0000011E   0x....             LDR.N    R0,??DataTable1_8
   \   00000120   0x6BC0             LDR      R0,[R0, #+60]
   \   00000122   0x....             LDR.N    R1,??DataTable1_8
   \   00000124   0x6B49             LDR      R1,[R1, #+52]
   \   00000126   0x1A40             SUBS     R0,R0,R1
   \   00000128   0x2119             MOVS     R1,#+25
   \   0000012A   0x4348             MULS     R0,R1,R0
   \   0000012C   0x....             LDR.N    R1,??DataTable1_8
   \   0000012E   0x6C09             LDR      R1,[R1, #+64]
   \   00000130   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000134   0x....             LDR.N    R1,??DataTable1_7
   \   00000136   0x8148             STRH     R0,[R1, #+10]
   \   00000138   0xE001             B.N      ??CTL_isr_5
    110              }
    111              else
    112              {
    113                
    114              }
    115            }
    116            else
    117            {
    118              DateAnalyse();
   \                     ??CTL_isr_4: (+1)
   \   0000013A   0x.... 0x....      BL       DateAnalyse
    119            }
    120            
    121            
    122              push(3,line.pos);  
   \                     ??CTL_isr_5: (+1)
   \   0000013E   0x....             LDR.N    R0,??DataTable1_7
   \   00000140   0x8941             LDRH     R1,[R0, #+10]
   \   00000142   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000144   0x2003             MOVS     R0,#+3
   \   00000146   0x.... 0x....      BL       `push`
    123            
    124            if ( flag_stop == 0 ) //无急停标志
   \   0000014A   0x....             LDR.N    R0,??DataTable1_21
   \   0000014C   0x7800             LDRB     R0,[R0, #+0]
   \   0000014E   0x2800             CMP      R0,#+0
   \   00000150   0xD11C             BNE.N    ??CTL_isr_6
    125            {
    126              
    127              S3010_CTL();
   \   00000152   0x.... 0x....      BL       S3010_CTL
    128              
    129              //20ms中断区
    130              if ( cnt >= 4 )
   \   00000156   0x....             LDR.N    R0,??DataTable1_11
   \   00000158   0x7800             LDRB     R0,[R0, #+0]
   \   0000015A   0x2804             CMP      R0,#+4
   \   0000015C   0xDB0B             BLT.N    ??CTL_isr_7
    131              {
    132                cnt = 0;
   \   0000015E   0x2000             MOVS     R0,#+0
   \   00000160   0x....             LDR.N    R1,??DataTable1_11
   \   00000162   0x7008             STRB     R0,[R1, #+0]
    133                LPLD_FTM_PWM_ChangeDuty(FTM1, FTM_Ch0, (uint32) ctl.S3010.out ); 
   \   00000164   0x....             LDR.N    R0,??DataTable1_1
   \   00000166   0x6B40             LDR      R0,[R0, #+52]
   \   00000168   0x.... 0x....      BL       __aeabi_f2uiz
   \   0000016C   0x0002             MOVS     R2,R0
   \   0000016E   0x2100             MOVS     R1,#+0
   \   00000170   0x....             LDR.N    R0,??DataTable1_22  ;; 0x40039000
   \   00000172   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    134                
    135              }
    136              
    137              motto_getsped();//测速
   \                     ??CTL_isr_7: (+1)
   \   00000176   0x.... 0x....      BL       motto_getsped
    138              
    139              if(1 == flag_bihuan)  //开环标志位
   \   0000017A   0x....             LDR.N    R0,??DataTable1_23
   \   0000017C   0x7800             LDRB     R0,[R0, #+0]
   \   0000017E   0x2801             CMP      R0,#+1
   \   00000180   0xD101             BNE.N    ??CTL_isr_8
    140              {
    141                ctl_sped();//速度控制
   \   00000182   0x.... 0x....      BL       ctl_sped
    142              }
    143              motto_set();//电机输出    
   \                     ??CTL_isr_8: (+1)
   \   00000186   0x.... 0x....      BL       motto_set
   \   0000018A   0xE009             B.N      ??CTL_isr_9
    144              
    145            }
    146            else
    147            {
    148              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch0, 0 );
   \                     ??CTL_isr_6: (+1)
   \   0000018C   0x2200             MOVS     R2,#+0
   \   0000018E   0x2100             MOVS     R1,#+0
   \   00000190   0x....             LDR.N    R0,??DataTable1_24  ;; 0x40038000
   \   00000192   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    149              LPLD_FTM_PWM_ChangeDuty(FTM0, FTM_Ch1, 0 );
   \   00000196   0x2200             MOVS     R2,#+0
   \   00000198   0x2101             MOVS     R1,#+1
   \   0000019A   0x....             LDR.N    R0,??DataTable1_24  ;; 0x40038000
   \   0000019C   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
    150                  
    151            }
    152            //此处是代码冗余
    153            safty_check();
   \                     ??CTL_isr_9: (+1)
   \   000001A0   0x.... 0x....      BL       safty_check
    154            
    155          
    156          // LPLD_GPIO_Output_b(PTD,1,1);
    157          
    158          }
   \   000001A4   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??cnt:
   \   00000000                      DS8 1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x3EC7AE14         DC32     0x3ec7ae14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     ctl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x3E99999A         DC32     0x3e99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x3ECCCCCD         DC32     0x3ecccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x3F99999A         DC32     0x3f99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x40C00000         DC32     0x40c00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     sensor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0xFFFFFEE6         DC32     0xfffffee6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     GUI

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     ??cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     LDC_data

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0xFFE85630         DC32     0xffe85630

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0xFFE82070         DC32     0xffe82070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0xFFE850B8         DC32     0xffe850b8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x........         DC32     cross_Enable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x........         DC32     flag_cross

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   0x........         DC32     ramp_Enable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_19:
   \   00000000   0x........         DC32     flag_ramp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_20:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_21:
   \   00000000   0x........         DC32     flag_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_22:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_23:
   \   00000000   0x........         DC32     flag_bihuan

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_24:
   \   00000000   0x40038000         DC32     0x40038000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   CTL_SEN_init
       8   CTL_isr
         8   -> DateAnalyse
         8   -> LDC1614_read_meas
         8   -> LPLD_FTM_PWM_ChangeDuty
         8   -> LPLD_GPIO_Output_b
         8   -> S3010_CTL
         8   -> __aeabi_f2uiz
         8   -> ctl_sped
         8   -> motto_getsped
         8   -> motto_set
         8   -> push
         8   -> ramp
         8   -> safty_check


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_18
       4  ??DataTable1_19
       4  ??DataTable1_2
       4  ??DataTable1_20
       4  ??DataTable1_21
       4  ??DataTable1_22
       4  ??DataTable1_23
       4  ??DataTable1_24
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
     158  CTL_SEN_init
     422  CTL_isr
       1  cnt
       1  cross_Enable
     176  ctl
       1  flag_bihuan
       1  flag_cross
       1  flag_ramp
       1  ramp_Enable

 
 179 bytes in section .bss
   3 bytes in section .data
 680 bytes in section .text
 
 680 bytes of CODE memory
 182 bytes of DATA memory

Errors: none
Warnings: none
