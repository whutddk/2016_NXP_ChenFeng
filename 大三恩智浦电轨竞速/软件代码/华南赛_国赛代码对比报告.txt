whutddk@whutddk-virtual-machine:/work/compare$ diff old new -r
diff -r old/BSP/FTM.c new/BSP/FTM.c
48c48
<                       753, //?????DUTY
---
>                       750, //?????DUTY
diff -r old/BSP/sysinit.c new/BSP/sysinit.c
22d21
<   
diff -r old/CTL/control.c new/CTL/control.c
25c25
<   ctl.motto.Ki = 6;
---
>   ctl.motto.Ki = 35;
36c36
<   sensor.min[1] = -249;  
---
>   sensor.min[1] = -270;  //249
59a60,61
>   
>   
62c64
<   sensor.data[0] = LDC_data[0] - 1550800;
---
>   sensor.data[0] = LDC_data[0] - 1589300;
66c68
<   sensor.data[1] = LDC_data[1] - 1564560;
---
>   sensor.data[1] = LDC_data[1] - 1559900;
76c78
<   sensor.data[2] = LDC_data[2] - 1552200;
---
>   sensor.data[2] = LDC_data[2] - 1570500;
79a82,94
>   
>   temp = LDC_READ(0x08);  
>   if(LDC_data[0]==0 && LDC_data[1]==0 && LDC_data[2]==0)
>   {
>     BZ_ON;
>     ctl.motto.v = 300;
>     LDC1614_init();
>     LDC1614_start_meas();
>     LPLD_LPTMR_DelayMs(10);
>   }
>   
>   push(13,temp);
>   
82c97
<     if(sensor.data[0] > 35 && sensor.data[1] > 190 && sensor.data[2] > 35)
---
>     if(sensor.data[0] > 35 && sensor.data[2] > 35)
104c119
<     BZ_ON;
---
>     //BZ_ON;
122c137,142
<     push(3,line.pos);  
---
>   if(line.pos > 210)//??????
>     line.pos = 210;
>   else if (line.pos < -210)
>     line.pos = -210;
>   
>   push(3,line.pos);  
126d145
<     
155d173
< 
diff -r old/CTL/ctl.h new/CTL/ctl.h
15c15,16
<   float Kp_M;
---
>   float Kp_M1;
>   float Kp_M2;
18c19,20
<   float Kd_M;
---
>   float Kd_M1;
>   float Kd_M2;
27,28c29
<   float KP;
<   float KD;
---
>   float KD[3];
47a49
> extern vuint16 temp; 
diff -r old/CTL/dirctl.c new/CTL/dirctl.c
9c9
<   
---
>   int i;
12,13c12
<     //155
<     if(line.pos > 110 || line.pos < -110)     //?????
---
>     if(line.pos > 140 || line.pos < -140)     //?????
17,20c16,20
<       
<       ctl.motto.KP = ctl.motto.Kp_B;
<       ctl.motto.KD = ctl.motto.Kd_B;
< 
---
>     }
>     else if(line.pos > 85 || line.pos < -85)     //?????
>     {
>       ctl.S3010.Kp = ctl.S3010.Kp_M2;
>       ctl.S3010.Kd = ctl.S3010.Kp_M2;
24,29c24,25
<       ctl.S3010.Kp = ctl.S3010.Kp_M;
<       ctl.S3010.Kd = ctl.S3010.Kd_M;
<       
<       ctl.motto.KP = ctl.motto.Kp_B;
<       ctl.motto.KD = ctl.motto.Kd_B;
< 
---
>       ctl.S3010.Kp = ctl.S3010.Kp_M1;
>       ctl.S3010.Kd = ctl.S3010.Kd_M1;
35,38d30
<       
<       
<       ctl.motto.KP = ctl.motto.Kp_S;
<       ctl.motto.KD = ctl.motto.Kd_S;
48a41,42
>   
>   
53d46
<   ctl.S3010.result[0] += ctl.S3010.Kd * (0.6*(float)(ctl.S3010.error[0]-ctl.S3010.error[1])+0.2*(float)(ctl.S3010.error[1]-ctl.S3010.error[2])+0.2*(float)(ctl.S3010.error[2]-ctl.S3010.error[3]));
55c48,51
<   if(1 == speed_up_Enable)
---
>   
>   ctl.S3010.KD[0] = ctl.S3010.error[0] - ctl.S3010.error[1];
>   
>   for(i=0;i<3;i++)
57,58c53,62
<     ctl.motto.v_error = abs(ctl.motto.KP * ctl.S3010.error[0]);
<     ctl.motto.v_error += abs(ctl.motto.KD * (0.6*(float)(ctl.S3010.error[0]-ctl.S3010.error[1])+0.2*(float)(ctl.S3010.error[1]-ctl.S3010.error[2])+0.2*(float)(ctl.S3010.error[2]-ctl.S3010.error[3])));
---
>     ctl.S3010.KD[i] = ctl.S3010.error[i] - ctl.S3010.error[i+1];
>     
>     if(ctl.S3010.KD[i] > 20)
>     {
>       ctl.S3010.KD[i] = 20;
>     }
>     else if(ctl.S3010.KD[i] < -20)
>     {
>       ctl.S3010.KD[i] = -20;
>     }
59a64,66
> 
>   ctl.S3010.result[1] = ctl.S3010.Kd * (0.6*(float)(ctl.S3010.KD[0])+0.2*(float)(ctl.S3010.KD[0])+0.2*(float)(ctl.S3010.KD[0]));
>   ctl.S3010.result[0] += ctl.S3010.result[1];
67,68c74,75
<   ctl.S3010.out = ctl.S3010.result[0] + 753;
<   if ( ctl.S3010.out > 842 )
---
>   ctl.S3010.out = ctl.S3010.result[0] + 750;
>   if ( ctl.S3010.out > 839 )
70c77
<     ctl.S3010.out = 842;
---
>     ctl.S3010.out = 839;
72c79
<   if ( ctl.S3010.out < 664)
---
>   if ( ctl.S3010.out < 661)
74c81
<     ctl.S3010.out = 664;
---
>     ctl.S3010.out = 661;
79,81c86,87
<   push(7,(ctl.S3010.out - 753 ));
< //  push(16,ctl.motto.v_error);
< 
---
>   push(7,(ctl.S3010.out - 750 ));
> //  push(12,ctl.S3010.result[1]);
diff -r old/CTL/motto.c new/CTL/motto.c
47a48,49
> boolean speed_down_flag;
> 
53c55,75
<     if(ctl.motto.v_error > 160)
---
>     if(line.pos < 52 && line.pos > -52)
>     {
>       ctl.motto.distance += ctl.motto.sped_cur;
>       
>       if(ctl.motto.distance >= 5000)
>       {
>         ctl.motto.v_error = 150;
>         
>         speed_down_flag = 1;//??????
>         if(ctl.motto.distance > 20000)
>         {
>           ctl.motto.distance = 8000;
>         }
>       }
>       else
>       {
>         Straight_Flag = 0;  
>       }
>     }
>     
>     else if(1 == speed_down_flag && abs(line.pos) < 62 )
55c77
<       ctl.motto.v_error = 160;
---
>         ctl.motto.v_error = 150 - (abs(line.pos) - 52) * 15;
57c79
<     else if(ctl.motto.v_error < 25)
---
>     else
59a82,83
>       ctl.motto.distance = 0;
>       speed_down_flag = 0;
61,62d84
<     
<     ctl.motto.v_error = 150 - ctl.motto.v_error;
65,67c87,93
<     ctl.motto.aim = ctl.motto.v + ctl.motto.v_error;
< 
<     
---
>   else
>   {
>     ctl.motto.v_error = 0;
>   }
>   ctl.motto.aim = ctl.motto.v + ctl.motto.v_error;
>   
>   
83,107c109
<    else if(ramp_Enable == 0)        //?????2m??????????μ?
<    {
<      ctl.motto.ramp += ctl.motto.sped_cur;
<      if(ctl.motto.ramp > 80000)
<      {
<        ctl.motto.ramp = 0;
<        ramp_Enable = 1;
<      }
<    }
<   
< //  push(11,ctl.motto.ramp/10);
<     
<  
<   
<   ctl.motto.error[1] =   ctl.motto.aim  - ctl.motto.sped_cur;
<   
<   ctl.motto.result[1]  = ctl.motto.Kp  * ( ctl.motto.error[1] - ctl.motto.error[0] );
<   ctl.motto.result[1] += ctl.motto.Ki  *   ctl.motto.error[1];
<   
<   ctl.motto.error[0] = ctl.motto.error[1];  
<   ctl.motto.out += ctl.motto.result[1];
< 
<   
<   
<   if(1 == ramp_cnt)
---
>   else if(ramp_Enable == 0)        //?????2m??????????μ?
109,125d110
<     if(ctl.motto.error[1] < -40)
<       if(ctl.motto.out > -1000)
<       ctl.motto.out = -1000;
<   }
<   push(4,ctl.motto.aim);
< 
< }
< 
< 
< 
< /*
< void ctl_sped() //????????????PI????
< {
<   
<   if(line.pos < 50 && line.pos > -50)
<   {   
<     ctl.motto.distance += ctl.motto.sped_cur;
127c112,113
<     if(ctl.motto.distance >= 3000)
---
>     ctl.motto.ramp += ctl.motto.sped_cur;
>     if(1 == speed_up_Enable)
129,136c115,119
<       Straight_Flag = 1;
<       
<       if(ctl.motto.distance > 20000)
<       {
<         ctl.motto.distance = 8000;
<       }
<     }  
<     else
---
>       if(ctl.motto.ramp < 9000)
>         ctl.motto.aim = ctl.motto.v + (ctl.motto.ramp / 60);
>     }
>     
>     if(ctl.motto.ramp > 80000)
138,145c121,123
<       Straight_Flag = 0;  
<     }  
<   }
<   
<   else
<   {
<     Straight_Flag = 0;
<     ctl.motto.distance = 0;
---
>       ctl.motto.ramp = 0;
>       ramp_Enable = 1;
>     }
147a126
>   //  push(11,ctl.motto.ramp/10);
150,162d128
<   if(Straight_Flag == 1)
<     
<   {
<     ctl.motto.aim = ctl.motto.v * 1.4;
<   // BZ_ON;
<   }
<   
<   else
<   {
<     ctl.motto.aim = ctl.motto.v;
<     //BZ_OFF;
<   }
<   
164a131,135
>   //  if(abs(ctl.motto.error[1]) > 50)
>   //  {
>   //    if(ctl.motto.error[1] > 50)
>   //      ctl.motto.out = ;
>   //  }
166,167c137,138
<   ctl.motto.result[1]  = (ctl.motto.Kp)  * ( ctl.motto.error[1] - ctl.motto.error[0] );
<   ctl.motto.result[1] += (ctl.motto.Ki)  *   ctl.motto.error[1];
---
>   ctl.motto.result[0]  = ctl.motto.Kp  * ( ctl.motto.error[1] - ctl.motto.error[0] );
>   ctl.motto.result[1] = ctl.motto.Ki  *   ctl.motto.error[1];
170c141
<   ctl.motto.out += ctl.motto.result[1];
---
>   ctl.motto.out += ctl.motto.result[0] + ctl.motto.result[1];
172c143,150
<     
---
>   
>   
>   if(1 == ramp_cnt)
>   {
>     if(ctl.motto.error[1] < -40)
>       if(ctl.motto.out > -1000)
>         ctl.motto.out = -1000;
>   }
174,175c152,154
< 
< }*/
\ 文件尾没有 newline 字符
---
>   push(11,ctl.motto.result[0]);
>   push(12,ctl.motto.result[1]);
> }
diff -r old/ITAC/freecars.c new/ITAC/freecars.c
136,139c136,142
<   ctl.S3010.Kp_M = UartData[3];
<   ctl.S3010.Kd_M = UartData[4];
<   ctl.S3010.Kp_B = UartData[5];
<   ctl.S3010.Kd_B = UartData[6];
---
>   ctl.S3010.Kp_M1 = UartData[3];
>   ctl.S3010.Kd_M1 = UartData[4];
>   ctl.S3010.Kp_M2 = UartData[5];
>   ctl.S3010.Kd_M2 = UartData[6];
>   ctl.S3010.Kp_B = UartData[7];
>   ctl.S3010.Kd_B = UartData[8];
>   
159c162,168
<     case(12):break;//F12
---
>     case(12):   
>       LDC1614_init();
>     LDC1614_start_meas();
>       LPLD_LPTMR_DelayMs(10);
> 
>     break;//F12
>     
diff -r old/ITAC/GUI.c new/ITAC/GUI.c
34c34
< float Dir_Buff[34]={    
---
> float Dir_Buff[44]={
38c38
<     
---
>   
45,49c45,51
<   0.1,      //KD_S
<   0.36,     //KP_M
<   0.3,      //KD_M
<   0.39,     //KP_B
<   0.5,      //KD_B
---
>   0.3,      //KD_S
>   0.36,     //KP_M1
>   0.5,      //KD_M1
>   0.37,     //KP_M2
>   0.7,      //KD_M2
>   0.39,      //KD_B
>   0.9,        //KD_B
52,54c54,55
<   0.34,//425  ???????
<   0.1,
<   0.36,
---
>   
>   0.34,//425  
56c57,59
<   0.39,
---
>   0.36,
>   0.7,
>   0.38,
57a61,62
>   0.4,
>   1,
60c65
<   0.1,
---
>   0.9,
62c67,69
<   1.2,
---
>   1,
>   0.39,
>   1.1,
66,67c73,75
<   0.34,//475    ++
<   0.1,
---
>   
>   0.35,//475    
>   1.2,
69c77,79
<   2,
---
>   1.3,
>   0.4,
>   1.7,//1.6
71c81
<   2.3,
---
>   1.9,//1.8
73,74c83,85
<   0.34,//500
<   0.3,
---
>   
>   0.36,//500
>   1.7,
76,78c87,91
<   2.6,
<   0.41,
<   2.8,
---
>   1.9,
>   0.4,
>   2.1,
>   0.42,
>   2.3,
80a94,96
> 
> boolean write_flash_flag;
> 
85a102
>   
104c121,131
<       if(GUI.page == 4)
---
>       if(GUI.page == 2 && GUI.point == 4)
>       {
>         GUI.para.endline_time -= 3;
>         if(GUI.para.endline_time < 13)
>         {
>           GUI.para.endline_time = 13;
>         }
>         write_flash_flag = 1;
>       }
>       
>       else if(GUI.page == 4)
153c180,191
<       if ( GUI.page == 5 )//????
---
>       if(GUI.page == 2 && GUI.point == 4)
>       {
>         GUI.para.endline_time += 3;
>         if(GUI.para.endline_time > 41)
>         {
>           GUI.para.endline_time = 41;
>         }
>         write_flash_flag = 1;
>         
>       }
>       
>       else if ( GUI.page == 5 )//????
159c197
<       if(GUI.page == 4)
---
>       else if(GUI.page == 4)
248a287
>             write_flash_flag = 1;
263,270c302
<                 case(4):
<                   GUI.para.endline_time += 3;
<                   if(GUI.para.endline_time > 40)
<                   {
<                     GUI.para.endline_time = 10;
<                   }
<                   break;
<                   
---
>                 
469a502,523
> }
> 
> 
> 
> //============??Flash??????=========================//
> void ReadFlash()
> {
>   int16 Date_Effective_Flag=0;
>   LPLD_Flash_Init();
>   LPLD_LPTMR_DelayMs(50);
>   
>   Date_Effective_Flag=flash_read(FLASH_TEST_SECTOR,0,int16);
>   if(-1!=Date_Effective_Flag)
>   {
>     GUI.para.endline_time = flash_read(FLASH_TEST_SECTOR,0,int16);
>     sensor.max[0]=flash_read(FLASH_TEST_SECTOR,20,int16);
>     sensor.max[1]=flash_read(FLASH_TEST_SECTOR,40,int16);
>     sensor.max[2]=flash_read(FLASH_TEST_SECTOR,60,int16);
>     sensor.min[0]=flash_read(FLASH_TEST_SECTOR,80,int16);
>     sensor.min[1]=flash_read(FLASH_TEST_SECTOR,100,int16);
>     sensor.min[2]=flash_read(FLASH_TEST_SECTOR,120,int16);
>   }
diff -r old/ITAC/GUI.h new/ITAC/GUI.h
4c4,9
< void portc_isr();
---
> #define FLASH_TEST_SECTOR   (255)
> #define FLASH_TEST_ADDR     (FLASH_TEST_SECTOR*2048)// FLASH_TEST_SECTOR*(2048)
> #define	flash_read(sectorNo,offset,type) (*(type *)((uint32)(((sectorNo)<<11) + (offset)))) //???????
> 
> 
> void portd_isr();
13a19
> void ReadFlash();
19c25
<   uint8 endline_time;
---
>   uint16 endline_time;
36c42
< extern float Dir_Buff[34];
---
> extern float Dir_Buff[44];
37a44,46
> 
> extern   boolean write_flash_flag;
> 
diff -r old/ITAC/key.c new/ITAC/key.c
24c24
<   key_inittype.GPIO_Pins = GPIO_Pin1 | GPIO_Pin5 | GPIO_Pin6 ;
---
>   key_inittype.GPIO_Pins = GPIO_Pin1 | GPIO_Pin5 | GPIO_Pin6 | GPIO_Pin15;
26,27c26,27
<   key_inittype.GPIO_PinControl = INPUT_PULL_UP ;//???????/???????????ж?
<   key_inittype.GPIO_Isr = NULL;
---
>   key_inittype.GPIO_PinControl = INPUT_PULL_UP | IRQC_FA;//???????/
>   key_inittype.GPIO_Isr = portd_isr;
29,31c29,32
< 
< //  key_inittype.GPIO_PTx = PTD;//?ж????????
< //  key_inittype.GPIO_Pins = GPIO_Pin1;
---
>   LPLD_GPIO_EnableIrq(key_inittype);
>   
>     //  key_inittype.GPIO_PTx = PTD;//?ж????????
>     //  key_inittype.GPIO_Pins = GPIO_Pin1;
diff -r old/ITAC/star.c new/ITAC/star.c
4a5,35
>   uint8 Flash_Result=0;
>   
>   if(write_flash_flag == 1)
>   {
>     DisableInterrupts;
>     
>     Flash_Result = LPLD_Flash_SectorErase(FLASH_TEST_ADDR);
>     while(Flash_Result!=0)
>     {
>       BZ_ON;
>       LPLD_LPTMR_DelayMs(500);
>       Flash_Result=LPLD_Flash_SectorErase(FLASH_TEST_ADDR);  
>       BZ_OFF;
>     }
>     
>     flash_write(FLASH_TEST_SECTOR,0,GUI.para.endline_time);
>     
>     flash_write(FLASH_TEST_SECTOR,20,sensor.max[0]);
>     flash_write(FLASH_TEST_SECTOR,40,sensor.max[1]);
>     flash_write(FLASH_TEST_SECTOR,60,sensor.max[2]);
>     flash_write(FLASH_TEST_SECTOR,80,sensor.min[0]);
>     flash_write(FLASH_TEST_SECTOR,100,sensor.min[1]);
>     flash_write(FLASH_TEST_SECTOR,120,sensor.min[2]);
>     
>     EnableInterrupts;
>     
>   }
>   
>   
>   
>   
17,18c48,49
<       ctl.S3010.Kp_S = Dir_Buff[GUI.para.AI*6-14];
<       ctl.S3010.Kd_S = Dir_Buff[GUI.para.AI*6-13];
---
>       ctl.S3010.Kp_S = Dir_Buff[GUI.para.AI*8-20];
>       ctl.S3010.Kd_S = Dir_Buff[GUI.para.AI*8-19];
20,21c51,56
<       ctl.S3010.Kp_M = Dir_Buff[GUI.para.AI*6-12];
<       ctl.S3010.Kd_M = Dir_Buff[GUI.para.AI*6-11];
---
>       ctl.S3010.Kp_M1 = Dir_Buff[GUI.para.AI*8-18];
>       ctl.S3010.Kd_M1 = Dir_Buff[GUI.para.AI*8-17];
>           
>       ctl.S3010.Kp_M2 = Dir_Buff[GUI.para.AI*8-16];
>       ctl.S3010.Kd_M2 = Dir_Buff[GUI.para.AI*8-15];
> 
23,24c58,59
<       ctl.S3010.Kp_B = Dir_Buff[GUI.para.AI*6-10];
<       ctl.S3010.Kd_B = Dir_Buff[GUI.para.AI*6-9];
---
>       ctl.S3010.Kp_B = Dir_Buff[GUI.para.AI*8-14];
>       ctl.S3010.Kd_B = Dir_Buff[GUI.para.AI*8-13];
75,76c110,111
< /*
< void portc_isr()
---
> 
> void portd_isr()
79,83c114
<   i = GUI.para.endline_time * 1000;
<   
<   j = LPLD_GPIO_IsPinxExt(PORTD, GPIO_Pin15);
<   if( j > 0)
<   {
---
>     i = GUI.para.endline_time * 1000;
85,94c116,130
<   
<   if(1 == GUI.para.endline &&  timer_cnt > i)  //?????????
<   {
<     flag_bihuan = 0;
<     ctl.motto.out = 0;
<     timer_cnt = 0;
<   }
<   bz_set(datarec);
<   }
< }*/
---
>     
>     j = 0;
>     j = PTD1_I + PTD5_I + PTD6_I + PTD15_I;
>     
>     if( j < 3)
>     {
>       if(1 == GUI.para.endline &&  timer_cnt > i)  //?????????
>       {
>         flag_bihuan = 0;
>         ctl.motto.out = 0;
>         timer_cnt = 0;
>       }
>       bz_set(datarec);
>     }
> }
diff -r old/MAIN/include.h new/MAIN/include.h
11c11
< #define USE_UART5 OFF
---
> #define USE_UART5 ON
diff -r old/MAIN/main.c new/MAIN/main.c
3c3
< 
---
> // 1??
14d13
<   uint16 i,j;
19c18
<   
---
>   ReadFlash();
54,69c53,68
<     i = GUI.para.endline_time * 1000;
<     LPLD_GPIO_ClearIntFlag(PORTD);
<     
<     j = 0;
<     j = PTD1_I + PTD5_I + PTD6_I;
<     
<     if(j < 2)
<     {
<       if(1 == GUI.para.endline &&  timer_cnt > i)  //?????????
<       {
<         flag_bihuan = 0;
<         ctl.motto.out = 0;
<         timer_cnt = 0;
<       }
<       bz_set(datarec);
<     }
---
> //    i = GUI.para.endline_time * 1000;
> ////    LPLD_GPIO_ClearIntFlag(PORTD);
> //    
> //    j = 0;
> //    j = PTD1_I + PTD5_I + PTD6_I + PTD15_I;
> //    
> //    if( j < 3)
> //    {
> //      if(1 == GUI.para.endline &&  timer_cnt > i)  //?????????
> //      {
> //        flag_bihuan = 0;
> //        ctl.motto.out = 0;
> //        timer_cnt = 0;
> //      }
> //      bz_set(datarec);
> //    }
diff -r old/SENSOR/del_sensor.c new/SENSOR/del_sensor.c
26c26
<     sensor.data[0] = LDC_data[0] - 1550800;
---
>     sensor.data[0] = LDC_data[0] - 1589300;
30c30
<     sensor.data[1] = LDC_data[1] - 1564560;
---
>     sensor.data[1] = LDC_data[1] - 1559900;
34c34
<     sensor.data[2] = LDC_data[2] - 1552200;
---
>     sensor.data[2] = LDC_data[2] - 1570500;
50c50
<     if(sensor.search[0] > sensor.max[0] && sensor.search[0]  < 600)
---
>     if(sensor.search[0] > sensor.max[0] && sensor.search[0]  < 900)
55c55
<     else if(sensor.search[0] < sensor.min[0] && sensor.search[0] > -600)
---
>     else if(sensor.search[0] < sensor.min[0] && sensor.search[0] > -900)
62c62
<     if(sensor.search[1] > sensor.max[1] && sensor.search[1]  < 600 )
---
>     if(sensor.search[1] > sensor.max[1] && sensor.search[1]  < 900 )
67c67
<     else if(sensor.search[1] < sensor.min[1] && sensor.search[1] > -600)
---
>     else if(sensor.search[1] < sensor.min[1] && sensor.search[1] > -900)
73c73
<     if(sensor.search[2] > sensor.max[2] && sensor.search[2]  < 600)
---
>     if(sensor.search[2] > sensor.max[2] && sensor.search[2]  < 900)
78c78
<     else if(sensor.search[2] < sensor.min[2] && sensor.search[2] > -600)
---
>     else if(sensor.search[2] < sensor.min[2] && sensor.search[2] > -900)
150c150
<   sensor.offset[0] = sensor.collect[0] - 1550800;
---
>   sensor.offset[0] = sensor.collect[0] - 1589300;
153c153
<   sensor.offset[1] = sensor.collect[1] - 1564560;
---
>   sensor.offset[1] = sensor.collect[1] - 1559900;
157c157
<   sensor.offset[2] = sensor.collect[2] - 1552200;
---
>   sensor.offset[2] = sensor.collect[2] - 1570500;
163a164
> 
166a168
>   uint16 temp_threshold;
183c185,187
<   push(12,sensor.data_sum);
---
>   //  push(12,sensor.data_sum);
>   
>   temp_threshold = ((sensor.max[0] + sensor.max[1])/ 2 ) * 3;
185c189
<   if(sensor.data_buff[i]>800 && sensor.data_buff[i]<5000)
---
>   if(sensor.data_buff[i] > temp_threshold && sensor.data_buff[i]<5000)
188c192
<       if(sensor.data_buff[i]>900 && sensor.data[3] > 500)
---
>       if(sensor.data_buff[i] > (temp_threshold - 100)  && sensor.data[3] > (sensor.max[0] * 1.5))
191c195
<   else if(sensor.data_buff[i] < 600)
---
>   else if(sensor.data_buff[i] < sensor.max[0] + 80)
194c198
<       if(sensor.data_buff[i] < 700)
---
>       if(sensor.data_buff[i] < (sensor.max[0] + 180))
278c282
<     sensor.error[1] = (int16)(sensor.error[1] * (-249.0) / sensor.min[1] );
---
>     sensor.error[1] = (int16)(sensor.error[1] * (-270.0) / sensor.min[1] );
305c309
<   if(sensor.error[0] < 8 && sensor.error[0] > -8 && sensor.error[1] < 9 && sensor.error[1] > -8
---
>   if(sensor.error[0] < 10 && sensor.error[0] > -10 && sensor.error[1] < 10 && sensor.error[1] > -10
315c319
<   else if( sensor.error[1] <=  7  && sensor.error[2] < -5 && (line.flag_road == 0||line.flag_road == 2))
---
>   else if( sensor.error[1] <=  6  && sensor.error[2] < -5 && (line.flag_road == 0||line.flag_road == 2))
333c337
<   else if(sensor.error[1] > 7 && sensor.error[2] < 0 
---
>   else if(sensor.error[1] > 6 && sensor.error[2] < 0 
360c364
<   else if(sensor.error[0] > 7  && sensor.error[2] >= 0
---
>   else if(sensor.error[0] > 6  && sensor.error[2] >= 0
386c390
<   else if(sensor.error[0] <= 7  && sensor.error[2] > 1 && (line.flag_road == 1||line.flag_road == 3))
---
>   else if(sensor.error[0] <= 6  && sensor.error[2] > 1 && (line.flag_road == 1||line.flag_road == 3))
